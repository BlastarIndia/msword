Abort	asm\RESN.ASM	/^Abort
AddDcbToLprgbst	asm\STTBN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@AddDcbToLprgbst
AdjustHplc	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@AdjustHplc
AdjustHplcCps	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@AdjustHplcCps
AdjustHplcCpsToLim	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@AdjustHplcCpsToLim
AssertHForNative	asm\ASSERTH.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@AssertHForNative
AuxOut	asm\AUXOUT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@AuxOut
BltInPlc	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@BltInPlc
BreakPoint	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@BreakPoint
CacheParaCa	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CacheParaCa
CchCopyLpszCchMax	asm\RESN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CchCopyLpszCchMax
CchCopySz	asm\RESN2.ASM	/^CchCopySz
CchCurSzPathNat	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CchCurSzPathNat
CchNonZeroPrefix	asm\RESN2.ASM	/^CchNonZeroPrefix
CchReadDoshnd	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CchReadDoshnd
CchSz	asm\RESN2.ASM	/^CchSz
CchWriteDoshnd	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CchWriteDoshnd
ChFetch	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ChFetch
ChFetchNonVanish	asm\FORMULAN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ChFetchNonVanish
ChFromComm	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ChFromComm
ChUpper	asm\RESN2.ASM	/^ChUpper
ChangeProgressReport	asm\PROMPTN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ChangeProgressReport
CmdBold	asm\CMDLOOKN.ASM	/^CmdBold
CmdDULine	asm\CMDLOOKN.ASM	/^CmdDULine
CmdHideText	asm\CMDLOOKN.ASM	/^CmdHideText
CmdItalic	asm\CMDLOOKN.ASM	/^CmdItalic
CmdLookCommon	asm\CMDLOOKN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CmdLookCommon
CmdParaBoth	asm\CMDLOOKN.ASM	/^CmdParaBoth
CmdParaCenter	asm\CMDLOOKN.ASM	/^CmdParaCenter
CmdParaClose	asm\CMDLOOKN.ASM	/^CmdParaClose
CmdParaLeft	asm\CMDLOOKN.ASM	/^CmdParaLeft
CmdParaOpen	asm\CMDLOOKN.ASM	/^CmdParaOpen
CmdParaRight	asm\CMDLOOKN.ASM	/^CmdParaRight
CmdSmallCaps	asm\CMDLOOKN.ASM	/^CmdSmallCaps
CmdSpace1	asm\CMDLOOKN.ASM	/^CmdSpace1
CmdSpace15	asm\CMDLOOKN.ASM	/^CmdSpace15
CmdSpace2	asm\CMDLOOKN.ASM	/^CmdSpace2
CmdSubscript	asm\CMDLOOKN.ASM	/^CmdSubscript
CmdSuperscript	asm\CMDLOOKN.ASM	/^CmdSuperscript
CmdULine	asm\CMDLOOKN.ASM	/^CmdULine
CmdWULine	asm\CMDLOOKN.ASM	/^CmdWULine
ColorTransRow	asm\GRBITX.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ColorTransRow
CommSzLib	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CommSzLib
CompletelyAdjustHplcCps	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CompletelyAdjustHplcCps
CopyMultPlc	asm\CLSPLCN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CopyMultPlc
CpFirstNonBlank	asm\FORMULAN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CpFirstNonBlank
CpFromIchPcr	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@CpFromIchPcr
CpMac1Doc	asm\RESN2.ASM	/^CpMac1Doc
CpMac2Doc	asm\RESN2.ASM	/^CpMac2Doc
CpMacDoc	asm\RESN2.ASM	/^CpMacDoc
CpMacDocEdit	asm\RESN2.ASM	/^CpMacDocEdit
CpMacDocEngine	asm\RESN2.ASM	/^CpMacDocEngine
CpMax	asm\RESN.ASM	/^CpMax
CpMin	asm\RESN.ASM	/^CpMin
CpPlc	asm\RESN.ASM	/^CpPlc
DFC265	asm\DISP1N.ASM	/^DFC265
DLdC	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@DLdC
DaGetFileModeSz	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@DaGetFileModeSz
DcpCa	asm\RESN2.ASM	/^DcpCa
DldHp	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@DldHp
DocDotMother	asm\FETCHN2.ASM	/^DocDotMother
DocMother	asm\FETCHN2.ASM	/^DocMother
DosxError	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@DosxError
DrawRevBar	asm\DISP1N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@DrawRevBar
DrcToRc	asm\RESN2.ASM	/^DrcToRc
DrclToRcw	asm\RESN2.ASM	/^DrclToRcw
DrcpToRcl	asm\RESN2.ASM	/^DrcpToRcl
DrcpToRcw	asm\RESN2.ASM	/^DrcpToRcw
DstHp	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@DstHp
DwSeekDw	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@DwSeekDw
DxpFromCh	asm\FORMATN.ASM	/^DxpFromCh
ETOX	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ETOX
EXP	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@EXP
EcDeleteSzFfname	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@EcDeleteSzFfname
EcRenameSzFfname	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@EcRenameSzFfname
FAbsPap	asm\FETCHN3.ASM	/^FAbsPap
FAlpha	asm\RESN2.ASM	/^FAlpha
FAlphaNum	asm\RESN2.ASM	/^FAlphaNum
FCloseDoshnd	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FCloseDoshnd
FCreateTempFileLsz	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FCreateTempFileLsz
FDigit	asm\RESN2.ASM	/^FDigit
FDoshndIsFile	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FDoshndIsFile
FEmptyRc	asm\RESN2.ASM	/^FEmptyRc
FFileRemote	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FFileRemote
FFirst	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FFirst
FFirst	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FFirst
FHplcNil	asm\RESN.ASM	/^FHplcNil
FInCa	asm\FETCHN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FInCa
FLower	asm\RESN2.ASM	/^FLower
FMakeStzPath	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FMakeStzPath
FMatchChp	asm\SEARCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FMatchChp
FMatchPap	asm\SEARCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FMatchPap
FNativeInit	asm\NATINIT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FNativeInit
FNeNcRgch	asm\RESN2.ASM	/^FNeNcRgch
FNeNcSt	asm\RESN2.ASM	/^FNeNcSt
FNeNcSz	asm\RESN2.ASM	/^FNeNcSz
FNeRgch	asm\RESN.ASM	/^FNeRgch
FNeRgw	asm\RESN.ASM	/^FNeRgw
FNeSt	asm\RESN.ASM	/^FNeSt
FNext	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FNext
FNext	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FNext
FOsfnRemote	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FOsfnRemote
FRemoveStzPath	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FRemoveStzPath
FScrollOK	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FScrollOK
FSectRc	asm\RESN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FSectRc
FSetCurStzPath	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FSetCurStzPath
FSetRgchDiff	asm\RESN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FSetRgchDiff
FStcpEntryIsNull	asm\RESN2.ASM	/^FStcpEntryIsNull
FUpper	asm\RESN2.ASM	/^FUpper
FcFromPn	asm\RESN2.ASM	/^FcFromPn
FetchCpAndPara	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FetchCpAndPara
FetchCpAndParaCa	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FetchCpAndParaCa
FillBytePattern	asm\NATINIT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FillBytePattern
FindClose	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@FindClose
GetPlc	asm\RESN.ASM	/^GetPlc
GetPsOfSn	asm\RIP.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@GetPsOfSn
GetStFromSttb	asm\RESN2.ASM	/^GetStFromSttb
GlobalMemInit	asm\NATINIT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@GlobalMemInit
HpInPl	asm\RESN2.ASM	/^HpInPl
HpOfBptbExt	asm\FILEWINN.ASM	/^HpOfBptbExt
HpstFromSttb	asm\RESN2.ASM	/^HpstFromSttb
IInPlc	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@IInPlc
IInPlc2	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@IInPlc2
IInPlc2Mult	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@IInPlc2Mult
IInPlcCheck	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@IInPlcCheck
IInPlcMult	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@IInPlcMult
IInPlcQuick	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@IInPlcQuick
IInPlcRef	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@IInPlcRef
IMacPlc	asm\RESN.ASM	/^IMacPlc
IScanLprgw	asm\RESN2.ASM	/^IScanLprgw
IbstFindSt	asm\RESN2.ASM	/^IbstFindSt
InitFvb	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@InitFvb
InitFvbBufs	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@InitFvbBufs
InstallInt3FHandler	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@InstallInt3FHandler
InstallInt3FHandler	asm\RESN.ASM	/^InstallInt3FHandler
InstallInt3Handler	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@InstallInt3Handler
Int3FHandler	asm\INT3F.ASM	/^Int3FHandler
Int3Handler	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@Int3Handler
LBreak	asm\FORMATN.ASM	/^LBreak
LBreakOppR	asm\FORMATN.ASM	/^LBreakOppR
LChCRJ	asm\FORMATN.ASM	/^LChCRJ
LChColumnBreak	asm\FORMATN.ASM	/^LChColumnBreak
LChComma	asm\FORMATN.ASM	/^LChComma
LChEop	asm\FORMATN.ASM	/^LChEop
LChFormula	asm\FORMATN.ASM	/^LChFormula
LChHyphen	asm\FORMATN.ASM	/^LChHyphen
LChLeftParen	asm\FORMATN.ASM	/^LChLeftParen
LChNonBreakSpace	asm\FORMATN.ASM	/^LChNonBreakSpace
LChNonReqHyphen	asm\FORMATN.ASM	/^LChNonReqHyphen
LChNull	asm\FORMATN.ASM	/^LChNull
LChReturn	asm\FORMATN.ASM	/^LChReturn
LChRightParen	asm\FORMATN.ASM	/^LChRightParen
LChSect	asm\FORMATN.ASM	/^LChSect
LChSpace	asm\FORMATN.ASM	/^LChSpace
LChTab	asm\FORMATN.ASM	/^LChTab
LChrT	asm\FORMATN.ASM	/^LChrT
LDxtDef	asm\FORMATN.ASM	/^LDxtDef
LDxtHaveCh	asm\FORMATN.ASM	/^LDxtHaveCh
LDxtHaveDxp	asm\FORMATN.ASM	/^LDxtHaveDxp
LDxtPChar	asm\FORMATN.ASM	/^LDxtPChar
LDxtTopOfLoop	asm\FORMATN.ASM	/^LDxtTopOfLoop
LEndBreak0	asm\FORMATN.ASM	/^LEndBreak0
LEndFormatLine	asm\FORMATN.ASM	/^LEndFormatLine
LEndJ	asm\FORMATN.ASM	/^LEndJ
LEndNoJ	asm\FORMATN.ASM	/^LEndNoJ
LEol	asm\FORMATN.ASM	/^LEol
LFetch	asm\FORMATN.ASM	/^LFetch
LGetTime	asm\RESN.ASM	/^LGetTime
LLineHt	asm\FORMATN.ASM	/^LLineHt
LN	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN
LN_AddDcpToCps	asm\EDITN.ASM	/^LN_AddDcpToCps
LN_AdjustHplcedlCps	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_AdjustHplcedlCps
LN_AdjustSels	asm\EDITN.ASM	/^LN_AdjustSels
LN_ApplyChpxTransforms	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_ApplyChpxTransforms
LN_BFromFcCore	asm\FETCHN3.ASM	/^LN_BFromFcCore
LN_CacheParaLbs	asm\LAYOUT2N.ASM	/^LN_CacheParaLbs
LN_CacheSectL	asm\LAYOUT2N.ASM	/^LN_CacheSectL
LN_CheckRgcpFetch	asm\SEARCHN.ASM	/^LN_CheckRgcpFetch
LN_ClearCSVariables	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_ClearCSVariables
LN_CloseTns	asm\EDITN.ASM	/^LN_CloseTns
LN_CloseUpPlc	asm\EDITN.ASM	/^LN_CloseUpPlc
LN_CpFromPlcIcp	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_CpFromPlcIcp
LN_CpMacDocPlbs	asm\LAYOUT2N.ASM	/^LN_CpMacDocPlbs
LN_CpPlc	asm\LAYOUT2N.ASM	/^LN_CpPlc
LN_DoPrmSgc	asm\FETCHN3.ASM	/^LN_DoPrmSgc
LN_DrawChVis	asm\DISP1N2.ASM	/^LN_DrawChVis
LN_DxuExpand	asm\FORMATN2.ASM	/^LN_DxuExpand
LN_EndULPast	asm\DISP1N.ASM	/^LN_EndULPast
LN_FDoTns	asm\EDITN.ASM	/^LN_FDoTns
LN_FFieldsInPca	asm\EDITN2.ASM	/^LN_FFieldsInPca
LN_FFindSeg	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FFindSeg
LN_FFindSymbName	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FFindSymbName
LN_FGetConstSymb	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FGetConstSymb
LN_FGetPcodeSegName	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FGetPcodeSegName
LN_FGetSegSymb	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FGetSegSymb
LN_FGetSymbol	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FGetSymbol
LN_FInCa	asm\FETCHN2.ASM	/^LN_FInCa
LN_FMatchChp	asm\SEARCHN.ASM	/^LN_FMatchChp
LN_FMatchPap	asm\SEARCHN.ASM	/^LN_FMatchPap
LN_FMatchWhiteSpace	asm\SEARCHN.ASM	/^LN_FMatchWhiteSpace
LN_FNotSelectFont	asm\FORMATN2.ASM	/^LN_FNotSelectFont
LN_FPrintPcodeAddress	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FPrintPcodeAddress
LN_FPrintToolboxName	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FPrintToolboxName
LN_FUpdTableDr	asm\DISPTBN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FUpdTableDr
LN_FetchCpPccpVisibleBackward	asm\SEARCHN.ASM	/^LN_FetchCpPccpVisibleBackward
LN_FillLinesUntil	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_FillLinesUntil
LN_FreezeHpEdit	asm\EDITN2.ASM	/^LN_FreezeHpEdit
LN_GetCellCps	asm\FETCHN3.ASM	/^LN_GetCellCps
LN_GetExeHead	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_GetExeHead
LN_GetPsOfSn	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_GetPsOfSn
LN_GetSnMac	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_GetSnMac
LN_GetTlbxMac	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_GetTlbxMac
LN_HOpenDbgScreen	asm\INT3F.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_HOpenDbgScreen
LN_HpchFromFc	asm\FETCHN3.ASM	/^LN_HpchFromFc
LN_HpchGetPn	asm\FETCHN3.ASM	/^LN_HpchGetPn
LN_IInPlc	asm\LAYOUT2N.ASM	/^LN_IInPlc
LN_IbpCacheFilePage	asm\FETCHN3.ASM	/^LN_IbpCacheFilePage
LN_IcpInRgcp	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_IcpInRgcp
LN_IcpInRgcpAdjusted	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_IcpInRgcpAdjusted
LN_IpcdSplit	asm\EDITN2.ASM	/^LN_IpcdSplit
LN_LpFromPossibleHq	asm\RESN.ASM	/^LN_LpFromPossibleHq
LN_LprgcpForPlc	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_LprgcpForPlc
LN_LprgcpForPlc	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_LprgcpForPlc
LN_LrgbstFromSttb	asm\RESN.ASM	/^LN_LrgbstFromSttb
LN_LrpInPlCur	asm\LAYOUT2N.ASM	/^LN_LrpInPlCur
LN_MapStc	asm\FETCHN3.ASM	/^LN_MapStc
LN_MeltHpEdit	asm\EDITN2.ASM	/^LN_MeltHpEdit
LN_NMultDiv	asm\FORMATN.ASM	/^LN_NMultDiv
LN_NMultDivCzaInch	asm\LAYOUT2N.ASM	/^LN_NMultDivCzaInch
LN_PdodDocCa	asm\EDITN2.ASM	/^LN_PdodDocCa
LN_PdodDocEdit	asm\EDITN2.ASM	/^LN_PdodDocEdit
LN_PdodDocL	asm\LAYOUT2N.ASM	/^LN_PdodDocL
LN_PdodOrNilFromDoc	asm\FETCHN2.ASM	/^LN_PdodOrNilFromDoc
LN_PfceLruGet	asm\FORMATN2.ASM	/^LN_PfceLruGet
LN_PnFromPlcbteFc	asm\FETCHN2.ASM	/^LN_PnFromPlcbteFc
LN_PostTn	asm\EDITN.ASM	/^LN_PostTn
LN_PxsInit	asm\EDITN.ASM	/^LN_PxsInit
LN_ReloadSb	asm\FETCHN2.ASM	/^LN_ReloadSb
LN_ReloadSbFetch	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_ReloadSbFetch
LN_SetEsFetch	asm\SEARCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_SetEsFetch
LN_SetEsSiFetch	asm\FORMATN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_SetEsSiFetch
LN_StackAdjust	asm\RESN.ASM	/^LN_StackAdjust
LN_UnstackLbs	asm\LAYOUT2N.ASM	/^LN_UnstackLbs
LN_XDelFndSedPgdPad	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_XDelFndSedPgdPad
LN_XDeleteStruct	asm\EDITN2.ASM	/^LN_XDeleteStruct
LN_XRepl1	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LN_XRepl1
LN_XaFromXl	asm\LAYOUT2N.ASM	/^LN_XaFromXl
LN_YlFromYa	asm\LAYOUT2N.ASM	/^LN_YlFromYa
LNewRun	asm\FORMATN.ASM	/^LNewRun
LNoDxtDef	asm\FORMATN.ASM	/^LNoDxtDef
LNoDxtHaveCh	asm\FORMATN.ASM	/^LNoDxtHaveCh
LNoDxtHaveDxp	asm\FORMATN.ASM	/^LNoDxtHaveDxp
LNoDxtPChar	asm\FORMATN.ASM	/^LNoDxtPChar
LNoDxtTopOfLoop	asm\FORMATN.ASM	/^LNoDxtTopOfLoop
LNonBreakHyphen	asm\FORMATN.ASM	/^LNonBreakHyphen
LNonDefaultCh	asm\FORMATN.ASM	/^LNonDefaultCh
LNotFirstLine	asm\FORMATN.ASM	/^LNotFirstLine
LOGNAT	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LOGNAT
LPushMacroArgs	asm\EXPN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LPushMacroArgs
LRghEngine	asm\RESN.ASM	/^LRghEngine
LVanish	asm\FORMATN.ASM	/^LVanish
LVanish1	asm\FORMATN.ASM	/^LVanish1
LbcCmpLbox	asm\DIALOG1N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LbcCmpLbox
LcbDiskFreeSpace	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LcbDiskFreeSpace
LongToSz	asm\AUXOUT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LongToSz
LowerRgch	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@LowerRgch
MarkSel	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@MarkSel
MemUsed	asm\EXPN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@MemUsed
MonoStrBltRow	asm\GRBITX.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@MonoStrBltRow
MoveCmds	asm\MOVECMDS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@MoveCmds
NMultDiv	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@NMultDiv
N_AddVisiSpaces	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_AddVisiSpaces
N_AdjustCp	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_AdjustCp
N_AdjustHplcedlCps	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_AdjustHplcedlCps
N_ApplyPrlSgc	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ApplyPrlSgc
N_BFromFc	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_BFromFc
N_CachePara	asm\FETCHN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CachePara
N_CacheParaCore	asm\FETCHN2.ASM	/^N_CacheParaCore
N_CacheParaL	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CacheParaL
N_CacheSectL	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CacheSectL
N_CbGenChpxFromChp	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CbGenChpxFromChp
N_CbGenPapxFromPap	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CbGenPapxFromPap
N_CbGenPrl	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CbGenPrl
N_CbGrpprlProp	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CbGrpprlProp
N_ChMapSpecChar	asm\RTFINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ChMapSpecChar
N_ClFormatLines	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ClFormatLines
N_CloseTns	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CloseTns
N_CopyHdtLrs	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CopyHdtLrs
N_CopyLbs	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CopyLbs
N_CopyLrs	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CopyLrs
N_CpFormatFrom	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CpFormatFrom
N_CpSearchSz	asm\SEARCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CpSearchSz
N_CpSearchSzBackward	asm\SEARCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CpSearchSzBackward
N_CpVisibleBackCpField	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CpVisibleBackCpField
N_CpVisibleCpField	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_CpVisibleCpField
N_DcpSkipFieldChPflcd	asm\FIELDFMN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_DcpSkipFieldChPflcd
N_DisplayFli	asm\DISP1N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_DisplayFli
N_DisplayFliCore	asm\DISP1N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_DisplayFliCore
N_DoPrmSgc	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_DoPrmSgc
N_DrawInsertLine	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_DrawInsertLine
N_DxaFromDxp	asm\RESN.ASM	/^N_DxaFromDxp
N_DxpFromDxa	asm\RESN.ASM	/^N_DxpFromDxa
N_EraseInDr	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_EraseInDr
N_FAbortLayout	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FAbortLayout
N_FAddRun	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FAddRun
N_FAssignLr	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FAssignLr
N_FCpVisiInOutline	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FCpVisiInOutline
N_FDoTns	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FDoTns
N_FFillRgwWithSeqLevs	asm\FIELDSPN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FFillRgwWithSeqLevs
N_FGetFtnBreak	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FGetFtnBreak
N_FGetParaState	asm\FETCH2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FGetParaState
N_FGraphicsFcidToPlf	asm\FORMATN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FGraphicsFcidToPlf
N_FInTableDocCp	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FInTableDocCp
N_FInsertInPlc	asm\CLSPLCN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FInsertInPlc
N_FInsertRgch	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FInsertRgch
N_FMarkLine	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FMarkLine
N_FNewChpIns	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FNewChpIns
N_FOpenPlc	asm\CLSPLCN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FOpenPlc
N_FRepl1	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FRepl1
N_FReplace	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FReplace
N_FReplaceCps	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FReplaceCps
N_FSearchRgrsym	asm\RTFSUBSN.ASM	/^N_FSearchRgrsym
N_FShowResultPflcdFvc	asm\FIELDFMN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FShowResultPflcdFvc
N_FStretchPlc	asm\CLSPLCN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FStretchPlc
N_FUpdTableDr	asm\DISPTBN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FUpdTableDr
N_FUpdateDr	asm\DISP2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FUpdateDr
N_FUpdateTable	asm\DISPTBN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FUpdateTable
N_FVisibleCp	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FVisibleCp
N_FWidowControl	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FWidowControl
N_FcAppendRgchToFn	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FcAppendRgchToFn
N_FetchCp	asm\FETCHN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FetchCp
N_FetchCpPccpVisible	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FetchCpPccpVisible
N_FetchVisibleRgch	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FetchVisibleRgch
N_FfcFormatFieldPdcp	asm\FIELDFMN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FfcFormatFieldPdcp
N_FillIfldFlcd	asm\FIELDFMN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FillIfldFlcd
N_FormatDrLine	asm\FORMATN.ASM	/^N_FormatDrLine
N_FormatLine	asm\FORMATN.ASM	/^N_FormatLine
N_FormatLineCommon	asm\FORMATN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FormatLineCommon
N_FormatLineCore	asm\FORMATN.ASM	/^N_FormatLineCore
N_FormatLineDxa	asm\FORMATN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FormatLineDxa
N_FrameEasyTable	asm\DISPTBN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_FrameEasyTable
N_FreePdrf	asm\RESN2.ASM	/^N_FreePdrf
N_GetCpFirstCpLimDisplayPara	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_GetCpFirstCpLimDisplayPara
N_GetIfldFlcd	asm\FIELDFMN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_GetIfldFlcd
N_HpchFromFc	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_HpchFromFc
N_HpchGetPn	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_HpchGetPn
N_HwwdWw	asm\RESN2.ASM	/^N_HwwdWw
N_IbpCacheFilePage	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_IbpCacheFilePage
N_IbpLru	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_IbpLru
N_IbstFindSzFfn	asm\RESN2.ASM	/^N_IbstFindSzFfn
N_IfldFromDocCp	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_IfldFromDocCp
N_IfldInsertDocCp	asm\FIELDCRN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_IfldInsertDocCp
N_IfrdGatherFtnRef	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_IfrdGatherFtnRef
N_InvalCaFierce	asm\EDITN2.ASM	/^N_InvalCaFierce
N_IpcdSplit	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_IpcdSplit
N_ItcGetTcx	asm\FETCHTBN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ItcGetTcx
N_ItcGetTcxCache	asm\FETCHTBN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ItcGetTcxCache
N_LbcFormatPara	asm\LAYOUT22.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_LbcFormatPara
N_LoadFcid	asm\FORMATN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_LoadFcid
N_LoadFcidFull	asm\FORMATN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_LoadFcidFull
N_LoadFont	asm\FORMATN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_LoadFont
N_MapStc	asm\FETCHN3.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_MapStc
N_MiscPlcLoops	asm\CLSPLCN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_MiscPlcLoops
N_OrdCh	asm\DIALOG1N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_OrdCh
N_PchSzRtfMove	asm\RTFSUBSN.ASM	/^N_PchSzRtfMove
N_PdodDoc	asm\RESN.ASM	/^N_PdodDoc
N_PdodMother	asm\FETCHN2.ASM	/^N_PdodMother
N_PdrFetch	asm\RESN2.ASM	/^N_PdrFetch
N_PdrFetchAndFree	asm\RESN2.ASM	/^N_PdrFetchAndFree
N_PdrFreeAndFetch	asm\RESN2.ASM	/^N_PdrFreeAndFetch
N_PfcbFn	asm\RESN.ASM	/^N_PfcbFn
N_PmwdMw	asm\RESN.ASM	/^N_PmwdMw
N_PmwdWw	asm\RESN2.ASM	/^N_PmwdWw
N_PnFromPlcbteFc	asm\FETCHN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_PnFromPlcbteFc
N_PopLbs	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_PopLbs
N_PostTn	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_PostTn
N_PtOrigin	asm\RESN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_PtOrigin
N_PushLbs	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_PushLbs
N_PwwdWw	asm\RESN.ASM	/^N_PwwdWw
N_PxsInit	asm\EDITN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_PxsInit
N_QcpQfooPlcfoo	asm\RESN.ASM	/^N_QcpQfooPlcfoo
N_ReplaceinPllr	asm\LAYOUT2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ReplaceinPllr
N_ResetFont	asm\FORMATN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ResetFont
N_RtfIn	asm\RTFINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_RtfIn
N_ScanFnForBytes	asm\INSSUBSN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ScanFnForBytes
N_ScrollDrUp	asm\DISP2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ScrollDrUp
N_ScrollWw	asm\DISP3N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ScrollWw
N_SetFlcdCh	asm\FIELDFMN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_SetFlcdCh
N_ShrinkPlc	asm\CLSPLCN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_ShrinkPlc
N_ValFromPropSprm	asm\PRLN.ASM	/^N_ValFromPropSprm
N_WCompChCh	asm\DIALOG1N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_WCompChCh
N_WCompRgchIndex	asm\INDEX2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_WCompRgchIndex
N_WCompSzSrt	asm\DIALOG1N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_WCompSzSrt
N_WidthHeightFromBrc	asm\DISPTBLN.ASM	/^N_WidthHeightFromBrc
N_XDelFndSedPgdPad	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_XDelFndSedPgdPad
N_XRepl1	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_XRepl1
N_XReplace	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_XReplace
N_XReplaceCps	asm\EDITN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_XReplaceCps
N_XpFromDcp	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@N_XpFromDcp
N_abs	asm\RESN.ASM	/^N_abs
NatAppWndProc	asm\WPROCN.ASM	/^NatAppWndProc
NatDdeChnlWndProc	asm\WPROCN.ASM	/^NatDdeChnlWndProc
NatDeskTopWndProc	asm\WPROCN.ASM	/^NatDeskTopWndProc
NatFedtWndProc	asm\WPROCN.ASM	/^NatFedtWndProc
NatIconBarWndProc	asm\WPROCN.ASM	/^NatIconBarWndProc
NatMwdWndProc	asm\WPROCN.ASM	/^NatMwdWndProc
NatPgPrvwWndProc	asm\WPROCN.ASM	/^NatPgPrvwWndProc
NatPromptWndProc	asm\WPROCN.ASM	/^NatPromptWndProc
NatRSBWndProc	asm\WPROCN.ASM	/^NatRSBWndProc
NatRulerMarkWndProc	asm\WPROCN.ASM	/^NatRulerMarkWndProc
NatSplitBarWndProc	asm\WPROCN.ASM	/^NatSplitBarWndProc
NatStartWndProc	asm\WPROCN.ASM	/^NatStartWndProc
NatStatLineWndProc	asm\WPROCN.ASM	/^NatStatLineWndProc
NatStaticEditWndProc	asm\WPROCN.ASM	/^NatStaticEditWndProc
NatWndProcEngine	asm\WPROCN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@NatWndProcEngine
NatWwPaneWndProc	asm\WPROCN.ASM	/^NatWwPaneWndProc
OsDate	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@OsDate
OsTime	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@OsTime
PInPl	asm\RESN2.ASM	/^PInPl
PatBltRc	asm\DISP1N2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@PatBltRc
PauseProfiler	asm\PROFCTL.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@PauseProfiler
PcaPoint	asm\RESN2.ASM	/^PcaPoint
PcaSet	asm\RESN2.ASM	/^PcaSet
PcaSetDcp	asm\RESN2.ASM	/^PcaSetDcp
PcaSetNil	asm\RESN2.ASM	/^PcaSetNil
PcaSetWholeDoc	asm\RESN2.ASM	/^PcaSetWholeDoc
PchInSt	asm\RESN2.ASM	/^PchInSt
PdrFetchEngine	asm\RESN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@PdrFetchEngine
PlaybackHook	asm\ELDDEN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@PlaybackHook
PnFromFc	asm\RESN2.ASM	/^PnFromFc
PnWhoseFcGEFc	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@PnWhoseFcGEFc
PrcSet	asm\RESN2.ASM	/^PrcSet
ProgressReportPercent	asm\PROMPTN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ProgressReportPercent
PstFromSttb	asm\RESN2.ASM	/^PstFromSttb
PstFromSttb	asm\RESN2.ASM	/^PstFromSttb
PutCpPlc	asm\RESN.ASM	/^PutCpPlc
PutPlc	asm\RESN.ASM	/^PutPlc
PutPlcLastProc	asm\RESN.ASM	/^PutPlcLastProc
QszUpper	asm\RESN2.ASM	/^QszUpper
RcToDrc	asm\RESN2.ASM	/^RcToDrc
RcToRcCommon	asm\RESN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@RcToRcCommon
RceToRcw	asm\RESN2.ASM	/^RceToRcw
RclToRcw	asm\RESN2.ASM	/^RclToRcw
RcpToRcw	asm\RESN2.ASM	/^RcpToRcw
RcwToRcl	asm\RESN2.ASM	/^RcwToRcl
RcwToRcp	asm\RESN2.ASM	/^RcwToRcp
ReadTIFFLineNat	asm\GRHC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ReadTIFFLineNat
SQR	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@SQR
SQRT	asm\NATTRANS.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@SQRT
S_AddVisiSpaces	asm\RESN.ASM	/^S_AddVisiSpaces
S_AdjustCp	asm\RESN.ASM	/^S_AdjustCp
S_AdjustHplcedlCps	asm\RESN.ASM	/^S_AdjustHplcedlCps
S_ApplyPrlSgc	asm\RESN.ASM	/^S_ApplyPrlSgc
S_BFromFc	asm\RESN.ASM	/^S_BFromFc
S_CachePara	asm\RESN.ASM	/^S_CachePara
S_CacheParaL	asm\RESN.ASM	/^S_CacheParaL
S_CacheSectL	asm\RESN.ASM	/^S_CacheSectL
S_CbGenChpxFromChp	asm\RESN.ASM	/^S_CbGenChpxFromChp
S_CbGenPapxFromPap	asm\RESN.ASM	/^S_CbGenPapxFromPap
S_CbGenPrl	asm\RESN.ASM	/^S_CbGenPrl
S_CbGrpprlProp	asm\RESN.ASM	/^S_CbGrpprlProp
S_ChMapSpecChar	asm\RESN.ASM	/^S_ChMapSpecChar
S_ClFormatLines	asm\RESN.ASM	/^S_ClFormatLines
S_CloseTns	asm\RESN.ASM	/^S_CloseTns
S_CopyHdtLrs	asm\RESN.ASM	/^S_CopyHdtLrs
S_CopyLbs	asm\RESN.ASM	/^S_CopyLbs
S_CopyLrs	asm\RESN.ASM	/^S_CopyLrs
S_CpFormatFrom	asm\RESN.ASM	/^S_CpFormatFrom
S_CpSearchSz	asm\RESN.ASM	/^S_CpSearchSz
S_CpSearchSzBackward	asm\RESN.ASM	/^S_CpSearchSzBackward
S_CpVisibleBackCpField	asm\RESN.ASM	/^S_CpVisibleBackCpField
S_CpVisibleCpField	asm\RESN.ASM	/^S_CpVisibleCpField
S_DcpSkipFieldChPflcd	asm\RESN.ASM	/^S_DcpSkipFieldChPflcd
S_DisplayFli	asm\RESN.ASM	/^S_DisplayFli
S_DisplayFliCore	asm\RESN.ASM	/^S_DisplayFliCore
S_DoPrmSgc	asm\RESN.ASM	/^S_DoPrmSgc
S_DrawInsertLine	asm\RESN.ASM	/^S_DrawInsertLine
S_FAbortLayout	asm\RESN.ASM	/^S_FAbortLayout
S_FAddRun	asm\RESN.ASM	/^S_FAddRun
S_FAssignLr	asm\RESN.ASM	/^S_FAssignLr
S_FCpVisiInOutline	asm\RESN.ASM	/^S_FCpVisiInOutline
S_FDoTns	asm\RESN.ASM	/^S_FDoTns
S_FFillRgwWithSeqLevs	asm\RESN.ASM	/^S_FFillRgwWithSeqLevs
S_FGetFtnBreak	asm\RESN.ASM	/^S_FGetFtnBreak
S_FGetParaState	asm\RESN.ASM	/^S_FGetParaState
S_FGraphicsFcidToPlf	asm\RESN.ASM	/^S_FGraphicsFcidToPlf
S_FInTableDocCp	asm\RESN.ASM	/^S_FInTableDocCp
S_FInsertInPlc	asm\RESN.ASM	/^S_FInsertInPlc
S_FInsertRgch	asm\RESN.ASM	/^S_FInsertRgch
S_FMarkLine	asm\RESN.ASM	/^S_FMarkLine
S_FNewChpIns	asm\RESN.ASM	/^S_FNewChpIns
S_FOpenPlc	asm\RESN.ASM	/^S_FOpenPlc
S_FRepl1	asm\RESN.ASM	/^S_FRepl1
S_FReplace	asm\RESN.ASM	/^S_FReplace
S_FReplaceCps	asm\RESN.ASM	/^S_FReplaceCps
S_FSearchRgrsym	asm\RESN.ASM	/^S_FSearchRgrsym
S_FShowResultPflcdFvc	asm\RESN.ASM	/^S_FShowResultPflcdFvc
S_FStretchPlc	asm\RESN.ASM	/^S_FStretchPlc
S_FUpdTableDr	asm\RESN.ASM	/^S_FUpdTableDr
S_FUpdateDr	asm\RESN.ASM	/^S_FUpdateDr
S_FUpdateTable	asm\RESN.ASM	/^S_FUpdateTable
S_FVisibleCp	asm\RESN.ASM	/^S_FVisibleCp
S_FWidowControl	asm\RESN.ASM	/^S_FWidowControl
S_FcAppendRgchToFn	asm\RESN.ASM	/^S_FcAppendRgchToFn
S_FetchCp	asm\RESN.ASM	/^S_FetchCp
S_FetchCpPccpVisible	asm\RESN.ASM	/^S_FetchCpPccpVisible
S_FetchVisibleRgch	asm\RESN.ASM	/^S_FetchVisibleRgch
S_FfcFormatFieldPdcp	asm\RESN.ASM	/^S_FfcFormatFieldPdcp
S_FillIfldFlcd	asm\RESN.ASM	/^S_FillIfldFlcd
S_FormatDrLine	asm\RESN.ASM	/^S_FormatDrLine
S_FormatLine	asm\RESN.ASM	/^S_FormatLine
S_FormatLineDxa	asm\RESN.ASM	/^S_FormatLineDxa
S_FrameEasyTable	asm\RESN.ASM	/^S_FrameEasyTable
S_FreePdrf	asm\RESN.ASM	/^S_FreePdrf
S_GetCpFirstCpLimDisplayPara	asm\RESN.ASM	/^S_GetCpFirstCpLimDisplayPara
S_GetIfldFlcd	asm\RESN.ASM	/^S_GetIfldFlcd
S_HpchFromFc	asm\RESN.ASM	/^S_HpchFromFc
S_HpchGetPn	asm\RESN.ASM	/^S_HpchGetPn
S_IbpCacheFilePage	asm\RESN.ASM	/^S_IbpCacheFilePage
S_IbpLru	asm\RESN.ASM	/^S_IbpLru
S_IbstFindSzFfn	asm\RESN.ASM	/^S_IbstFindSzFfn
S_IfldFromDocCp	asm\RESN.ASM	/^S_IfldFromDocCp
S_IfldInsertDocCp	asm\RESN.ASM	/^S_IfldInsertDocCp
S_IfrdGatherFtnRef	asm\RESN.ASM	/^S_IfrdGatherFtnRef
S_InvalCaFierce	asm\RESN.ASM	/^S_InvalCaFierce
S_IpcdSplit	asm\RESN.ASM	/^S_IpcdSplit
S_ItcGetTcx	asm\RESN.ASM	/^S_ItcGetTcx
S_ItcGetTcxCache	asm\RESN.ASM	/^S_ItcGetTcxCache
S_LbcFormatPara	asm\RESN.ASM	/^S_LbcFormatPara
S_LoadFcidFull	asm\RESN.ASM	/^S_LoadFcidFull
S_LoadFont	asm\RESN.ASM	/^S_LoadFont
S_MapStc	asm\RESN.ASM	/^S_MapStc
S_MiscPlcLoops	asm\RESN.ASM	/^S_MiscPlcLoops
S_PchSzRtfMove	asm\RESN.ASM	/^S_PchSzRtfMove
S_PdrFetch	asm\RESN.ASM	/^S_PdrFetch
S_PdrFetchAndFree	asm\RESN.ASM	/^S_PdrFetchAndFree
S_PdrFreeAndFetch	asm\RESN.ASM	/^S_PdrFreeAndFetch
S_PnFromPlcbteFc	asm\RESN.ASM	/^S_PnFromPlcbteFc
S_PopLbs	asm\RESN.ASM	/^S_PopLbs
S_PostTn	asm\RESN.ASM	/^S_PostTn
S_PtOrigin	asm\RESN.ASM	/^S_PtOrigin
S_PushLbs	asm\RESN.ASM	/^S_PushLbs
S_PxsInit	asm\RESN.ASM	/^S_PxsInit
S_ReplaceInPllr	asm\RESN.ASM	/^S_ReplaceInPllr
S_ResetFont	asm\RESN.ASM	/^S_ResetFont
S_RtfIn	asm\RESN.ASM	/^S_RtfIn
S_ScanFnForBytes	asm\RESN.ASM	/^S_ScanFnForBytes
S_ScrollDrUp	asm\RESN.ASM	/^S_ScrollDrUp
S_SetFlcdCh	asm\RESN.ASM	/^S_SetFlcdCh
S_ShrinkPlc	asm\RESN.ASM	/^S_ShrinkPlc
S_ValFromPropSprm	asm\RESN.ASM	/^S_ValFromPropSprm
S_WCompChCh	asm\RESN.ASM	/^S_WCompChCh
S_WCompRgchIndex	asm\RESN.ASM	/^S_WCompRgchIndex
S_WCompSzSrt	asm\RESN.ASM	/^S_WCompSzSrt
S_WidthHeightFromBrc	asm\RESN.ASM	/^S_WidthHeightFromBrc
S_XDelFndSedPgdPad	asm\RESN.ASM	/^S_XDelFndSedPgdPad
S_XRepl1	asm\RESN.ASM	/^S_XRepl1
S_XReplace	asm\RESN.ASM	/^S_XReplace
S_XReplaceCps	asm\RESN.ASM	/^S_XReplaceCps
S_XpFromDcp	asm\RESN.ASM	/^S_XpFromDcp
SelectDesiredVersion	asm\RESN.ASM	/^SelectDesiredVersion
SetDirty	asm\FETCHN3.ASM	/^SetDirty
ShellExec	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ShellExec
ShowMsg	asm\AUXOUT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ShowMsg
StackTrace	asm\RIP.ASM	/^StackTrace
StandardChp	asm\RESN2.ASM	/^StandardChp
StandardPap	asm\RESN2.ASM	/^StandardPap
StandardSep	asm\RESN2.ASM	/^StandardSep
StartProfiler	asm\PROFCTL.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@StartProfiler
StopProfiler	asm\PROFCTL.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@StopProfiler
StrBltRow	asm\GRBITX.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@StrBltRow
TimerInit	asm\RESN.ASM	/^TimerInit
TimerReset	asm\RESN.ASM	/^TimerReset
TimerStart	asm\RESN.ASM	/^TimerStart
TimerStop	asm\RESN.ASM	/^TimerStop
ToolboxDummy1	asm\FILE2N.ASM	/^ToolboxDummy1
ToolboxDummy2	asm\FILE2N.ASM	/^ToolboxDummy2
ToolboxDummy3	asm\FILE2N.ASM	/^ToolboxDummy3
ToolboxDummy4	asm\FILE2N.ASM	/^ToolboxDummy4
ToolboxDummy5	asm\FILE2N.ASM	/^ToolboxDummy5
ToolboxDummy6	asm\FILE2N.ASM	/^ToolboxDummy6
ToolboxDummy7	asm\FILE2N.ASM	/^ToolboxDummy7
ToolboxDummy8	asm\FILE2N.ASM	/^ToolboxDummy8
ToolboxDummyEngine	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@ToolboxDummyEngine
TsGetLastUpdateDosh	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@TsGetLastUpdateDosh
UDiv	asm\GRHC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@UDiv
UMultDiv	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@UMultDiv
UMultDivNR	asm\FORMATN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@UMultDivNR
UnionRc	asm\DISP3N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@UnionRc
WCreateNewSzFfname	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@WCreateNewSzFfname
WCreateSzFfname	asm\FILE2N.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@WCreateSzFfname
WOpenSzFfname	asm\FILEWINN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@WOpenSzFfname
WriteToAux	asm\AUXOUT.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@WriteToAux
XOrYFromXOrY	asm\RESN2.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@XOrYFromXOrY
XpFromXw	asm\RESN2.ASM	/^XpFromXw
XwFromXl	asm\RESN2.ASM	/^XwFromXl
XwFromXp	asm\RESN2.ASM	/^XwFromXp
YpFromYw	asm\RESN2.ASM	/^YpFromYw
YwFromYl	asm\RESN2.ASM	/^YwFromYl
YwFromYp	asm\RESN2.ASM	/^YwFromYp
allocmem	asm\WORDGREP.ASM	/^allocmem
bgrep	asm\WORDGREP.ASM	/^bgrep
bgrep_for_expression	asm\WORDGREP.ASM	/^bgrep_for_expression
bltEngine	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@bltEngine
bltNat	asm\RESN.ASM	/^bltNat
bltbcxNat	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@bltbcxNat
bltbxNat	asm\RESN.ASM	/^bltbxNat
bltbyteNat	asm\RESN.ASM	/^bltbyteNat
bltcxNat	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@bltcxNat
bltxEngine	asm\RESN.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@bltxEngine
bltxNat	asm\RESN.ASM	/^bltxNat
build_bitmap	asm\WORDGREP.ASM	/^build_bitmap
calibrate_prof	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@calibrate_prof
calibrate_prof	asm\PROFC.ASM	/^calibrate_prof
clear_buffers	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@clear_buffers
disable_other_ints	asm\PROFC.ASM	/^disable_other_ints
enable_other_ints	asm\PROFC.ASM	/^enable_other_ints
end_loop_of_loops	asm\PROFC.ASM	/^end_loop_of_loops
free_bytes	asm\WORDGREP.ASM	/^free_bytes
get_RE_char	asm\WORDGREP.ASM	/^get_RE_char
get_buffer_location	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@get_buffer_location
gimme_a_piece_a_buff	asm\WORDGREP.ASM	/^gimme_a_piece_a_buff
hello_profiler	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@hello_profiler
index	asm\RESN.ASM	/^index
lseek_for_bgrep	asm\WORDGREP.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@lseek_for_bgrep
make_the_bitmaps	asm\WORDGREP.ASM	/^make_the_bitmaps
max	asm\RESN.ASM	/^max
min	asm\RESN.ASM	/^min
prof_label_&number	asm\PROFC.ASM	/^prof_label_&number
put_bit	asm\WORDGREP.ASM	/^put_bit
read_in_file	asm\WORDGREP.ASM	/^read_in_file
seek_to_fcfirst	asm\WORDGREP.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@seek_to_fcfirst
set_timer_rate	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@set_timer_rate
start_recording	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@start_recording
stop_recording	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@stop_recording
suck_in_file	asm\WORDGREP.ASM	/^suck_in_file
test_bit	asm\WORDGREP.ASM	/^test_bit
umax	asm\RESN.ASM	/^umax
umin	asm\RESN.ASM	/^umin
wordgrep	asm\WORDGREP.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@wordgrep
write_buffers	asm\PROFC.ASM	/\[cC]\[pP]\[rR]\[oO]\[cC]\[ 	]\[ 	]\@write_buffers
CmdInsAnnotation	annot.c	?^CMD CmdInsAnnotation(pcmb)$?
CmdInsFootnote	annot.c	?^CmdInsFootnote(pcmb)$?
CmdViewAnnotation	annot.c	?^CMD CmdViewAnnotation(pcmb)$?
CmdViewFootnote	annot.c	?^CmdViewFootnote (pcmb)$?
CmdViewRef	annot.c	?^CMD CmdViewRef(wk, edc)$?
FDlgInsertFtn	annot.c	?^BOOL FDlgInsertFtn(dlm, tmc, wNew, wOld, wParam)$?
FReportSplitErr	annot.c	?^FReportSplitErr(wk)$?
FShowFtnAtn	annot.c	?^FShowFtnAtn(doc, wk)$?
FViewFtnAtn	annot.c	?^FViewFtnAtn(edcDrp)$?
AddToFrontVhprcList	create.c	?^AddToFrontVhprcList(hprc)$?
ApplyChpxToChp	create.c	?^ApplyChpxToChp(pchpx, pchp)$?
ApplyColorPcmd	cmd.c	?^ApplyColorPcmd(pcmd, szColor)$?
ApplyDocMgmtNew	create2.c	?^ApplyDocMgmtNew (doc, fn)$?
ApplyFontPointPcmd	cmd.c	?^ApplyFontPointPcmd(pcmd, szFfn, szPoint)$?
ApplyGrpprlInvalCa	cmd3.c	?^ApplyGrpprlInvalCa( grpprl, cb, pca )$?
ApplyRevMarking	compare.c	?^ApplyRevMarking(pca, fRMark, fStrike)$?
ApplySprmRM	compare.c	?^ApplySprmRM(pca, grpprl, cbgrpprl)$?
AskCBFormatName	clipbord.c	?^AskCBFormatName( lpchName, cchNameMac )$?
BcmFromIbcm	command2.c	?^BcmFromIbcm(ibcm)$?
BcmOfSt	command2.c	?^BCM BcmOfSt(st)$?
BcmOrBsyOfSt	command2.c	?^NATIVE BcmOrBsyOfSt(st, docDot, fBsy)$?
BlockModeEnd	cmd2.c	?^BlockModeEnd()$?
BsyElOfBcm	command2.c	?^NATIVE BsyElOfBcm(bcm)$?
BsyElOfSt	command2.c	?^BsyElOfSt(st)$?
BsyOfStDocDot	command2.c	?^uns BsyOfStDocDot(st, docDot)$?
BuildPcd	create2.c	?^BuildPcd(ppcd, fn, fc)$?
CWDisplayAndUpdateControl	cmdwnd.c	?^CWDisplayAndUpdateControl(hwnd)$?
CacheParaIND	cmd.c	?^CacheParaIND(doc,cp)$?
CancelDyadic	cmd.c	?^CancelDyadic()$?
CatCsSt	command2.c	?^#define CatCsSt(csstFrom, stTo) \\$?
CatDel	catalog.c	?^CatDel(hrgIndex)$?
CbHpsy	command2.c	?^CbHpsy(hpsy)$?
CbLpsy	command2.c	?^CbLpsy(lpsy)$?
CbMergeInOnePrl	cmd2.c	?^int CbMergeInOnePrl(grpprl, cb, sprm, val)$?
CchBuildMenuSz	command.c	?^int CchBuildMenuSz(bsy, sz, grf)$?
CchReadLineExt	clipbrd2.c	?^CchReadLineExt( lpch, cbRead, rgch, pfEol)$?
CchSzFileAbsToSzFileRel	command.c	?^int CchSzFileAbsToSzFileRel(szFileAbs, szFileRel)$?
CchSzNotBogus	cmd3.c	?^#define CchSzNotBogus(sz)  (CchSz(sz) - 1)$?
CfNextCf	clipbrd2.c	?^CfNextCf (cf, fPrPic)$?
ChangeClipboard	clipbord.c	?^ChangeClipboard()$?
ClearRibbonRrf	command2.c	?^ClearRibbonRrf()$?
ClearRrf	command2.c	?^ClearRrf()$?
ClearRulerRrf	command2.c	?^ClearRulerRrf()$?
CloseMwsOfDoc	cmdwnd.c	?^CloseMwsOfDoc(doc)$?
CmdAppMaximize	cmd.c	?^CmdAppMaximize(pcmb)$?
CmdAppRestore	cmd.c	?^CmdAppRestore(pcmb)$?
CmdArrangeWnd	cmdwnd.c	?^CMD CmdArrangeWnd(pcmb)$?
CmdAssignToMenu	customiz.c	?^CMD CmdAssignToMenu(pcmb)$?
CmdAutosave	cmd2.c	?^CMD CmdAutosave()$?
CmdBeginRow	curswin.c	?^CMD CmdBeginRow(pcmb)$?
CmdBlkExtend	cmd2.c	?^CMD CmdBlkExtend(pcmb)$?
CmdBold	cmdcore.c	?^CMD CmdBold(pcmb)$?
CmdBottomColumn	curswin.c	?^CMD CmdBottomColumn(pcmb)$?
CmdBumpFontSize	cmd3.c	?^CmdBumpFontSize(fGrow)$?
CmdCatalog	catalog.c	?^CMD CmdCatalog(pcmb)$?
CmdChangeKeys	customiz.c	?^CMD CmdChangeKeys(pcmb)$?
CmdChangeRevMarking	compare.c	?^CMD CmdChangeRevMarking(fRevMarking, irmBar, irmPr?
CmdClear	clipbord.c	?^CMD CmdClear()	 /* not implemented [yet?][ever?] *?
CmdCloseWnd	cmdwnd.c	?^CMD CmdCloseWnd(pcmb)$?
CmdColor	cmd.c	?^CMD CmdColor(pcmb)$?
CmdCompare	compare.c	?^CMD CmdCompare(pcmb)$?
CmdControlRun	cmd3.c	?^CMD CmdControlRun(pcmb)$?
CmdCopy	clipbord.c	?^CMD CmdCopy(pcmb)$?
CmdCopy1	clipbord.c	?^CmdCopy1(psel, pca)$?
CmdCopyLooks	cmd.c	?^CMD CmdCopyLooks(pcmb)$?
CmdCopyToFrom	cmd.c	?^CMD CmdCopyToFrom(pcmb)$?
CmdDULine	cmdcore.c	?^CMD CmdDULine(pcmb)$?
CmdDelBackWordClear	cmd2.c	?^CMD CmdDelBackWordClear(pcmb)$?
CmdDelClear	cmdcore.c	?^CMD CmdDelClear(pcmb)$?
CmdDelCut	cmdcore.c	?^CMD CmdDelCut(pcmb)$?
CmdDelWordClear	cmd2.c	?^CMD CmdDelWordClear(pcmb)$?
CmdDoDyadic	cmd.c	?^CMD CmdDoDyadic(pcmb)$?
CmdDraftView	cmd2.c	?^CMD CmdDraftView(pcmb)$?
CmdDumpMud	customiz.c	?^CMD CmdDumpMud()$?
CmdEditPic	cmd3.c	?^CMD CmdEditPic(pcmb)$?
CmdElCatalog	catalog.c	?^CMD CmdElCatalog(pcmb)$?
CmdEndRow	curswin.c	?^CMD CmdEndRow(pcmb)$?
CmdEscape	cmdcore.c	?^CMD CmdEscape(pcmb)$?
CmdExecBcm	command2.c	?^CMD CmdExecBcm(bcm, hcab)$?
CmdExecBcmKc	command2.c	?^CMD CmdExecBcmKc(bcm, kc)$?
CmdExecCmb	command2.c	?^CMD CmdExecCmb(pcmb)$?
CmdExtend	cmdcore.c	?^CMD CmdExtend(pcmb)$?
CmdFileClose	cmdwnd.c	?^CMD CmdFileClose(pcmb)$?
CmdFont	cmd.c	?^CMD CmdFont(pcmb)$?
CmdFontSize	cmd.c	?^CMD CmdFontSize(pcmb)$?
CmdGrowFont	cmd3.c	?^CMD CmdGrowFont(pcmb)$?
CmdHangCommon	cmd.c	?^CmdHangCommon(fPrev)$?
CmdHangingIndent	cmd.c	?^CMD CmdHangingIndent(pcmb)$?
CmdHideText	cmdcore.c	?^CMD CmdHideText(pcmb)$?
CmdIndent	cmd.c	?^CMD CmdIndent(pcmb)$?
CmdIndentByDxa	cmd.c	?^CmdIndentByDxa(dxa)$?
CmdInitDyadic	cmd.c	?^CMD CmdInitDyadic(ssc, pcmb)$?
CmdItalic	cmdcore.c	?^CMD CmdItalic(pcmb)$?
CmdLongMenus	cmd2.c	?^CMD CmdLongMenus(pcmb)$?
CmdMenuMode	cmd.c	?^CMD CmdMenuMode(pcmb)$?
CmdMove	cmd.c	?^CMD CmdMove(pcmb)$?
CmdMoveWnd	cmdwnd.c	?^CMD CmdMoveWnd(pcmb)$?
CmdMwd1	cmdwnd.c	?^CMD CmdMwd1(pcmb)$?
CmdMwd2	cmdwnd.c	?^CMD CmdMwd2(pcmb)$?
CmdMwd3	cmdwnd.c	?^CMD CmdMwd3(pcmb)$?
CmdMwd4	cmdwnd.c	?^CMD CmdMwd4(pcmb)$?
CmdMwd5	cmdwnd.c	?^CMD CmdMwd5(pcmb)$?
CmdMwd6	cmdwnd.c	?^CMD CmdMwd6(pcmb)$?
CmdMwd7	cmdwnd.c	?^CMD CmdMwd7(pcmb)$?
CmdMwd8	cmdwnd.c	?^CMD CmdMwd8(pcmb)$?
CmdMwd9	cmdwnd.c	?^CMD CmdMwd9(pcmb)$?
CmdNewWnd	cmdwnd.c	?^CMD CmdNewWnd(pcmb)$?
CmdNextMwd	cmdwnd.c	?^CMD CmdNextMwd(pcmb)$?
CmdNormalStyle	cmdcore.c	?^CMD CmdNormalStyle(pcmb)$?
CmdOK	cmdcore.c	?^CMD CmdOK(pcmb)$?
CmdOtherPane	cmdwnd.c	?^CMD CmdOtherPane(pcmb)$?
CmdOvertype	cmdcore.c	?^CMD CmdOvertype(pcmb)$?
CmdParaBoth	cmdcore.c	?^CMD CmdParaBoth(pcmb)$?
CmdParaCenter	cmdcore.c	?^CMD CmdParaCenter(pcmb)$?
CmdParaClose	cmdcore.c	?^CMD CmdParaClose(pcmb)$?
CmdParaLeft	cmdcore.c	?^CMD CmdParaLeft(pcmb)$?
CmdParaNormal	cmdcore.c	?^CMD CmdParaNormal(pcmb)$?
CmdParaOpen	cmdcore.c	?^CMD CmdParaOpen(pcmb)$?
CmdParaRight	cmdcore.c	?^CMD CmdParaRight(pcmb)$?
CmdPaste	clipbord.c	?^CMD CmdPaste(pcmb)$?
CmdPlainText	cmdcore.c	?^CMD CmdPlainText(pcmb)$?
CmdPrevMwd	cmdwnd.c	?^CMD CmdPrevMwd(pcmb)$?
CmdRepeat	cmd2.c	?^CMD CmdRepeat(pcmb)$?
CmdRestoreWnd	cmdwnd.c	?^CMD CmdRestoreWnd(pcmb)$?
CmdRevMarking	compare.c	?^CMD CmdRevMarking(pcmb)$?
CmdRunAtmOnDoc	command2.c	?^CmdRunAtmOnDoc(atm, doc)$?
CmdSelectTable	curswin.c	?^CMD CmdSelectTable(pcmb)$?
CmdSelectWholeDoc	cmdcore.c	?^CMD CmdSelectWholeDoc(pcmb)$?
CmdSetMwd	cmdwnd.c	?^CMD CmdSetMwd(imw)$?
CmdShortMenus	cmd2.c	?^CMD CmdShortMenus(pcmb)$?
CmdShowAll	cmdcore.c	?^CMD CmdShowAll(pcmb)$?
CmdShrinkExtend	cmdcore.c	?^CMD CmdShrinkExtend(pcmb)$?
CmdShrinkFont	cmd3.c	?^CMD CmdShrinkFont(pcmb)$?
CmdSizeWnd	cmdwnd.c	?^CMD CmdSizeWnd(pcmb)$?
CmdSmallCaps	cmdcore.c	?^CMD CmdSmallCaps(pcmb)$?
CmdSpace1	cmdcore.c	?^CMD CmdSpace1(pcmb)$?
CmdSpace15	cmdcore.c	?^CMD CmdSpace15(pcmb)$?
CmdSpace2	cmdcore.c	?^CMD CmdSpace2(pcmb)$?
CmdStatusArea	cmdwnd.c	?^CMD CmdStatusArea(pcmb)$?
CmdSubscript	cmdcore.c	?^CMD CmdSubscript(pcmb)$?
CmdSuperscript	cmdcore.c	?^CMD CmdSuperscript(pcmb)$?
CmdSwapCase	cmd3.c	?^CMD CmdSwapCase(pcmb)$?
CmdToggleProfiler	cmdcore.c	?^CmdToggleProfiler(pcmb)$?
CmdTopColumn	curswin.c	?^CMD CmdTopColumn(pcmb)$?
CmdULine	cmdcore.c	?^CMD CmdULine(pcmb)$?
CmdUnHang	cmd.c	?^CMD CmdUnHang(pcmb)$?
CmdUnIndent	cmd.c	?^CMD CmdUnIndent(pcmb)$?
CmdViewPreferences	cmd2.c	?^CMD CmdViewPreferences(pcmb)$?
CmdWULine	cmdcore.c	?^CMD CmdWULine(pcmb)$?
CmdZoomWnd	cmdwnd.c	?^CMD CmdZoomWnd(pcmb)$?
CpLimStyCW	curswin.c	?^CP CpLimStyCW( ww, doc, cp, sty, fEnd )$?
CpToFromCurs	curswin.c	?^CP CpToFromCurs(psel, cpFrom, cpAnchor, sty, dSty,?
CursLeftRight	curswin.c	?^CursLeftRight(sty, dSty, fDrag)$?
CxtFromBcm	command2.c	?^CxtFromBcm(bcm)$?
DMinuteUserPostpone	cmd2.c	?^int DMinuteUserPostpone()$?
DelStFileFromMru	cmdwnd.c	?^DelStFileFromMru(st)$?
DestroyClip	clipbord.c	?^DestroyClip()$?
DestroyPgvCtls	cmdwnd.c	?^DestroyPgvCtls(ww)$?
DestroyPhwnd	cmdwnd.c	?^DestroyPhwnd( phwnd )$?
DestroyStatLine	cmdwnd.c	?^DestroyStatLine()$?
DestroyVScrlWw	cmdwnd.c	?^DestroyVScrlWw(ww)$?
DirtyDotOfDoc	customiz.c	?^DirtyDotOfDoc(doc)$?
DisposeDoc	create2.c	?^DisposeDoc(doc)$?
DisposeDocPdod	create2.c	?^DisposeDocPdod (doc, pdod)$?
DoEditPic2	cmd3.c	?^DoEditPic2()$?
DoLooks	cmdcore.c	?^DoLooks(ilcd, fUpdate, hParam)$?
DoLooksDS	cmd.c	?^DoLooksDS(ilcd, sprm, val)$?
DoLooksSR	cmd.c	?^DoLooksSR(ilcd, sprm, val)$?
DocAlloc	create2.c	?^DocAlloc (dk, pdod)$?
DocCloneDoc	create2.c	?^DocCloneDoc (docSrc, dk)$?
DocCloneDocNoText	create2.c	?^DocCloneDocNoText (docSrc, dk, fExtraInfo)$?
DocCreate	create2.c	?^int DocCreate(fn)$?
DocCreateFn	create.c	?^DocCreateFn (fn, fInput, stConverter, stSubset, ps?
DocCreateScratch	create2.c	?^DocCreateScratch (doc)$?
DocCreateSub	create2.c	?^DocCreateSub (docMother, dk)$?
DocCreateTemp	create2.c	?^DocCreateTemp(doc)$?
DocFromFn	create.c	?^DocFromFn (fn)$?
DocReadFnPpnFib	create.c	?^DocReadFnPpnFib (fn, ppnFib, psels)$?
DocSubEnsure	create2.c	?^DocSubEnsure(doc, edcDrp)$?
DpvPwFromSzW3IdFUt	cmd.c	?^DPV DpvPwFromSzW3IdFUt(pw, szItem, wLow, wHigh, dp?
DrawDragLine	cmdwnd.c	?^DrawDragLine(hdc, ptFrom, prc, fHorz)$?
DxaNextTab	cmd.c	?^int DxaNextTab(dxa, ppap)$?
DxaPrevTab	cmd.c	?^int DxaPrevTab(dxa, ppap)$?
ElDocClose	cmdwnd.c	?^EL ElDocClose(ac)$?
ElEndOfCol	curswin.c	?^EL ElEndOfCol(fExtend)$?
ElEndOfRow	curswin.c	?^EL ElEndOfRow(fExtend)$?
ElExtendSel	cmdcore.c	?^EL ElExtendSel(hpsd)$?
ElFileClose	cmdwnd.c	?^EL ElFileClose(ac)$?
ElOvertype	cmdcore.c	?^EL int ElOvertype(fOn)$?
ElStartOfCol	curswin.c	?^EL ElStartOfCol(fExtend)$?
ElStartOfRow	curswin.c	?^EL ElStartOfRow(fExtend)$?
ElWChangeCase	cmd3.c	?^EL int ElWChangeCase(wcs)$?
ElgFromDoc	command2.c	?^ELG ElgFromDoc(doc)$?
EnableCatButtons	catalog.c	?^EnableCatButtons(fPrinterOK)$?
EndDMEnum	catalog.c	?^EndDMEnum()$?
EnumColorDnDS	cmd.c	?^EnumColorDnDS()$?
EnumColorUpDS	cmd.c	?^EnumColorUpDS()$?
EnumFontDownDS	cmd.c	?^EnumFontDownDS()$?
EnumFontUpDS	cmd.c	?^EnumFontUpDS()$?
EnumPtSizeDnDS	cmd.c	?^EnumPtSizeDnDS()$?
EnumPtSizeUpDS	cmd.c	?^EnumPtSizeUpDS()$?
ExpandCpSty	cmdcore.c	?^ExpandCpSty(pca, cpAnchor, sty)$?
ExtendSelBegin	cmdcore.c	?^ExtendSelBegin()$?
ExtendSelEnd	cmdcore.c	?^ExtendSelEnd()$?
ExtendSelToCh	cmdcore.c	?^ExtendSelToCh(ch)$?
FAddDocFonts	create.c	?^FAddDocFonts( hsttb, pdod )$?
FAllocDMFarMem	catalog.c	?^FAllocDMFarMem()$?
FApplyOneProp	cmd.c	?^FApplyOneProp (sprm, val)$?
FAssureHCbGlob	clipbrd2.c	?^FAssureHCbGlob( ph, lcb, wAlloc, plcbMac, plcbMax ?
FBlankOnlySt	catalog.c	?^FBlankOnlySt(st)$?
FCaInCa	cmdcore.c	?^FCaInCa( pca1, pca2 )$?
FCanLinkScrap	clipbord.c	?^FCanLinkScrap ()$?
FCanWriteCf	clipbrd2.c	?^FCanWriteCf (cf, doc, cpFirst, cpLim)$?
FChangeAppMenu	command.c	?^FChangeAppMenu(hmenu, imnu)$?
FChangeKeysHook	customiz.c	?^FChangeKeysHook(kc)$?
FCheckRunFile	cmd3.c	?^BOOL FCheckRunFile(pchDest, pchSrc)$?
FCloneDocStructs	create2.c	?^FCloneDocStructs (pdod, docSrc)$?
FCloseAllWinsOfDoc	cmdwnd.c	?^FCloseAllWinsOfDoc(doc, ac)$?
FCopyCabSrhToCabCat	catalog.c	?^FCopyCabSrhToCabCat(hcabSrh, hcabCat)$?
FCopyMudToMud	command.c	?^BOOL FCopyMudToMud(hmudSrc, hmudDest)$?
FCreatePgvCtls	cmdwnd.c	?^FCreatePgvCtls(ww)$?
FCreateStatLine	cmdwnd.c	?^BOOL NEAR FCreateStatLine()$?
FCursKey	command2.c	?^FCursKey(kc, fDoIt)$?
FDMEnum	catalog.c	?^FDMEnum(fDialog)$?
FDMGetFile	catalog.c	?^FDMGetFile(stzFile, cchMaxBuf, dmf, iFile)$?
FDelSel	cmdcore.c	?^FDelSel(fScrap, fBlockOk, pcaRM)$?
FDlgAssignToMenu	customiz.c	?^BOOL FDlgAssignToMenu(dlm, tmc, wNew, wOld, wParam?
FDlgAutosave	cmd2.c	?^BOOL FDlgAutosave(dlm, tmc, wNew, wOld, wParam)$?
FDlgCatSearch	catalog.c	?^BOOL FDlgCatSearch(dlm, tmc, wNew, wOld, wParam)$?
FDlgCatSrhProgress	catalog.c	?^FDlgCatSrhProgress(dlm, tmc, wNew, wOld, wParam)$?
FDlgCatalog	catalog.c	?^FDlgCatalog(dlm, tmc, wNew, wOld, wParam)$?
FDlgChangeKeys	customiz.c	?^BOOL FDlgChangeKeys(dlm, tmc, wNew, wOld, wParam)$?
FDlgCmpFile	compare.c	?^BOOL FDlgCmpFile(dlm, tmc, wNew, wOld, wParam)$?
FDlgRevMarking	compare.c	?^BOOL FDlgRevMarking(dlm, tmc, wNew, wOld, wParam)$?
FDlgViewPref	cmd2.c	?^BOOL FDlgViewPref(dlm, tmc, wNew, wOld, wParam)$?
FDocCpsIsPic	clipbord.c	?^FDocCpsIsPic(doc, cpFirst, cpLim)$?
FElTblSel	curswin.c	?^BOOL FElTblSel(fExtend, tsd)$?
FEnsureHstDMQPath	catalog.c	?^FEnsureHstDMQPath()$?
FExecCmd	command2.c	?^BOOL FExecCmd(bcm)$?
FExecKc	command2.c	?^BOOL FExecKc(kc)$?
FFileOpenByMacroSt	create.c	?^BOOL FFileOpenByMacroSt(st)$?
FFillDMQuery	catalog.c	?^FFillDMQuery(hcab)$?
FFillDefaultPath	catalog.c	?^FFillDefaultPath(szThisDir, szPath, cRecurse)$?
FFindImnuBsy	command.c	?^FFindImnuBsy(hmud, imnu, bsy, pimtm)$?
FGetClipboardDC	clipbord.c	?^int NEAR FGetClipboardDC()$?
FGetCmpStFile	compare.c	?^FGetCmpStFile (pcmb, stCmpFile, cchMax)$?
FGetCpFieldFromSelCur	cmdcore.c	?^FGetCpFieldFromSelCur(pca,fEnclose)$?
FGetMtmSz	command.c	?^FGetMtmSz(pmtm, sz)$?
FGetNextDMFile	catalog.c	?^FGetNextDMFile(stzFile, hrgIndex, cchMaxBuf, piCur?
FHasFcbFromSt	create.c	?^int FHasFcbFromSt( stFile )$?
FHasGlsys	command2.c	?^FHasGlsys(doc)$?
FHasRefs	command2.c	?^FHasRefs(doc, edcDrp)$?
FHashDoc	compare.c	?^FHashDoc(doc, fDocNew, rgicmte, pfDirty, hppr, pcp?
FInitCmb	command2.c	?^FInitCmb(pcmb, bcm, hcab, cmm)$?
FInitPlcpcd	create2.c	?^BOOL FInitPlcpcd(pdod, fn, ppnFib)$?
FInsertCmte	compare.c	?^FInsertCmte(parhc,rgicmte)$?
FInsertHiddenSectionMark	create.c	?^FInsertHiddenSectionMark(doc)$?
FIsRunFile	cmd3.c	?^BOOL FIsRunFile(pchName)$?
FKcToSz	command.c	?^BOOL FKcToSz(kc, sz)$?
FKeyCmdLeftRight	command2.c	?^FKeyCmdLeftRight(kc, fDoIt)$?
FKeyCmdUpDown	command2.c	?^FKeyCmdUpDown(kc, fDoIt)$?
FLegalBcm	command2.c	?^FLegalBcm(bcm)$?
FMergeMuds	customiz.c	?^BOOL FMergeMuds(hmudDest, hmudSrc)$?
FNativeFormat	create.c	?^BOOL FNativeFormat(hpfib, fErrors)$?
FNeedsDocBcm	command2.c	?^FNeedsDocBcm(bcm)$?
FNewMergeMuds	command.c	?^FNewMergeMuds(hmudDest, hmudSrc)$?
FOKToAssignKc	customiz.c	?^FOKToAssignKc(kc)$?
FOurRunApp	cmd3.c	?^FOurRunApp (pchRun, sw, eid, fSingleAppOk)$?
FPrinterOK	command2.c	?^BOOL FPrinterOK()$?
FProcessDbgKey	command2.c	?^FProcessDbgKey (kc)$?
FProcessKey	command2.c	?^BOOL FProcessKey(kc)$?
FReactivateApp	cmd3.c	?^FReactivateApp(istAppInfo)$?
FReadClx	create.c	?^FReadClx(fn, pdod, pfib)$?
FReadDMFcFile	catalog.c	?^FReadDMFcFile()$?
FReadExtScrap	clipbrd2.c	?^int FReadExtScrap()$?
FReadHData	clipbrd2.c	?^FReadHData (hData, cf, pca, cbInitial)$?
FReadPict	clipbrd2.c	?^FReadPict (pcaDest, cf, hData, cbInitial, fEmptyPi?
FReadText	clipbrd2.c	?^FReadText (docDest, cf, hData, cbInitial)$?
FRemoveRevMarking	compare.c	?^FRemoveRevMarking(pca, rrm, fSubDocs)$?
FRenderAll	clipbrd2.c	?^FRenderAll(ac)$?
FRenderFormat	clipbrd2.c	?^FRenderFormat( cf )$?
FRepeatRulerRibbon	cmd2.c	?^FRepeatRulerRibbon()$?
FRepeatableBcm	command2.c	?^FRepeatableBcm(bcm)$?
FRunMacro	command2.c	?^FRunMacro(stName)$?
FSameClassHwndSz	clipbord.c	?^FSameClassHwndSz( hwnd, szClass )$?
FScrapFull	command2.c	?^FScrapFull(fPasteLink)$?
FScrapIsPic	clipbord.c	?^FScrapIsPic()$?
FSearchKmp	command2.c	?^FSearchKmp(hkmp, kcSearch, pikme)$?
FSetAgainGrpprl	command2.c	?^FSetAgainGrpprl(grpprl, cb, bcm)$?
FSetCeatmContext	customiz.c	?^FSetCeatmContext(pceatm, iContext)$?
FSpecialBcmInDialog	command2.c	?^FSpecialBcmInDialog(bcm)$?
FSplitRgmtm	command.c	?^BOOL FSplitRgmtm(hmud, imtm)$?
FStatToggleBcm	command.c	?^FStatToggleBcm(bcm)$?
FTableInPca	command2.c	?^FTableInPca(pca)$?
FThrowMudAtMenu	command.c	?^FThrowMudAtMenu(hmud, hmenu, imnu)$?
FToggleBcm	command.c	?^FToggleBcm(bcm)$?
FTrackDragLine	cmdwnd.c	?^FTrackDragLine(hwnd, ppt, hCursor, rcLim, fHorz)$?
FTrackLine	cmdwnd.c	?^FTrackLine(hwnd, hdc, ppt, rcLim, fHorz, grpfDrag)?
FTtpPsel	command2.c	?^BOOL FTtpPsel(psel)$?
FValidDMQPath	catalog.c	?^FValidDMQPath(pchPath,cchPath,pichError)$?
FValidateWwClipboard	clipbord.c	?^int FValidateWwClipboard( hwnd )$?
FWInWloWhi	command.c	?^#define FWInWloWhi(w, wLo, wHi) ((uns) ((w) - (wLo?
FWholeRowsPsel	command2.c	?^FWholeRowsPsel(psel)$?
FWriteExtScrap	clipbrd2.c	?^FWriteExtScrap(cf)$?
FetchCm	command2.c	?^FetchCm(bcm)$?
FetchCm2	command2.c	?^FetchCm2(bcm, cmm)$?
FetchSy	command2.c	?^FetchSy(bsy)$?
FillCatLB	catalog.c	?^FillCatLB()$?
FillKeyList	customiz.c	?^FillKeyList(bcm)$?
FmtUndoAgainSz	command.c	?^FmtUndoAgainSz(fUndo, sz)$?
FnOpenSt	create.c	?^int FnOpenSt(st, grpfOst, ofc, pfose )$?
FreeDMFarMem	catalog.c	?^FreeDMFarMem()$?
FreeDMQueryD	catalog.c	?^FreeDMQueryD()$?
GetDocFromCatLB	catalog.c	?^GetDocFromCatLB(hrgIndex, piCur, pfDocNotExist, st?
GetPlcdIlcd	cmdcore.c	?^GetPlcdIlcd (plcd, ilcd)$?
GetVertBarRc	cmdwnd.c	?^GetVertBarRc(ww, prcVertScroll)$?
GrowSelect	cmdcore.c	?^GrowSelect()$?
GrpfStillTracking	cmdwnd.c	?^GrpfStillTracking(ppt, fHorz)$?
GrpprlOKForFld	cmd3.c	?^GrpprlOKForFld(pgrpprl, cb)$?
HDataWriteDocCps	clipbrd2.c	?^HDataWriteDocCps (cf, doc, cpFirst, cpLim, cbIniti?
HGrabFarMem	catalog.c	?^HANDLE HGrabFarMem(pcb)$?
HScrollClipboard	clipbord.c	?^HScrollClipboard( hwnd,  sbMessage, posNew )$?
HWritePict	clipbrd2.c	?^HWritePict (doc, cpFirst, cpLim, cbInitial, pfBlan?
HWriteText	clipbrd2.c	?^HWriteText (doc, cpFirst, cpLim, cbInitial)$?
HbmMonoFromHbmColor	clipbrd2.c	?^HbmMonoFromHbmColor( hbmSrc )$?
HelpDyadic	cmd.c	?^HelpDyadic()$?
HidFromPsy	cmd2.c	?^HidFromPsy(psy)$?
HmudFromCab	customiz.c	?^MUD ** HmudFromCab(hcab)$?
HmudInit	command.c	?^MUD ** HmudInit(cmtmEstimate)$?
HplReadPlf	create.c	?^HplReadPlf(fn, fcFirst, cb)$?
HplcReadPlcf	create.c	?^struct PLC **HplcReadPlcf(fn, fcFirst, cbTotal, cb?
HpsBump	cmd3.c	?^HpsBump( doc, ftc, hps, fGrow )$?
HpsyFromBcmElg	command2.c	?^HPSY HpsyFromBcmElg(hpsyt, bcm, elg, cmm)$?
HstBuildDMDefaultPath	catalog.c	?^CHAR **HstBuildDMDefaultPath()$?
HsttbPropeFromStsh	create.c	?^struct STTB **HsttbPropeFromStsh(pstsh, fChpe)$?
HsttbReadSttbfFromFile	create.c	?^HsttbReadSttbfFromFile(fn, fc, fExternal, fStyleRu?
IFromBrcp	cmd2.c	?^uns IFromBrcp(brcp)$?
IbcmFromBcm	command2.c	?^NATIVE IbcmFromBcm(bcm)$?
IbstMenuBsySt	command.c	?^IbstMenuBsySt(bsy, st)$?
IbstMw	cmdwnd.c	?^IbstMw(mw)$?
IchFromCpVfli	clipbrd2.c	?^IchFromCpVfli (cp)$?
IcmteAlloc	compare.c	?^IcmteAlloc()$?
IcmteCreate	compare.c	?^IcmteCreate(parhc)$?
IcmteFind	compare.c	?^IcmteFind(parhc,rgicmte)$?
IcoValidateColor	cmd.c	?^unsigned IcoValidateColor(szColor)$?
IfldEnclosingCa	cmdcore.c	?^IfldEnclosingCa(pca)$?
IfldWithinCa	cmdcore.c	?^IfldWithinCa(pca)$?
IndentToPca	cmd.c	?^IndentToPca(pca, dxa, dxa1, ppap)$?
InitRgicmte	compare.c	?^InitRgicmte(rgicmte)$?
InitStatLineState	cmdwnd.c	?^InitStatLineState()$?
InvalAgain	command2.c	?^InvalAgain()$?
KcFirstOfBcm	command.c	?^KcFirstOfBcm(hkmpStart, bcm)$?
KcModified	command2.c	?^int KcModified(kc)$?
KeyCmdDel	cmdcore.c	?^KeyCmdDel(fScrap)$?
KeyCmdDelWord	cmd2.c	?^KeyCmdDelWord( fForward, fScrap )$?
LFromCab	catalog.c	?^#define LFromCab(hcab, iag) \\$?
MakeChpFromChpxBaseChp	create.c	?^MakeChpFromChpxBaseChp(pchp, stc, hsttbChpx, pples?
MakePapFromPapxBasePap	create.c	?^MakePapFromPapxBasePap(ppap, stc, hsttbPapx, pples?
MakeStatLineVisible	cmdwnd.c	?^MakeStatLineVisible()$?
MapCaseDocCps	cmd3.c	?^MapCaseDocCps (wcs, doc, cp, cpLim)$?
NIncrFromL	create.c	?^int NIncrFromL(l)$?
NextPrevMwd	cmdwnd.c	?^NextPrevMwd(dmw)$?
Overtype	cmd2.c	?^FUNCTION STATEMENT Overtype(fOn)$?
PaintClipboard	clipbord.c	?^PaintClipboard( hwnd, hps )$?
PceatkDlgCur	customiz.c	?^#define PceatkDlgCur() ((CEATK *) PcmbDlgCur()->pv?
PceatkPcmb	customiz.c	?^#define PceatkPcmb() ((CEATK *) pcmb->pv)$?
PceatmDlgCur	customiz.c	?^#define PceatmDlgCur() ((CEATM *) PcmbDlgCur()->pv?
PchParseNextFile	cmd3.c	?^PchParseNextFile(pchList)$?
PfnFromBsy	command2.c	?^PFN PfnFromBsy(bsy)$?
PkmeFromKc	command2.c	?^KME * PkmeFromKc(kc, pfTranslated)$?
PkmeOfKcInChain	command2.c	?^KME * PkmeOfKcInChain(kc)$?
PprlPrmFS	create.c	?^PprlPrmFS(prm, pcb, grpprl)$?
PrepAgainBcm	command2.c	?^PrepAgainBcm(bcm)$?
PrepExecBcm	command2.c	?^PrepExecBcm(bcm)$?
PsyGetSyOfBsy	command2.c	?^SY * PsyGetSyOfBsy(psy, bsy)$?
PtIntoRc	cmdwnd.c	?^PtIntoRc(ppt, prc)$?
RMChangeCancelToClose	compare.c	?^RMChangeCancelToClose(pcerm)$?
ReadIntoExtPlc	create.c	?^ReadIntoExtPlc(hplc, fn, fcFirst, cbTotal)$?
RecordRrfIlcd	cmdcore.c	?^RecordRrfIlcd(ilcd, val)$?
ReleaseClipboardDC	clipbord.c	?^int NEAR ReleaseClipboardDC()$?
RemoveRevTable	compare.c	?^RemoveRevTable(pcaRun)$?
ReportDMListIncomplete	catalog.c	?^ReportDMListIncomplete()$?
ResetFieldsHplcfld	create.c	?^ResetFieldsHplcfld (hplcfld)$?
Rol	compare.c	?^long Rol(parhc,amount)$?
RunApp	cmd3.c	?^int RunApp (pchRun, iEvent)$?
SanitizeSz	command.c	?^SanitizeSz(sz, szClean, cchMax, fReplNP)$?
SearchRM	compare.c	?^SearchRM()$?
SelMacroFromItem	customiz.c	?^SelMacroFromItem()$?
Select1stCatLB	catalog.c	?^Select1stCatLB()$?
SetAgain	command2.c	?^SetAgain(bcm)$?
SetAgainCab	command2.c	?^SetAgainCab(bcm, hcab)$?
SetAgainCp	command2.c	?^SetAgainCp(doc, cpFirst, cpLow, cpLim)$?
SetAppMenu	command.c	?^SetAppMenu(hmenu, lParam)$?
SetBcmMenuKeys	command.c	?^SetBcmMenuKeys(hmenu, bcm, bcmNew)$?
SetCabL	catalog.c	?^#define SetCabL(hcab, l, iag) \\$?
SetChangeKeyFocus	customiz.c	?^SetChangeKeyFocus()$?
SetDxwStyWndInWw	cmdwnd.c	?^SetDxwStyWndInWw(ww, dxwStyWnd, fSetDxw)$?
SetHmwdDxwStyWnd	cmdwnd.c	?^SetHmwdDxwStyWnd(hmwd, dxwStyWnd, fSetDxw)$?
SetMw	cmdwnd.c	?^SetMw(mw)$?
SetScrollBarsMw	cmd2.c	?^SetScrollBarsMw( mw )$?
ShowPgvCtls	cmdwnd.c	?^ShowPgvCtls(ww, fMove)$?
ShowStyWnd	cmdwnd.c	?^ShowStyWnd(mw, dxwNew, fSetDxw)$?
ShrinkSelect	cmdcore.c	?^ShrinkSelect()$?
SizeClipboard	clipbord.c	?^SizeClipboard( hwnd, hrc )$?
SyncPageViewGrpfvisi	cmdwnd.c	?^SyncPageViewGrpfvisi(docMother, grpfvisi, fDisplay?
TestInvalAgain	command2.c	?^TestInvalAgain()$?
TmcCatPrintDialog	catalog.c	?^TmcCatPrintDialog(pcecat)$?
TmcCatSI	catalog.c	?^TmcCatSI(hcab)$?
TmcDoCatSrh	catalog.c	?^TMC TmcDoCatSrh(hcab)$?
ToggleBlockSel	cmd2.c	?^ToggleBlockSel()$?
ToggleExtendSel	cmdcore.c	?^ToggleExtendSel()$?
TrackStyWndCursor	cmdwnd.c	?^TrackStyWndCursor(pt)$?
TruncatePathDMDirs	catalog.c	?^TruncatePathDMDirs()$?
UpdItemList	customiz.c	?^UpdItemList()$?
UpdKeyBox	customiz.c	?^UpdKeyBox()$?
UpdMenuTitle	customiz.c	?^UpdMenuTitle()$?
UpdateCatBanter	catalog.c	?^UpdateCatBanter()$?
UpdateSelCurProp	cmdcore.c	?^UpdateSelCurProp (sgc, prl, cchPrl, prlGray, cchPr?
VScrollClipboard	clipbord.c	?^VScrollClipboard( hwnd,  sbMessage, posNew )$?
WHash	command2.c	?^NATIVE uns WHash(st)$?
WListCatalog	catalog.c	?^EXPORT WORD WListCatalog(tmm, sz, isz, filler, tmc?
WListMacros	customiz.c	?^WORD WListMacros(tmm, sz, isz, filler, tmc, idd)$?
WListMenus	customiz.c	?^WORD WListMenus(tmm, sz, isz, filler, tmc, wParam)?
WParseStyleNameSize	cmd2.c	?^WORD WParseStyleNameSize(tmm, sz, ppv, bArg, tmc, ?
WcsCa	cmd3.c	?^int WcsCa(pca)$?
AddColsToDlg	dlgtable.c	?^AddColsToDlg(itcFirst, itcLim)$?
AddFileSpec	docman1.c	?^AddFileSpec(rgchNDir, cchDir)$?
AdjustOpaqueRect	dispbrc.c	?^EXPORT AdjustOpaqueRect(prcOpaque, prcAdjusted, hd?
AppendApproxSt	dlgdoc.c	?^AppendApproxSt(st)$?
AtomAddSt	ddesub.c	?^ATOM AtomAddSt (st)$?
AtomFromStNA	ddesub.c	?^ATOM AtomFromStNA (st)$?
AtomToSz	ddeclnt.c	?^AtomToSz(atom, sz, cch)$?
BcmCurSelTmc	dialog3.c	?^BcmCurSelTmc(tmc)$?
BlinkCaretSEdit	dlghyph.c	?^EXPORT BOOL FAR PASCAL BlinkCaretSEdit(hwnd, msg, ?
BrcFromIbrcl	dlgtable.c	?^int BrcFromIbrcl(ibrcl)$?
BrcsFromIbrclIbrcp	dlglook1.c	?^BrcsFromIbrclIbrcp(pbrc, ibrcl, ibrcp)$?
BuildSzAll	dlgopen.c	?^BuildSzAll(szExt, szAll)$?
CApproxWordCch	dlgdoc.c	?^long CApproxWordCch(cch)$?
C_AddVisiSpaces	disp1.c	?^HANDNATIVE C_AddVisiSpaces(hdc, dxpToXw, ywLine, p?
C_DisplayFli	disp1.c	?^HANDNATIVE C_DisplayFli(ww, hpldr/* or hscc or hww?
C_DisplayFliCore	disp1.c	?^HANDNATIVE C_DisplayFliCore(ww, rcwClip, dxpToXw, ?
C_DrawInsertLine	disp1.c	?^HANDNATIVE C_DrawInsertLine(psel)$?
C_FMarkLine	disp1.c	?^HANDNATIVE int C_FMarkLine(psel, hpldr, idr, pedl,?
C_PatBltRc	disp1.c	?^HANDNATIVE C_PatBltRc( hdc, prc, rop )$?
CabToPrb	dialog2.c	?^CabToPrb(prb, hcab, iagStart, ciag)$?
CabToPropPropGray	dlglook1.c	?^CabToPropPropGray(hcab, prgbProp, prgbPropGray, sg?
CbMaxSizeof	dlglook1.c	?^#define CbMaxSizeof(v1, v2) (sizeof (v1) > sizeof ?
CbrcMatch	dispbrc.c	?^CbrcMatch(rgbrc,fFrameLines,pbrcMatch,prgbitMatch)?
CchCountCh	dialog2.c	?^CchCountCh(pch, pchMax, ch)$?
CchDMSI	docman2.c	?^CchDMSI(pchDest)$?
CchExpZaRnd	dialog3.c	?^int CchExpZaRnd(ppch, za, ut, cchMax, fUnit, grpfR?
CchGetTHDSz	dlgopen.c	?^int CchGetTHDSz(sz, ich)$?
CchPath	docman1.c	?^CchPath(sz)$?
CchStFromFc	docman2.c	?^CchStFromFc(fn,fc,rgch,cchMax)$?
CchStuff	dialog3.c	?^int CchStuff(ppch, sz, cchMax)$?
CchSzFromFc	docman2.c	?^CchSzFromFc(fn,fc,rgch,cchMax)$?
CchTruncateFilename	docman1.c	?^CchTruncateFilename(pchSrc,pchDest)$?
ChangeCancelToClose	dialog2.c	?^ChangeCancelToClose()$?
ChangeDotFromHcab	dlgdoc.c	?^ChangeDotFromHcab (hcab, doc)$?
ChangeFormatTableSel	dlgtable.c	?^ChangeFormatTableSel()$?
CheckFedt	dialog1.c	?^CheckFedt(hfedt)$?
CheckFedt2	dialog1.c	?^CheckFedt2(hfedt)$?
CkDMFn	docman2.c	?^CkDMFn(fn)$?
CkDMStruct	docman2.c	?^CkDMStruct()$?
Ckpdmqsd	docman2.c	?^Ckpdmqsd(pdmqsd)$?
ClMacFromPlcpadPhe	dlgmisc.c	?^ClMacFromPlcpadPhe (ww, doc, cp, pcpFirst, pcpLim)?
ClearInsertLine	disp1.c	?^ClearInsertLine(psel) /* moved to disp1.c in WIN *?
ClipRectFromDr	disp1.c	?^EXPORT ClipRectFromDr(hwwd, hpldr, idr, pdrcp, prc?
CmdCharacter	dlglook1.c	?^CMD CmdCharacter(pcmb)$?
CmdCreateNewDocPcmb	dlgopen.c	?^CmdCreateNewDocPcmb(pcmb)$?
CmdCustomize	dlgdoc.c	?^CMD CmdCustomize(pcmb)$?
CmdDlgAction	dialog2.c	?^CMD CmdDlgAction(pfn, tmc)$?
CmdDocument	dlgdoc.c	?^CMD CmdDocument(pcmb)$?
CmdEditTable	dlgtable.c	?^CMD CmdEditTable(pcmb)$?
CmdFindNext	dlgmisc.c	?^CMD CmdFindNext(pcmb)$?
CmdFormatTable	dlgtable.c	?^CMD CmdFormatTable(pcmb)$?
CmdGoto	dlgmisc.c	?^CMD CmdGoto (pcmb)$?
CmdHyphInit	dlghyph.c	?^CMD CmdHyphInit()$?
CmdHyphenate	dlghyph.c	?^CMD CmdHyphenate(pcmb)$?
CmdInsBookmark	dlgmisc.c	?^CMD CmdInsBookmark(pcmb)$?
CmdInsBreak	dlgmisc.c	?^CMD CmdInsBreak(pcmb)$?
CmdInsColumnBreak	dlgmisc.c	?^CMD CmdInsColumnBreak(pcmb)$?
CmdInsFile	dlgmisc.c	?^CMD CmdInsFile(pcmb)$?
CmdInsPageBreak	dlgmisc.c	?^CMD CmdInsPageBreak(pcmb)$?
CmdInsTable	dlgtable.c	?^CMD CmdInsTable(pcmb)$?
CmdNew	dlgopen.c	?^CMD CmdNew(pcmb)$?
CmdOpen	dlgopen.c	?^CMD CmdOpen(pcmb)$?
CmdParagraph	dlglook1.c	?^CMD CmdParagraph(pcmb)$?
CmdPasteLink	ddeclnt.c	?^CMD CmdPasteLink (pcmb)$?
CmdPauseRecorder	dlgrec.c	?^CMD CmdPauseRecorder(pcmb)$?
CmdPosition	dlglook2.c	?^CMD CmdPosition(pcmb)$?
CmdRecordNext	dlgrec.c	?^CMD CmdRecordNext(pcmb)$?
CmdRecorder	dlgrec.c	?^CMD CmdRecorder(pcmb)$?
CmdSection	dlglook2.c	?^CMD CmdSection(pcmb)$?
CmdStartRecorder	dlgrec.c	?^CMD CmdStartRecorder(pcmb)$?
CmdStopRecorder	dlgrec.c	?^CMD CmdStopRecorder(pcmb)$?
CmdSummaryInfo	dlgdoc.c	?^CMD CmdSummaryInfo(pcmb)$?
CmdTableToText	dlgtable.c	?^CMD CmdTableToText(pcmb)$?
CmdWkOn1	dlgopen.c	?^CMD CmdWkOn1(pcmb)$?
CmdWkOn2	dlgopen.c	?^CMD CmdWkOn2(pcmb)$?
CmdWkOn3	dlgopen.c	?^CMD CmdWkOn3(pcmb)$?
CmdWkOn4	dlgopen.c	?^CMD CmdWkOn4(pcmb)$?
CmdWkOn5	dlgopen.c	?^CMD CmdWkOn5(pcmb)$?
CmdWkOn6	dlgopen.c	?^CMD CmdWkOn6(pcmb)$?
CmdWkOn7	dlgopen.c	?^CMD CmdWkOn7(pcmb)$?
CompareDTTMDate	docman1.c	?^CompareDTTMDate(DTTMLeft,DTTMRight)$?
ComparepDTTMDate	docman1.c	?^ComparepDTTMDate(pDTTMLeft,pDTTMRight)$?
ConnectToFti	disp1.c	?^ConnectToFti( pfti, fticm )$?
CopyEntblToSz	dlbenum.c	?^CopyEntblToSz(iEntbl, isz, sz)$?
CpFirstIpgdGoto	dlgmisc.c	?^CP CpFirstIpgdGoto (doc, ipgd, pcpFirst, pcpLim)$?
CpFirstIsedGoto	dlgmisc.c	?^CP CpFirstIsedGoto (doc, ised, pcpFirst, pcpLim)$?
CpGotoPgcb	dlgmisc.c	?^CP CpGotoPgcb (doc, cpSel, pgcb)$?
CpLineFromCpCl	dlgmisc.c	?^CP CpLineFromCpCl (doc, cp, cl, pcpFirst, pcpLim)$?
CpRefFromCpCftnatn	dlgmisc.c	?^CP CpRefFromCpCftnatn (doc, cp, c, fRel, pcpFirst,?
CreateBlankSumd	docman2.c	?^CreateBlankSumd(psumd)$?
CreateServerChannel	ddesrvr.c	?^CreateServerChannel (doc, hwndThem)$?
DMQueryTestSz	docman2.c	?^DMQueryTestSz(szFile)$?
DMSort	docman2.c	?^DMSort()$?
DclCreateChannel	ddesub.c	?^DclCreateChannel (dt)$?
DclFromAppTopic	ddeclnt.c	?^DclFromAppTopic (atomApp, atomTopic)$?
DclInitiate	ddeclnt.c	?^DclInitiate (atomApp, atomTopic, dt)$?
DclInitiateLaunch	ddeclnt.c	?^DclInitiateLaunch (atomApp, atomTopic, dt)$?
DdeChnlWndProc	ddesub.c	?^EXPORT LONG FAR PASCAL DdeChnlWndProc (hwnd, messa?
DelHyphHhypb	dlghyph.c	?^DelHyphHhypb(hhypb)$?
DeleteAtom	ddesub.c	?^DeleteAtom (atom)$?
DeleteDdliClient	ddeclnt.c	?^DeleteDdliClient (iddli)$?
DeleteDdliServer	ddesrvr.c	?^DeleteDdliServer (iddli)$?
DeleteDdlisOfDclClient	ddeclnt.c	?^DeleteDdlisOfDclClient (dcl)$?
DeleteIBkmk	dlgmisc.c	?^DeleteIBkmk (doc, ibkf, pfUndoCancel)$?
DestroyDcl	ddesub.c	?^DestroyDcl (dcl)$?
Disp1_Last	disp1.c	?^Disp1_Last(){}$?
Dlbenum_Last	dlbenum.c	?^Dlbenum_Last(){}$?
DlgDSInit	dlgdoc.c	?^DlgDSInit(pcedsi)$?
DoDdeIdle	ddesub.c	?^DoDdeIdle ()$?
DocDoCmdNewOpen	dlgopen.c	?^DocDoCmdNewOpen(st)$?
Docman2_Last	docman2.c	?^Docman2_Last(){}$?
DoubleBSSt	dlgmisc.c	?^DoubleBSSt(stOrg, stDest)$?
DpvParseFdxa	dialog3.c	?^DPV DpvParseFdxa(pw, tmc, szItem, wLow, wHigh, dpv?
DrawBorders	dispbrc.c	?^EXPORT DrawBorders(dxpToXw, ywLine)$?
DrawBrc	dispbrc.c	?^DrawBrc ( ww, rgbrc, rcw, dbmod, fFrameLines )$?
DrawChVis	disp1.c	?^DrawChVis( hdc, idcb, xp, ich, ywPos, prcwClip )$?
DrawEndmark	disp1.c	?^EXPORT DrawEndmark(ww, hpldr, idr, ypTop, ypLim, e?
DrawHyphenationText	dlghyph.c	?^DrawHyphenationText(hutxd, hdc, dxpCh, dypExtLead,?
DrawPatternLine	disp1.c	?^EXPORT DrawPatternLine( hdc, xpDest, ypDest, dzp, ?
DrawRect	dispbrc.c	?^DrawRect(hdc, prc, hbr)$?
DrawRevBar	disp1.c	?^DrawRevBar(hdc, xw, yw, dyw, prcwClip)$?
DrawStyNameBorder	dispspec.c	?^DrawStyNameBorder(hdc, prc)$?
DrawStyNameFromWwDl	dispspec.c	?^EXPORT DrawStyNameFromWwDl(ww, hpldr, idr, dl)$?
DrawTlc	dispspec.c	?^EXPORT DrawTlc(hdc, pt, tlc, dxp, pchp, fOver, prc?
DrawVisiBitsOtlMarkBody	disp1.c	?^DrawVisiBitsOtlMarkBody(ww, xwT, ywT)$?
DttmFromPdta	docman1.c	?^long DttmFromPdta(pDTA)$?
DumpDMFc	docman2.c	?^DumpDMFc(i)$?
DumpDMFn	docman2.c	?^DumpDMFn(ich)$?
DumpDMRgFc	docman2.c	?^DumpDMRgFc()$?
DumpDMSz	docman2.c	?^DumpDMSz(i, ich)$?
DxFedtPos	dialog1.c	?^int DxFedtPos(hfedt, li, ich)$?
DxFedtText	dialog1.c	?^int DxFedtText(hfedt, ichMic, cch)$?
DxpScrollHorizWw	dispspec.c	?^DxpScrollHorizWw(ww)$?
EfMacroList	dialog3.c	?^EfMacroList(lpsy, bsy, stName, peml)$?
EidEvalGotoSE	dlgmisc.c	?^EidEvalGotoSE (ppch, pgcb)$?
ElPasteLink	ddeclnt.c	?^ElPasteLink(fHot)$?
EnableTmcGroup	dlglook2.c	?^EnableTmcGroup(tmcFirst, tmcLast, fEnable)$?
EndRecordNextCmd	dlgrec.c	?^void EndRecordNextCmd()$?
EndUL	dispspec.c	?^EXPORT EndUL(puls, prcClip)$?
EndULPast	dispspec.c	?^HANDNATIVE EndULPast(puls, xpLim, ichLim, prcClip)?
EraseInDr	disp1.c	?^EraseInDr(ww, hdc, prcw, hpldr, idr, fPartialErase?
EvalAONTree	docman2.c	?^EvalAONTree(hAONRoot,hrgchLeafValues)$?
EvalDateSpec	docman2.c	?^EvalDateSpec(dttmFile,pDATEINFO)$?
ExtTextOutKludge	dispspec.c	?^ExtTextOutKludge(hdc, xw, yw, eto, lprcw, pch, cch?
FAddStToHData	ddesrvr.c	?^FAddStToHData (ph, pcch, pich, st)$?
FAdviseItem	ddesrvr.c	?^FAdviseItem (dcl, atomItem, cf, fAckReq, fNoData)$?
FAllZeroPpchPch	dialog3.c	?^FAllZeroPpchPch(ppch, pchMax)$?
FApplyHcabToAbsPos	dlglook2.c	?^FApplyHcabToAbsPos(hcab)$?
FApplyHcabToChar	dlglook1.c	?^FApplyHcabToChar(hcab)$?
FApplyHcabToPara	dlglook1.c	?^FApplyHcabToPara(hcab)$?
FApplyHcabToTap	dlgtable.c	?^BOOL FApplyHcabToTap(hcab)$?
FBadTmcCheck	dlgtable.c	?^BOOL FBadTmcCheck(tmc, wLow, wHigh, fZa, fBlankOK)?
FCheckDotTmc	dlgdoc.c	?^FCheckDotTmc (hcab, tmc)$?
FCheckFileSpec	docman1.c	?^FCheckFileSpec(rgchDir, rgchNDir, nfo, pcchDir)$?
FCheckForAuto	dialog3.c	?^BOOL FCheckForAuto(sz)$?
FCheckFormatTable	dlgtable.c	?^BOOL FCheckFormatTable(pcabFrame, fDialog)$?
FCkDMExpand	docman2.c	?^FCkDMExpand()$?
FCkMarginsDoc	dlgdoc.c	?^BOOL FCkMarginsDoc(hcab, ptmc)$?
FCkMarginsSect	dlglook2.c	?^BOOL FCkMarginsSect(hcab)$?
FClientDdeMsg	ddeclnt.c	?^FClientDdeMsg (dcl, message, wLow, wHigh)$?
FCpsFromDocItem	ddesrvr.c	?^FCpsFromDocItem (doc, atomItem, pcpFirst, pcpLim)$?
FDMEnumMore	docman1.c	?^FDMEnumMore(fInit)$?
FDeleteBkmkHcab	dlgmisc.c	?^FDeleteBkmkHcab(hcab)$?
FDeleteStBkmk	dlgmisc.c	?^FDeleteStBkmk(stBkmkName)$?
FDequeue	ddesub.c	?^FDequeue (hque, pch)$?
FDisableTemplate	dialog3.c	?^FDisableTemplate(doc)$?
FDlgAbsPos	dlglook2.c	?^BOOL FDlgAbsPos(dlm, tmc, wNew, wOld, wParam)$?
FDlgCharacter	dlglook1.c	?^BOOL FDlgCharacter(dlm, tmc, wNew, wOld, wParam)$?
FDlgCustomize	dlgdoc.c	?^BOOL FDlgCustomize(dlm, tmc, wNew, wOld, wParam)$?
FDlgDirAddSrch	dialog3.c	?^FDlgDirAddSrch(szEdit, szSearch, cchMax)$?
FDlgDocStat	dlgdoc.c	?^BOOL FDlgDocStat(dlm, tmc, wNew, wOld, wParam)$?
FDlgDocSummary	dlgdoc.c	?^BOOL FDlgDocSummary(dlm, tmc, wNew, wOld, wParam)$?
FDlgDocument	dlgdoc.c	?^BOOL FDlgDocument(dlm, tmc, wNew, wOld, wParam)$?
FDlgEditTable	dlgtable.c	?^BOOL FDlgEditTable(dlm, tmc, wNew, wOld, wParam)$?
FDlgFormatTable	dlgtable.c	?^BOOL FDlgFormatTable(dlm, tmc, wNew, wOld, wParam)?
FDlgHyphenate	dlghyph.c	?^BOOL FDlgHyphenate(dlm, tmc, wNew, wOld, wParam)$?
FDlgInsBookmark	dlgmisc.c	?^BOOL FDlgInsBookmark(dlm, tmc, wNew, wOld, wParam)?
FDlgInsFile	dlgopen.c	?^BOOL FDlgInsFile(dlm, tmc, wNew, wOld, wParam)$?
FDlgInsertTable	dlgtable.c	?^BOOL FDlgInsertTable(dlm, tmc, wNew, wOld, wParam)?
FDlgNew	dlgopen.c	?^BOOL FDlgNew(dlm, tmc, wNew, wOld, wParam)$?
FDlgOpen	dlgopen.c	?^BOOL FDlgOpen(dlm, tmc, wNew, wOld, wParam)$?
FDlgParaLooks	dlglook1.c	?^BOOL FDlgParaLooks(dlm, tmc, wNew, wOld, wParam)$?
FDlgPasteLink	ddeclnt.c	?^BOOL FDlgPasteLink(dlm, tmc, wNew, wOld, wParam)$?
FDlgRecorder	dlgrec.c	?^FDlgRecorder(dlm, tmc, wNew, wOld, wParam)$?
FDlgSection	dlglook2.c	?^BOOL FDlgSection(dlm, tmc, wNew, wOld, wParam)$?
FDlgUsername	dlgmisc.c	?^BOOL FDlgUsername(dlm, tmc, wNew, wOld, wParam)$?
FDoDMQSDTest	docman2.c	?^FDoDMQSDTest(pDMQSD,pch,hrgchResult)$?
FDocStatsToCab	dlgdoc.c	?^BOOL FDocStatsToCab(hcab, pndd, tmcTitle, szPath, ?
FEnqueue	ddesub.c	?^FEnqueue (hque, pch)$?
FEnsureDocDde	ddeclnt.c	?^FEnsureDocDde ()$?
FEnumIEntbl	dlbenum.c	?^BOOL FEnumIEntbl(iEntbl, isz, sz)$?
FEnumMacros	dialog3.c	?^FEnumMacros(pfn, wParam, mct)$?
FEqDza	dlgtable.c	?^BOOL FEqDza(dza1, dza2)$?
FEvalExceptions	dlgmisc.c	?^FEvalExceptions (st, pgcb)$?
FFedtAddBrk	dialog1.c	?^BOOL FFedtAddBrk(hfedt, pchBrk, pichMic, pichMac)$?
FFedtComputeLiBrks	dialog1.c	?^BOOL FFedtComputeLiBrks(hfedt, pichMic, pichMac)$?
FFedtIchAfterHardBrk	dialog1.c	?^BOOL FFedtIchAfterHardBrk(hfedt, ich, li)$?
FFedtInit	dialog1.c	?^BOOL FFedtInit(hwnd)$?
FFedtKeybd	dialog2.c	?^BOOL FFedtKeybd(hfedt, wm, vk)$?
FFedtKeybdEdit	dialog2.c	?^BOOL FFedtKeybdEdit(hfedt, vk, grf)$?
FFedtMakeVis	dialog1.c	?^BOOL FFedtMakeVis(hfedt, fMinScroll)$?
FFedtReformat	dialog1.c	?^BOOL FFedtReformat(phfedt, ichMicDraw, ichMacDraw)?
FFedtReplSel	dialog2.c	?^BOOL FFedtReplSel(phfedt, lpch, cch)$?
FFedtValidateDC	dialog1.c	?^FFedtValidateDC(hfedt)$?
FFillCabNew	dlgopen.c	?^FFillCabNew(pcmb)$?
FFillCabOpen	dlgopen.c	?^FFillCabOpen(pcmb, szInit)$?
FFillHcabDoc	dlgdoc.c	?^FFillHcabDoc(hcab, doc)$?
FFillSzArgPasteLink	ddeclnt.c	?^FFillSzArgPasteLink (szArg)$?
FFilterSdmMsg	dialog1.c	?^BOOL FFilterSdmMsg(lpmsg)$?
FFinishParCab	dlglook1.c	?^BOOL FFinishParCab(hcab, ptmc)$?
FGetAppTopicItemPffb	ddeclnt.c	?^FGetAppTopicItemPffb (pffb, patomApp, patomTopic, ?
FGetDirListEntry	dialog3.c	?^BOOL FGetDirListEntry(tmc, szBuf, ichMax)$?
FGetDocSumStatHcab	dlgdoc.c	?^FGetDocSumStatHcab(hcabSum, hcabStat, pndd, tmcTit?
FGetHotZoneWidth	dlghyph.c	?^FGetHotZoneWidth(tmc, pdxa)$?
FGetParaDefaults	dlglook1.c	?^FGetParaDefaults(pcmb, ppap, ppapGray, fPaps, fSty?
FGetSzBkmkForCps	ddesrvr.c	?^FGetSzBkmkForCps (pca, sz)$?
FGetTapState	dlgtable.c	?^BOOL FGetTapState(pca, fAll)$?
FGotoSz	dlgmisc.c	?^FGotoSz (sz)$?
FGtStyleNames	dialog3.c	?^FGtStyleNames(stcp1, stcp2)$?
FHandleDdeMsg	ddesub.c	?^FHandleDdeMsg (dcl, message, wLow, wHigh)$?
FHpRgFcQSort	docman2.c	?^FHpRgFcQSort(iLeft,iRight,hprgfc,soffset,pfncComp,?
FHyphCancelPoll	dlghyph.c	?^BOOL FHyphCancelPoll(pcpr, fBatch)$?
FInRange	dialog1.c	?^FInRange( w, wFirst, wLast )$?
FInitRecorderDoc	dlgrec.c	?^FInitRecorderDoc()$?
FIsRecorderSt	dlgrec.c	?^FIsRecorderSt(stName)$?
FLaunchAppTopic	ddeclnt.c	?^FLaunchAppTopic (atomApp, atomTopic)$?
FLaunchTopic	ddeclnt.c	?^FLaunchTopic (atomApp, atomTopic)$?
FLoadHyph	dlghyph.c	?^BOOL FLoadHyph()$?
FMatchBrc	dispbrc.c	?^EXPORT BOOL FMatchBrc(dxaMarginLeft, dxaMarginRigh?
FNewPropFromRgProp	dialog2.c	?^FNewPropFromRgProp(rgProp, fCab, mpiagspnt)$?
FNextDMDir	docman1.c	?^FNextDMDir(pchFilename, cchBuf)$?
FNextDMFile	docman1.c	?^FNextDMFile(pchFilename, cchBuf, fInit)$?
FPostAdvise	ddeclnt.c	?^FPostAdvise (iddli)$?
FPostDdeDcl	ddesub.c	?^FPostDdeDcl (dcl, message, wLow, wHigh)$?
FPushQueue	ddesub.c	?^FPushQueue (hque, pch)$?
FPwParsePpchPch	dialog3.c	?^FPwParsePpchPch(pw, ppch, pchMax, pfOverflow)$?
FQsSzFilenameFromDMFc	docman1.c	?^FQsSzFilenameFromDMFc(fc,pchFilename,fSetihsz)$?
FReceiveData	ddeclnt.c	?^FReceiveData (iddli, hData, cf)$?
FRenderDocItemCf	ddesrvr.c	?^FRenderDocItemCf (doc, atomItem, cf)$?
FRequestDcl	ddeclnt.c	?^FRequestDcl (dcl, atomItem, cf)$?
FSaveRecorder	dlgrec.c	?^FSaveRecorder(stName, stDesc, fGlobal)$?
FScrollOK	disp1.c	?^HANDNATIVE BOOL FScrollOK(ww)$?
FSdmDoIdle	dialog1.c	?^BOOL FSdmDoIdle(fFirst)$?
FSelWithinTable	dlgmisc.c	?^FSelWithinTable(psel)$?
FSendData	ddesrvr.c	?^FSendData (dcl, doc, atomItem, cf, iddli)$?
FServerDdeMsg	ddesrvr.c	?^FServerDdeMsg (dcl, message, wLow, wHigh)$?
FSetDcAttribs	disp1.c	?^EXPORT int FSetDcAttribs( hdc, dcc )$?
FSetDocDefaultsHcab	dlgdoc.c	?^FSetDocDefaultsHcab(hcab)$?
FSetPmdcdPbmi	disp1.c	?^FSetPmdcdPbmi( pmdcd, pbmi )$?
FStNormal	dlgopen.c	?^FStNormal(stType)$?
FStopRecorder	dlgrec.c	?^FStopRecorder(fAskSave, fForceKill)$?
FSumdFromSz	docman1.c	?^FSumdFromSz(szFile,pSumd)$?
FTermFile	dlgopen.c	?^FTermFile (pcmb, iag, tmcErrorSel, fLink, fDocCur,?
FToggleCaretHyp	dlghyph.c	?^BOOL FToggleCaretHyp(hwnd, hutxd)$?
FTruncatePathCbPsz	dialog3.c	?^BOOL FTruncatePathCbPsz(cbBuf, ppch)$?
FTruncateTmcPathPsz	dialog3.c	?^BOOL FTruncateTmcPathPsz(tmc, ppch)$?
FTruncateTmcSz	dialog2.c	?^BOOL FTruncateTmcSz(tmc, sz)$?
FUpdateDocStats	dlgdoc.c	?^FUpdateDocStats(pndd)$?
FVSumdFromSz	docman2.c	?^FVSumdFromSz(szFilename)$?
FValidAONExp	docman2.c	?^FValidAONExp(pch,cchExp,pichError)$?
FValidFedt	dialog1.c	?^BOOL FValidFedt(hfedt)$?
FValidFedt2	dialog1.c	?^BOOL FValidFedt2(hfedt)$?
FWaitDdeMessage	ddesub.c	?^FWaitDdeMessage (usecTimeOut, usecHourGlass, pfHou?
FWaitLongerDde	ddesub.c	?^FWaitLongerDde (dcl)$?
FWaitOnDdliClient	ddeclnt.c	?^FWaitOnDdliClient (iddli)$?
FWholeTable	dlgtable.c	?^FWholeTable(psel)$?
FWildSpec	dialog3.c	?^BOOL FWildSpec(sz)$?
FWorkOn	dlgopen.c	?^FWorkOn(mru)$?
FZaFromSs	dialog3.c	?^int FZaFromSs(pza, ss, cch, ut, pfOverflow)$?
FZaFromSsVfy	dialog3.c	?^int FZaFromSsVfy(pza, ss, cch, ut, pfOverflow)$?
FcrCalcFltDde	ddeclnt.c	?^FcrCalcFltDde (doc, ifld, flt, cpInst, cpResult, p?
FedtAdjustSel	dialog2.c	?^FedtAdjustSel(hfedt)$?
FedtAdjustWordSel	dialog2.c	?^FedtAdjustWordSel(hfedt, pichMic, pichMac, fWordSe?
FedtComputeRgnSel	dialog1.c	?^FedtComputeRgnSel(hfedt)$?
FedtExtendSel	dialog2.c	?^FedtExtendSel(hfedt, ichMicFix, ichMacFix, ichMic,?
FedtFree	dialog1.c	?^FedtFree(hfedt)$?
FedtHitTest	dialog2.c	?^FedtHitTest(hfedt, pt, pich, pli)$?
FedtInitDC	dialog1.c	?^FedtInitDC(hfedt, hdc)$?
FedtInvertRgn	dialog1.c	?^FedtInvertRgn(hfedt, hrgnInv)$?
FedtNotifyChange	dialog1.c	?^FedtNotifyChange(hfedt)$?
FedtNotifyParent	dialog1.c	?^long FedtNotifyParent(phfedt, fn)$?
FedtRedraw	dialog1.c	?^FedtRedraw(hfedt, ichMic, ichMac)$?
FedtReleaseDC	dialog1.c	?^FedtReleaseDC(hfedt)$?
FedtScroll	dialog2.c	?^FedtScroll(hfedt, dx, dy)$?
FedtSetSel	dialog1.c	?^FedtSetSel(hfedt, ichMic, ichMac)$?
FedtSetSel2	dialog1.c	?^FedtSetSel2(hfedt, ichMic, ichMac, ichCaret, liCar?
FedtShowSel	dialog1.c	?^FedtShowSel(hfedt, fShow)$?
FedtTrackSel	dialog2.c	?^FedtTrackSel(hfedt, ptHit, grf, fWordSel)$?
FedtUpdateSel	dialog1.c	?^FedtUpdateSel(hfedt, fMinScroll)$?
FedtWndProc	dialog1.c	?^long EXPORT FAR PASCAL FedtWndProc(hwnd, wm, wPara?
FetchToHypd	dlghyph.c	?^FetchToHypd(doc, cpFirst, cpLim, phypd)$?
FillDOTComboTmc	dlgopen.c	?^FillDOTComboTmc(tmc, szTHD)$?
FillMacroListTmc	dialog3.c	?^FillMacroListTmc(tmc, mct)$?
FillStatInfo	dlgdoc.c	?^FillStatInfo(pndd, fCWords)$?
ForceKeyboardSpeed	dlgmisc.c	?^ForceKeyboardSpeed()$?
ForeColor	disp1.c	?^EXPORT ForeColor(hdc, ico)$?
FormatBorders	dispbrc.c	?^EXPORT FormatBorders ( doc, cp, cpCurPara, cpFirst?
FrameDr	dispspec.c	?^EXPORT FrameDr( ww, hpldr, idr, fFat )$?
FrameMarginsWw	dispspec.c	?^FrameMarginsWw(ww)$?
FrameRectRop	dispspec.c	?^FrameRectRop(hdc,prc,rop)$?
FreeAONTree	docman2.c	?^FreeAONTree(hAONRoot)$?
FreeDMQSD	docman2.c	?^FreeDMQSD(pDmqsd)$?
FreeDMQSDTree	docman2.c	?^FreeDMQSDTree(pDMQSD)$?
FreePSumd	docman2.c	?^FreePSumd(psumd)$?
GarbageCollectDde	ddeclnt.c	?^GarbageCollectDde ()$?
GenLbStyMapForDoc	dialog3.c	?^GenLbStyMapForDoc(doc, fAll, fFillMap)$?
GenLbStyleMapping	dialog3.c	?^GenLbStyleMapping()$?
GenUniqueMacroNameSz	dlgrec.c	?^GenUniqueMacroNameSz(stBuf)$?
GetAbsPosDefaults	dlglook2.c	?^GetAbsPosDefaults(pcmb, ppap, ppapGray)$?
GetCellBorders	dlgtable.c	?^GetCellBorders(rgbrc, psel)$?
GetCharDefaults	dlglook1.c	?^GetCharDefaults(pcmb, pchp, pchpGray)$?
GetFormatSt	ddesrvr.c	?^GetFormatSt(cf, st)$?
GetInitials	dlgmisc.c	?^GetInitials(stzName, stzInitl)$?
GetMarginsRcw	dispspec.c	?^GetMarginsRcw(prcw, ww)$?
GetRgbIco	disp1.c	?^DWORD GetRgbIco(ico)$?
GetSelBarRect	disp1.c	?^GetSelBarRect( ww, prc )$?
GetSzFile	dlgopen.c	?^GetSzFile(hcab, szName, cbSzName, iag)$?
GetXlMargins	disp1.c	?^GetXlMargins(pdop, fRight, dxConvert, pxlLeft, pxl?
GetfNormal	dlglook2.c	?^GetfNormal()$?
GrayBtnOnSzBlank	dialog1.c	?^GrayBtnOnSzBlank(sz, tmcButton)$?
GrayButtonOnBlank	dialog1.c	?^VOID GrayButtonOnBlank(tmcEdit, tmcButton)$?
GrayRgtmcOnBlank	dialog3.c	?^VOID GrayRgtmcOnBlank(rgtmc, itmcMac, tmcButton)$?
GrfGetShift	dialog2.c	?^#define GrfGetShift() ( SetOurKeyState(), vgrpfKey?
GrpfWillDirtyPdopHcab	dlgdoc.c	?^int GrpfWillDirtyPdopHcab(pdop, hcab)$?
HBuildAONTree	docman2.c	?^struct AONNODE **HBuildAONTree(ppch,OpParent,hrgdc?
HDataWriteSti	ddesrvr.c	?^HDataWriteSti (sti)$?
HInitQue	ddesub.c	?^HInitQue (cb, iIncr)$?
HRenderClipLink	ddesrvr.c	?^HRenderClipLink ()$?
HpFcSwap	docman2.c	?^HpFcSwap(iLeft,iRight,hprgfc)$?
HpRgFcISort	docman2.c	?^HpRgFcISort(iLeft,iRight,hprgfc,soffset,pfncComp,f?
HpRgFcPartition	docman2.c	?^HpRgFcPartition(iLeft, iRight, hprgfc, soffset, pf?
HyphCancel	dlghyph.c	?^HyphCancel()$?
IASFromI	dlgdoc.c	?^#define IASFromI(i)   (i)$?
IAlertHyphAn	dlghyph.c	?^int IAlertHyphAn(an, fResponse)$?
IFromIAS	dlgdoc.c	?^#define IFromIAS(iAS) (iAS)$?
IFromSign	dlglook1.c	?^#define IFromSign(qps) (((qps) > 0) ? \\$?
IFromUt	dlgdoc.c	?^#define IFromUt(ut)   (mputi[(ut)]);$?
IbkmkFromDclItem	ddesrvr.c	?^IbkmkFromDclItem (dcl, atomItem)$?
IbrclFromBrc	dlgtable.c	?^int IbrclFromBrc(brc)$?
IbrclIbrcpFromBrcs	dlglook1.c	?^IbrclIbrcpFromBrcs(pbrc, pibrcl, pibrcp, fMapLR)$?
IchFromHypXp	dlghyph.c	?^int IchFromHypXp(dxpCh, xp, cch)$?
IchFromHypXp3	dlghyph.c	?^int IchFromHypXp3(dxpAvgCh, xp, hutxd, hdc)$?
IdPromptDde	ddeclnt.c	?^IdPromptDde (mst, atom1, atom2, atom3, mb)$?
IddliAddDdliClient	ddeclnt.c	?^IddliAddDdliClient (dcl, atomItem)$?
IddliAdvise	ddeclnt.c	?^IddliAdvise (dcl, atomItem)$?
IddliFromDclItem	ddesub.c	?^IddliFromDclItem (dcl, atomItem)$?
InitHyphCancelPoll	dlghyph.c	?^BOOL InitHyphCancelPoll(pcpr)$?
InitiateAck	ddeclnt.c	?^InitiateAck (hwndUs, hwndThem, atomApp, atomTopic)?
InitiateDde	ddesrvr.c	?^InitiateDde (hwndThem, atomApp, atomTopic)$?
InsertBreakCh	dlgmisc.c	?^InsertBreakCh(ch)$?
InvalDevDepdCa	disp1.c	?^InvalDevDepdCa()$?
InvalLastDl	dispspec.c	?^InvalLastDl(ww)$?
IpgdPgnCpSect	dlgmisc.c	?^IpgdPgnCpSect (doc, pgn, cp)$?
IsedFromCp	dlgmisc.c	?^IsedFromCp (doc, cp)$?
KillTimerSEdit	dlghyph.c	?^KillTimerSEdit(hwnd, hutxd)$?
LRound3L	dlgdoc.c	?^long LRound3L(l)$?
LiFedtFromIch	dialog1.c	?^int LiFedtFromIch(hfedt, ich)$?
Look1CopyEntblToSz	dlglook1.c	?^Look1CopyEntblToSz(iEntbl, isz, sz)$?
Look1FEnumIEntbl	dlglook1.c	?^BOOL Look1FEnumIEntbl(iEntbl, isz, sz)$?
Look1WListEntbl	dlglook1.c	?^EXPORT WORD Look1WListEntbl(tmm, sz, isz, filler, ?
Look2CopyEntblToSz	dlglook2.c	?^Look2CopyEntblToSz(iEntbl, isz, sz)$?
Look2FEnumIEntbl	dlglook2.c	?^BOOL Look2FEnumIEntbl(iEntbl, isz, sz)$?
Look2WListEntbl	dlglook2.c	?^EXPORT WORD Look2WListEntbl(tmm, sz, isz, filler, ?
MarkIddliClient	ddeclnt.c	?^MarkIddliClient (iddli)$?
MarkSel	disp1.c	?^HANDNATIVE MarkSel(ww, hpldr, idr, psel, pedl, cpM?
MouseMoveSEdit	dlghyph.c	?^MouseMoveSEdit(hwnd, xp, hutxd)$?
MoveHyphPointIch	dlghyph.c	?^MoveHyphPointIch(ich, cch, hutxd, hwnd)$?
NewGrpprlFromRgProp	dialog2.c	?^NewGrpprlFromRgProp(rgProp, fCab, mpiagspnt, grppr?
NewPropToCab	dlglook2.c	?^NewPropToCab(hcab, prgbProp, mpiagspnt)$?
NewPropToCabGray	dlglook1.c	?^NewPropToCabGray(hcab, prgbProp, prgbGray, mpiagsp?
NinchPrb	dlglook2.c	?^NinchPrb(prb, mpiagspnt)$?
OurNinchCab	dlglook1.c	?^OurNinchCab(hcab, mpiagspnt)$?
OurResizeDlg	dialog2.c	?^OurResizeDlg(dx, dy)$?
PaintStyStub	dispspec.c	?^PaintStyStub(ww, prc)$?
ParseDMQPath	docman1.c	?^ParseDMQPath()$?
PchLastFit	dialog2.c	?^char *PchLastFit(dxChar, pchMic, pchMac, pdxMax)$?
PchLastFit3	dialog2.c	?^char *PchLastFit3(hdc, dxChar, pchMic, pchMac, pdx?
PchNextHardBrk	dialog1.c	?^char *PchNextHardBrk(pch, pchMac)$?
PchNextTextBrk	dialog2.c	?^char *PchNextTextBrk(pch, pchMac, fBreak)$?
PchPrevHardBrk	dialog2.c	?^char *PchPrevHardBrk(pch, pchMic)$?
PchPrevTextBrk	dialog2.c	?^char *PchPrevTextBrk(pch, pchMic, fBreak)$?
PchSkipPath	dialog2.c	?^char * PchSkipPath(sz)$?
PcmbInitCmb	dialog1.c	?^CMB * PcmbInitCmb(pcmb, kc, bcm, cmm)$?
PdcldDcl	ddesub.c	?^NATIVE struct DCLD *PdcldDcl (dcl)$?
PdttmToSt	dlgdoc.c	?^PdttmToSt(pch, st, cchMax)$?
PdttmToStTD	dlgdoc.c	?^PdttmToStTD(pch, st, cchMax)$?
PegRange	dialog1.c	?^int PegRange(w, wFirst, wLast)$?
PlminToSt	dlgdoc.c	?^PlminToSt(pch, st, cchMax)$?
PlongToSt	dlgdoc.c	?^PlongToSt(pch, st, cchMax)$?
PmdcdCacheIdrb	disp1.c	?^EXPORT struct MDCD *PmdcdCacheIdrb( idrb, hdcDest ?
PmdcdCachePbmi	disp1.c	?^struct MDCD *PmdcdCachePbmi( pbmi, hdcDest )$?
PrbToCab	dialog1.c	?^PrbToCab(prb, hcab, iagStart, ciag)$?
PrcSelBar	disp1.c	?^struct RC *PrcSelBar( ww, prc )$?
PromptUserName	dlgmisc.c	?^PromptUserName()$?
PropToPrbGray	dialog1.c	?^PropToPrbGray(prb, prgbProp, prgbGray, mpiagspnt)$?
ProposeHyph	dlghyph.c	?^ProposeHyph(hhypb)$?
PunsToSt	dlgdoc.c	?^PunsToSt(pch, st, cchMax)$?
RangeError	dialog2.c	?^RangeError(wLow, wHigh, fZa, ut)$?
ReaddAtom	ddesub.c	?^ReaddAtom (atom)$?
RecordAppMove	dlgrec.c	?^RecordAppMove(xp, yp)$?
RecordAppSize	dlgrec.c	?^RecordAppSize(dxp, dyp)$?
RecordAppSysCmd	dlgrec.c	?^RecordAppSysCmd(sc)$?
RecordChdir	dlgrec.c	?^RecordChdir(stPath)$?
RecordDelFile	dlgrec.c	?^RecordDelFile(stName)$?
RecordDocMove	dlgrec.c	?^RecordDocMove(xp, yp)$?
RecordDocSize	dlgrec.c	?^RecordDocSize(dxp, dyp)$?
RecordDocSysCmd	dlgrec.c	?^RecordDocSysCmd(sc)$?
RecordExtendSelToCh	dlgrec.c	?^RecordExtendSelToCh(ch)$?
RecordGrpprl	dlgrec.c	?^RecordGrpprl(grpprl, cb)$?
RecordMargin	dlgrec.c	?^RecordMargin(ircs, za)$?
RecordPaneChange	dlgrec.c	?^RecordPaneChange()$?
RecordRepeatTyping	dlgrec.c	?^RecordRepeatTyping(pca)$?
RecordRulerDoc	dlgrec.c	?^RecordRulerDoc(fRight, xa)$?
RecordRulerMargins	dlgrec.c	?^RecordRulerMargins(sprm, val)$?
RecordSplit	dlgrec.c	?^RecordSplit(yp)$?
RecordSprmVal	dlgrec.c	?^RecordSprmVal(sprm, val)$?
RecordStyleProps	dlgrec.c	?^RecordStyleProps(idd)$?
RecordWindowChange	dlgrec.c	?^RecordWindowChange(hwnd, iPane)$?
RecordZa	dlgrec.c	?^RecordZa(za)$?
RestartTimerSEdit	dlghyph.c	?^RestartTimerSEdit(hwnd, hutxd)$?
RgLeafSearchSz	docman2.c	?^RgLeafSearchSz(szSpec,cLeaves,hrgdchLeaves,hrgLenL?
RgWidthFromCenter	dlgtable.c	?^RgWidthFromCenter(pdxaWidth, pdxaCenter, ptc, itcM?
SbAlloc	docman2.c	?^SB SbAlloc(cbRequest, pcbNew)$?
ScrollDelta	disp1.c	?^ScrollDelta(dSty, cScroll, dlMax, dypWw, pdysMin, ?
ScrollHoriz	dispspec.c	?^ScrollHoriz(ww, dxpScroll)$?
ScrollHoriz1	dispspec.c	?^ScrollHoriz1(ww, dxpScroll)$?
ScrollLeft	dispspec.c	?^ScrollLeft(ww, dxp)$?
ScrollRight	dispspec.c	?^ScrollRight(ww, dxp)$?
ScrollWw	disp1.c	?^EXPORT ScrollWw(ww, hpldr, idr, ypFrom, ypTo, dyp)?
SetDopFromHcab	dlgdoc.c	?^SetDopFromHcab(pdop, hcab)$?
SetDopInval	dlgdoc.c	?^SetDopInval(doc, hcab, pgrpf)$?
SetFlm	disp1.c	?^NATIVE SetFlm( flm ) /* Only minimal preface code ?
SetHyphStaticEdit	dlghyph.c	?^SetHyphStaticEdit(hhypb)$?
SetScratchPbmi	disp1.c	?^SetScratchPbmi( pbmi )$?
ShowFileInUse	docman1.c	?^ShowFileInUse(pchFilename)$?
SignFromI	dlglook1.c	?^#define SignFromI(_i) (((_i) > 0) ? 1 : (((_i) < 0?
SizeWnRc	dialog2.c	?^SizeWnRc(hwnd, prc, fRedraw)$?
StFromAtom	ddesub.c	?^StFromAtom (st, cchMax, atom)$?
StSortFromDMFc	docman2.c	?^StSortFromDMFc(fc, stSortField, cchMax)$?
StaticEditWndProc	dlghyph.c	?^NATIVE LONG FAR PASCAL StaticEditWndProc(hwnd, msg?
StiFromSystemItem	ddesrvr.c	?^StiFromSystemItem (atomItem)$?
SwapFtiConnections	disp1.c	?^SwapFtiConnections()$?
SwapPw2	dialog2.c	?^SwapPw2(pw1, pw2)$?
SzLen	dialog1.c	?^#define SzLen(sz)   (CchSz(sz)-1)$?
SzSearchSz	docman2.c	?^SzSearchSz(pchPattern,pchString)$?
SzSpectoGrepRghsz	docman2.c	?^SzSpectoGrepRghsz(szSpec,hrgdch,hrgLen,hrghsz,cLea?
TableSelToCab	dlgtable.c	?^TableSelToCab(psel, pcmb)$?
TerminateAllDdeDcl	ddesub.c	?^TerminateAllDdeDcl (fMacroToo)$?
TerminateDcl	ddesub.c	?^TerminateDcl (dcl)$?
TerminateDdeDoc	ddesub.c	?^TerminateDdeDoc (doc)$?
TmcCharacterLooks	dlglook1.c	?^int TmcCharacterLooks(pcmb)$?
TmcDSAction	dlgdoc.c	?^TmcDSAction(pcmb, pndd, pfDirty)$?
TmcDoCabNew	dlgopen.c	?^TmcDoCabNew(pcmb)$?
TmcDoDocSummary	dlgdoc.c	?^int TmcDoDocSummary(pcmb, doc, pfDirty, fEnableOK,?
TmcDoFileDlg	dlgopen.c	?^TmcDoFileDlg(pcmb)$?
TmcGosubCharacter	dlglook1.c	?^int TmcGosubCharacter()$?
TmcGosubDocStat	dlgdoc.c	?^TmcGosubDocStat(pndd, tmcTitle)$?
TmcGosubParagraph	dlglook1.c	?^TMC TmcGosubParagraph()$?
TmcGosubPosition	dlglook2.c	?^int TmcGosubPosition()$?
TmcNew	dlgopen.c	?^int TmcNew(pcmb)$?
TmcNewOpen	dlgopen.c	?^TmcNewOpen(st)$?
TmcOpen	dlgopen.c	?^int TmcOpen(pcmb)$?
TmcOurDoDlg	dialog1.c	?^TMC TmcOurDoDlg(pdlt, pcmb)$?
TmcOurDoDlg1	dialog1.c	?^TMC TmcOurDoDlg1(hdlt, pcmb)$?
TmcParagraph	dlglook1.c	?^TMC TmcParagraph(pcmb)$?
TmcPosition	dlglook2.c	?^TMC TmcPosition(pcmb)$?
ToggleSel	disp1.c	?^ToggleSel(psel, cpFirst, cpLim)$?
ToggleSel1	disp1.c	?^ToggleSel1(psel, hpldr/*hwwd*/, cpFirst, cpLim)$?
TurnOffCaretHyp	dlghyph.c	?^TurnOffCaretHyp(hwnd, hutxd)$?
TurnOnCaretHyp	dlghyph.c	?^TurnOnCaretHyp(hwnd, hutxd)$?
UnloadHyph	dlghyph.c	?^UnloadHyph()$?
UnreferenceClientDdlis	ddeclnt.c	?^UnreferenceClientDdlis (dcl, iddli)$?
UpdateDOTList	dlgopen.c	?^int UpdateDOTList(tmc)$?
UpdateDirtyLinks	ddesrvr.c	?^UpdateDirtyLinks ()$?
UpdateFcDMEnum	docman1.c	?^UpdateFcDMEnum(irgfc, fQuickSave)$?
UpdateHotLinks	ddeclnt.c	?^UpdateHotLinks ()$?
UpdateSEditHyph	dlghyph.c	?^UpdateSEditHyph(hwnd, hdc, hutxd)$?
UpdateStats	dlgdoc.c	?^UpdateStats(pndd)$?
UpdateUserName	dlgmisc.c	?^UpdateUserName(pcmb, fFromCustomize)$?
UpdateWindowWw	disp1.c	?^UpdateWindowWw(ww)$?
UsecDdeTimeOut	ddesub.c	?^LONG UsecDdeTimeOut ()$?
UtFromI	dlgdoc.c	?^#define UtFromI(_i)   (((_i) >= iUnitMax) ? utMax ?
ValidateServerLinks	ddesrvr.c	?^ValidateServerLinks ()$?
WCompCps	docman2.c	?^int WCompCps(pcpLeft,pcpRight)$?
WFromSzNumber	dialog2.c	?^int WFromSzNumber( szNumber )$?
WListBkmk	dlgmisc.c	?^EXPORT WORD WListBkmk(tmm, sz, isz, filler, tmc, w?
WListBoxNull	dialog1.c	?^WORD WListBoxNull(tmm, sz, isz, filler, tmc, wPara?
WListDot	dlgopen.c	?^EXPORT WORD WListDot(tmm, sz, isz, filler, tmc, wP?
WListEntbl	dialog1.c	?^EXPORT WORD WListEntbl(tmm, sz, isz, filler, tmc, ?
WListFontName	dlglook1.c	?^WORD WListFontName(tmm, sz, isz, filler, tmc, wPar?
WListFontSize	dlglook1.c	?^WORD WListFontSize(tmm, sz, isz, filler, tmc, wPar?
WParseCol	dlglook2.c	?^WORD WParseCol(tmm, sz, ppv, bArg, tmc, opt)$?
WParseDttm	dialog3.c	?^WParseDttm(tmm, sz, ppv, bArg, tmc, wParam)$?
WParseHpsQps	dlglook1.c	?^EXPORT WORD WParseHpsQps(tmm, sz, ppv, bArg, tmc, ?
WParseIntRange	dialog2.c	?^WORD WParseIntRange(tmm, sz, ppv, bArg, tmc, wLow,?
WParseOpt	dialog3.c	?^WORD WParseOpt(tmm, sz, ppv, bArg, tmc, opt)$?
WParseOptRange	dialog3.c	?^WORD WParseOptRange(tmm, sz, ppv, bArg, tmc, opt, ?
WParsePos	dlglook2.c	?^EXPORT WORD WParsePos (tmm, sz, ppv, bArg, tmc, wP?
WPictureStaticEdit	dlghyph.c	?^EXPORT WORD WPictureStaticEdit(tmm, psdmp, hwndDlg?
WaitDdeTerminated	ddesub.c	?^WaitDdeTerminated ()$?
XpFromHypIch	dlghyph.c	?^#define XpFromHypIch(dxp, ich)  (DxpLeftSE(dxp) + ?
rghszHswap	docman2.c	?^rghszHswap (i, j, rghsz)$?
rghszQSort	docman2.c	?^rghszQSort(iLeft, iRight, rghsz, soffset)$?
AddEvent	eldde.c	?^AddEvent(wm, vk, phevt)$?
AddKeys	eldde.c	?^AddKeys(phevt)$?
AobOut	eldlg.c	?^AobOut(hdc, paob, irgb)$?
ApplySprmValSelCur	elmisc2.c	?^ApplySprmValSelCur(sprm, val)$?
BchAddSdToUsrDlg	eldlg.c	?^uns BchAddSdToUsrDlg(itm, sd)$?
BeginCommit	edit.c	?^#define BeginCommit()   AssertDo(!vfInCommit++)$?
BstRngFromHid	elsubs3.c	?^int BstRngFromHid(hid)$?
BsyEnsureMacroExists	edmacro.c	?^BsyEnsureMacroExists(stName, docDot, pfNew)$?
C_CloseTns	edit.c	?^HANDNATIVE C_CloseTns(pxbc)$?
C_FDoTns	edit.c	?^HANDNATIVE C_FDoTns(pxbc)$?
C_FRepl1	edit.c	?^HANDNATIVE BOOL C_FRepl1(pca, fn, fc, dfc)$?
C_FReplace	edit.c	?^HANDNATIVE BOOL C_FReplace(pca, fn, fc, dfc)$?
C_FReplaceCps	edit.c	?^HANDNATIVE BOOL C_FReplaceCps(pcaDel, pcaIns)$?
C_IpcdSplit	edit.c	?^HANDNATIVE int C_IpcdSplit(hplcpcd, cp)$?
C_PostTn	edit.c	?^HANDNATIVE C_PostTn(pxbc, tnt, h, c)$?
C_PxsInit	edit.c	?^HANDNATIVE char *C_PxsInit(pxs, ixsMax, pxbc)$?
C_XDelFndSedPgdPad	edit.c	?^HANDNATIVE C_XDelFndSedPgdPad(fPlan, pxbc, pxsr)$?
C_XRepl1	edit.c	?^HANDNATIVE C_XRepl1(fPlan, pxbc, pxsr)$?
C_XReplace	edit.c	?^HANDNATIVE C_XReplace(fPlan, pxbc, pxsr)$?
C_XReplaceCps	edit.c	?^HANDNATIVE C_XReplaceCps(fPlan, pxbc, pxsr)$?
CacheSavePara	elsubs2.c	?^CacheSavePara(doc, cp, pca)$?
CancelMods	eldde.c	?^CancelMods(pfShift, pfCtrl, pfAlt, fMatch, phevt)$?
CbGetInfoIeldi	elxprocs.c	?^WORD CbGetInfoIeldi(ieldi, hpeldi)$?
CchPnumToPch	elsubs3.c	?^CchPnumToPch(pnum, pch)$?
CchReadDDESource	eldde.c	?^WORD CchReadDDESource(pb, cbReq, heli)$?
CchReadEdit	elsubs2.c	?^WORD CchReadEdit(pb, cbReq, heli)$?
CchReadSource	elsubs2.c	?^WORD CchReadSource(pb, cbReq, heli)$?
ChangeCpsInRange	edit.c	?^ChangeCpsInRange(hplc, cpFirst, cpLim, cpNew)$?
CheckPxs	edit.c	?^#define CheckPxs(fPlan,pxs,nxsT,wT) (fPlan ? (pxs-?
CheckRgksp	eldlg.c	?^CheckRgksp(kc)$?
CheckStmOpen	elfile.c	?^CheckStmOpen(stm)$?
Clear1DArray	elmisc2.c	?^Clear1DArray(ad)$?
CloseBkmkStructs	edit.c	?^EXPORT CloseBkmkStructs(pdod)$?
CloseFloppyStm	elfile.c	?^CloseFloppyStm(stm)$?
CmdAnimateMacro	edmacro.c	?^CMD CmdAnimateMacro(pcmb)$?
CmdCallInterp	edmacro.c	?^CMD CmdCallInterp(imei)$?
CmdContinueMacro	edmacro.c	?^CMD CmdContinueMacro(pcmb)$?
CmdEditMacro	edmacro.c	?^CMD CmdEditMacro(pcmb)$?
CmdExecMacroDotImcr	elsubs2.c	?^CMD CmdExecMacroDotImcr(docDot, imcr)$?
CmdMacro	edmacro.c	?^CMD CmdMacro(pcmb)$?
CmdRunBcmEl	edmacro.c	?^CmdRunBcmEl(bcm)$?
CmdShowVars	edmacro.c	?^CMD CmdShowVars(pcmb)$?
CmdStepMacro	edmacro.c	?^CMD CmdStepMacro(pcmb)$?
CmdThesaurus	etcmd.c	?^CMD CmdThesaurus (pcmb)$?
CmdTraceMacro	edmacro.c	?^CMD CmdTraceMacro(pcmb)$?
CmdUserDialog	eldlg.c	?^CMD CmdUserDialog(pcmb)$?
CommAllELOF	elfile.c	?^CommAllELOF()$?
CommHexPbCb	elmisc2.c	?^CommHexPbCb(pb, cb)$?
CommHexPwCw	elmisc2.c	?^CommHexPwCw(pw, cw)$?
CommHexRgb	elsubs3.c	?^CommHexRgb(pb, cb)$?
CpMacroLineIb	elsubs2.c	?^CP CpMacroLineIb(imei, ib)$?
DeleteIbkf	edit.c	?^DeleteIbkf (doc, ibkfDel, hsttb, hplcbkf, hplcbkl,?
DiscardThesaurus	etcmd.c	?^DiscardThesaurus ()$?
DocCreateMcr	edmacro.c	?^int DocCreateMcr(docDot)$?
DocEditOfMeiCur	edmacro.c	?^int DocEditOfMeiCur()$?
EFElMacros	elmisc.c	?^EFElMacros(lpsy, bsy, stName, wParam)$?
ELDisableInput	elmisc.c	?^EL ELDisableInput(fDisable)$?
ELShowAll	elmisc2.c	?^ELShowAll(fOn)$?
Edit_Last	edit.c	?^Edit_Last(){}$?
ElActivate	elmisc2.c	?^ElActivate(hst, iPane)$?
ElActivateApp	eldde.c	?^EL ElActivateApp(pstApp, fImmediate)$?
ElAppMove	elmisc2.c	?^EL ElAppMove(x, y)$?
ElAppSize	elmisc2.c	?^EL ElAppSize(dx, dy)$?
ElBeep	elmisc.c	?^EL ElBeep(w)$?
ElBeginDialog	eldlg.c	?^EL ElBeginDialog(x, y, dx, dy, fAutoPos)$?
ElBlockSel	elmisc.c	?^EL ElBlockSel()$?
ElBold	elmisc2.c	?^EL ElBold(fOn)$?
ElCancelButton	eldlg.c	?^EL ElCancelButton(x, y, dx, dy)$?
ElCenterPara	elmisc2.c	?^EL ElCenterPara()$?
ElCharColor	elmisc2.c	?^EL ElCharColor(ico)$?
ElChdir	elfile.c	?^ElChdir(hstPath)$?
ElCheckBox	eldlg.c	?^EL ElCheckBox(x, y, dx, dy, sd, elk)$?
ElClose	elfile.c	?^ElClose(stm)$?
ElClosePara	elmisc2.c	?^EL ElClosePara()$?
ElComboBox	eldlg.c	?^EL ElComboBox(x, y, dx, dy, ad, elk)$?
ElCopyBk	elmisc.c	?^EL ElCopyBk(pstBk1, pstBk2)$?
ElCountFonts	elmisc2.c	?^EL ElCountFonts()$?
ElCountKeys	elmisc2.c	?^ElCountKeys(fTemplate)$?
ElCountMenuItems	elmisc2.c	?^ElCountMenuItems(imnu, fTemplate)$?
ElDDEAdvise	eldde.c	?^EL ElDDEAdvise (pstApp, pstTopic, pstItem)$?
ElDDEExecute	eldde.c	?^EL ElDDEExecute (dcl, pstExec)$?
ElDDEInitiate	eldde.c	?^EL ElDDEInitiate (pstApp, pstTopic)$?
ElDDEPoke	eldde.c	?^EL ElDDEPoke (dcl, pstItem, hpsdData)$?
ElDDETermAll	eldde.c	?^EL ElDDETermAll ()$?
ElDDETerminate	eldde.c	?^EL ElDDETerminate (dcl)$?
ElDDEUnadvise	eldde.c	?^EL ElDDEUnadvise (pstApp, pstTopic, pstItem)$?
ElDbgErrorLevel	elfile.c	?^EL ElDbgErrorLevel(nLevel)$?
ElDblUnderline	elmisc2.c	?^EL ElDblUnderline(fOn)$?
ElDelete	elmisc.c	?^EL ElDelete(dcp)$?
ElDialogText	eldlg.c	?^EL ElDialogText(x, y, dx, dy, hpsd)$?
ElDisableAutoMacros	elmisc.c	?^EL ElDisableAutoMacros(fDisable)$?
ElDoDebugTests	elfile.c	?^EL ElDoDebugTests()$?
ElDownLine	elmisc.c	?^EL ElDownLine(cRepeat, fDrag)$?
ElDownPara	elmisc.c	?^EL ElDownPara(cRepeat, fDrag)$?
ElDownWindow	elmisc.c	?^EL ElDownWindow(cRepeat, fDrag)$?
ElEditFNContNotice	elmisc2.c	?^EL ElEditFNContNotice()$?
ElEditFNContSep	elmisc2.c	?^EL ElEditFNContSep()$?
ElEditFNSep	elmisc2.c	?^EL ElEditFNSep()$?
ElEditText	eldlg.c	?^EL ElEditText(x, y, dx, dy, elk)$?
ElEndDialog	eldlg.c	?^EL ElEndDialog()$?
ElEndOfBk	elmisc.c	?^EL void ElEndOfBk(pstBk1, pstBk2)$?
ElEndOfDoc	elmisc.c	?^EL ElEndOfDoc(fDrag)$?
ElEndOfLine	elmisc.c	?^EL ElEndOfLine(fDrag)$?
ElEndOfWindow	elmisc.c	?^EL ElEndOfWindow(fDrag)$?
ElFEmptyBk	elmisc.c	?^EL BOOL ElFEmptyBk(pstName)$?
ElFIsDirty	elfile.c	?^EL ElFIsDirty()$?
ElFNilBk	elmisc.c	?^EL BOOL ElFNilBk(pstName)$?
ElFileSaveAll	elmisc.c	?^EL ElFileSaveAll(ac)$?
ElFont	elmisc2.c	?^EL ElFont(hstName, numps)$?
ElFontName	elmisc2.c	?^EL SD ElFontName(i)$?
ElGloss	elmisc.c	?^EL ElGloss(pstName, fDot)$?
ElGroupBox	eldlg.c	?^EL ElGroupBox(x, y, dx, dy, hpsd)$?
ElHLine	elmisc2.c	?^EL ElHLine(d)$?
ElHPage	elmisc2.c	?^EL ElHPage(d)$?
ElInput	elfile.c	?^ElInput(stm, hpsdPrompt, hpsdInput)$?
ElInsPara	elmisc.c	?^EL ElInsPara()$?
ElInsert	elmisc.c	?^EL ElInsert(hpsd)$?
ElItalic	elmisc2.c	?^EL ElItalic(fOn)$?
ElJustifyPara	elmisc2.c	?^EL ElJustifyPara()$?
ElKeyCode	elmisc2.c	?^ElKeyCode(iKey, fTemplate)$?
ElKill	elfile.c	?^ElKill(hstFile)$?
ElLaunch	elmisc.c	?^EL ElLaunch(pst, sw)$?
ElLeftChar	elmisc.c	?^EL ElLeftChar(cRepeat, fDrag)$?
ElLeftPara	elmisc2.c	?^EL ElLeftPara()$?
ElLeftSent	elmisc.c	?^EL ElLeftSent(cRepeat, fDrag)$?
ElLeftWord	elmisc.c	?^EL ElLeftWord(cRepeat, fDrag)$?
ElListBox	eldlg.c	?^EL ElListBox(x, y, dx, dy, ad, elk)$?
ElMemAllocFail	elfile.c	?^EL ElMemAllocFail (cSuc, cFail)$?
ElMkdir	elfile.c	?^ElMkdir(hstPath)$?
ElMoveWindow	elmisc2.c	?^EL ElMoveWindow(x, y)$?
ElMsgBox	elmisc.c	?^EL ElMsgBox(pstMsg, hpsd, num, mb)$?
ElName	elfile.c	?^ElName(hpsdCurrent, hpsdNew)$?
ElNumFontSize	elmisc2.c	?^EL NUM ElNumFontSize(numps)$?
ElNumHScroll	elmisc2.c	?^EL NUM ElNumHScroll(numPercent)$?
ElNumLof	elfile.c	?^NUM ElNumLof(stm)$?
ElNumRnd	elmisc.c	?^NUM ElNumRnd(wIgnored)$?
ElNumSeek	elfile.c	?^NUM ElNumSeek(stm, numPos)$?
ElNumVScroll	elmisc2.c	?^EL NUM ElNumVScroll(numPercent)$?
ElOKButton	eldlg.c	?^EL ElOKButton(x, y, dx, dy)$?
ElOnTime	elmisc.c	?^ElOnTime(hpsdTime, numTime, hstMacro, numTolerance?
ElOpen	elfile.c	?^ElOpen(fom, stm, sd)$?
ElOpenPara	elmisc2.c	?^EL ElOpenPara()$?
ElOptionButton	eldlg.c	?^EL ElOptionButton(x, y, dx, dy, hpsd)$?
ElOptionGroup	eldlg.c	?^EL ElOptionGroup(elk)$?
ElOutlineShowFirstLine	elmisc.c	?^EL ElOutlineShowFirstLine(fOn)$?
ElPrint	elfile.c	?^EL ElPrint(stm, hpsd)$?
ElProp	elmisc2.c	?^ElProp(sprm, val, valCmp)$?
ElRareEvent	elmisc.c	?^EL ElRareEvent(i, wEventNumber, wRepetitionsMac, w?
ElRefreshRate	elfile.c	?^EL ElRefreshRate(nRate)$?
ElRenameMenu	elmisc.c	?^EL ElRenameMenu(imnu, hstNewName)$?
ElRightChar	elmisc.c	?^EL ElRightChar(cRepeat, fDrag)$?
ElRightPara	elmisc2.c	?^EL ElRightPara()$?
ElRightSent	elmisc.c	?^EL ElRightSent(cRepeat, fDrag)$?
ElRightWord	elmisc.c	?^EL ElRightWord(cRepeat, fDrag)$?
ElRmdir	elfile.c	?^ElRmdir(hstPath)$?
ElRsetFNContNotice	elmisc2.c	?^EL ElRsetFNContNotice()	/* EL Reset Footnote Conti?
ElRsetFNContSep	elmisc2.c	?^EL ElRsetFNContSep()	/* EL Reset Footnote Continua?
ElRsetFNSep	elmisc2.c	?^EL ElRsetFNSep()	/* EL Reset Footnote Separator */?
ElSdAppInfo	elfile.c	?^EL SD ElSdAppInfo(type)$?
ElSdBkName	elmisc.c	?^EL SD ElSdBkName(iBk)$?
ElSdBookmark	elmisc.c	?^EL SD ElSdBookmark(pstName)$?
ElSdDDERequest	eldde.c	?^EL SD ElSdDDERequest (dcl, pstItem)$?
ElSdDate	elmisc2.c	?^EL SD ElSdDate()$?
ElSdFetch	elmisc.c	?^EL SD ElSdFetch()$?
ElSdFileName	elfile.c	?^EL SD ElSdFileName(iMRU)$?
ElSdFiles	elfile.c	?^EL SD ElSdFiles(hstFilename)$?
ElSdGetProfileString	elmisc.c	?^EL SD ElSdGetProfileString(pst1, pst2)$?
ElSdGloss	elmisc.c	?^EL SD ElSdGloss(pstName, fDot)$?
ElSdGlossName	elmisc.c	?^EL SD ElSdGlossName(iGloss, fDot)$?
ElSdInkey	elmisc.c	?^EL SD ElSdInkey()$?
ElSdInputBox	elmisc.c	?^EL SD ElSdInputBox(hstPrompt, hstTitle, hstDefault?
ElSdInputn	elfile.c	?^EL SD ElSdInputn(cchReq, stm)$?
ElSdKeyMacro	elmisc2.c	?^SD ElSdKeyMacro(iKey, fTemplate)$?
ElSdLcase	elfile.c	?^EL SD ElSdLcase(hpsd)$?
ElSdMacroDesc	elmisc2.c	?^SD ElSdMacroDesc(hstName)$?
ElSdMacroName	elmisc.c	?^EL SD ElSdMacroName(iMacro, fTemplate, fAll)$?
ElSdMenuMacro	elmisc2.c	?^SD ElSdMenuMacro(imnu, imtm, fTemplate)$?
ElSdMenuText	elmisc2.c	?^SD ElSdMenuText(imnu, imtm, fTemplate)$?
ElSdStyleName	elmisc2.c	?^EL SD ElSdStyleName(wCount, fContext, fAll)$?
ElSdTabLeader	elmisc2.c	?^EL SD ElSdTabLeader(numPos)$?
ElSdTime	elmisc2.c	?^EL SD ElSdTime()$?
ElSdUcase	elfile.c	?^EL SD ElSdUcase(hpsd)$?
ElSdWindowName	elmisc2.c	?^EL SD ElSdWindowName(i)$?
ElSendKeys	eldde.c	?^EL ElSendKeys(pstKeys, fWait)$?
ElSetAgainCab	elsubs2.c	?^ElSetAgainCab(bcm, hcab)$?
ElSetDirty	elfile.c	?^EL ElSetDirty(fDirty)$?
ElSetProfileString	elmisc.c	?^EL ElSetProfileString(pst1, pst2, pst3)$?
ElSizeWindow	elmisc2.c	?^EL ElSizeWindow(dx, dy)$?
ElSmallCaps	elmisc2.c	?^EL ElSmallCaps(fOn)$?
ElSpace1	elmisc2.c	?^EL ElSpace1()$?
ElSpace15	elmisc2.c	?^EL ElSpace15()$?
ElSpace2	elmisc2.c	?^EL ElSpace2()$?
ElStartOfBk	elmisc.c	?^EL void ElStartOfBk(pstBk1, pstBk2)$?
ElStartOfDoc	elmisc.c	?^EL ElStartOfDoc(fDrag)$?
ElStartOfLine	elmisc.c	?^EL ElStartOfLine(fDrag)$?
ElStartOfWindow	elmisc.c	?^EL ElStartOfWindow(fDrag)$?
ElSubscript	elmisc2.c	?^EL ElSubscript(fOn)$?
ElSuperscript	elmisc2.c	?^EL ElSuperscript(fOn)$?
ElUnderline	elmisc2.c	?^EL ElUnderline(fOn)$?
ElUpLine	elmisc.c	?^EL ElUpLine(cRepeat, fDrag)$?
ElUpPara	elmisc.c	?^EL ElUpPara(cRepeat, fDrag)$?
ElUpWindow	elmisc.c	?^EL ElUpWindow(cRepeat, fDrag)$?
ElUtilCalculate	elmisc.c	?^EL NUM ElUtilCalculate(hst)$?
ElVLine	elmisc2.c	?^EL ElVLine(ddl)$?
ElVPage	elmisc2.c	?^EL ElVPage(d)$?
ElVanish	elmisc2.c	?^EL ElVanish(fOn)$?
ElViewAnnotations	elmisc.c	?^EL ElViewAnnotations(fOn)$?
ElViewDraft	elmisc.c	?^EL ElViewDraft(fOn)$?
ElViewFieldCodes	elmisc.c	?^EL ElViewFieldCodes(fOn)$?
ElViewFootnotes	elmisc.c	?^EL ElViewFootnotes(fOn)$?
ElViewFullMenus	elmisc.c	?^EL ElViewFullMenus()$?
ElViewMenus	elmisc.c	?^EL ElViewMenus()$?
ElViewOutline	elmisc.c	?^EL ElViewOutline(fOn)$?
ElViewPage	elmisc.c	?^EL ElViewPage(fOn)$?
ElViewRibbon	elmisc.c	?^EL ElViewRibbon(fOn)$?
ElViewRuler	elmisc.c	?^EL ElViewRuler(fOn)$?
ElViewShortMenus	elmisc.c	?^EL ElViewShortMenus()$?
ElViewStatusArea	elmisc.c	?^EL ElViewStatusArea(fOn)$?
ElWAppMaximize	elmisc2.c	?^EL int ElWAppMaximize(fOn)$?
ElWAppMinimize	elmisc2.c	?^EL int ElWAppMinimize(fOn)$?
ElWAppRestore	elmisc2.c	?^EL int ElWAppRestore()$?
ElWCmpBk	elmisc.c	?^EL int ElWCmpBk(pstBk1, pstBk2)$?
ElWCountBk	elmisc.c	?^EL int ElWCountBk()$?
ElWCountFiles	elfile.c	?^EL int ElWCountFiles()$?
ElWCountGloss	elmisc.c	?^EL ElWCountGloss(fDot)$?
ElWCountMacros	elmisc.c	?^EL int ElWCountMacros(fTemplate, fAll)$?
ElWCountStyles	elmisc2.c	?^EL int ElWCountStyles (fContext, fAll)$?
ElWCountWindows	elmisc2.c	?^EL ElWCountWindows()$?
ElWDocMaximize	elmisc2.c	?^EL int ElWDocMaximize(fOn)$?
ElWEof	elfile.c	?^int ElWEof(stm)$?
ElWPane	elmisc2.c	?^EL ElWPane()$?
ElWResetChar	elmisc2.c	?^EL int ElWResetChar()$?
ElWResetPara	elmisc2.c	?^EL int ElWResetPara()$?
ElWSplitWindow	elmisc2.c	?^EL int ElWSplitWindow(dy)$?
ElWTabType	elmisc2.c	?^EL int ElWTabType(numPos)$?
ElWUtilGetSynonyms	etcmd.c	?^EL int ElWUtilGetSynonyms(ad, hstWord)$?
ElWWindow	elmisc2.c	?^EL int ElWWindow()$?
ElWinAllocFail	elfile.c	?^EL ElWinAllocFail (cSuc, cFail)$?
ElWordUnderline	elmisc2.c	?^EL ElWordUnderline(fOn)$?
ElaDebug	elsubs2.c	?^ElaDebug(eld, heli)$?
ElkFromIstElk	elxprocs.c	?^ElkFromIstElk(istElk)$?
ElkLookupSt	elxprocs.c	?^NATIVE ELX ElkLookupSt(st)$?
ElkUserSt	elsubs.c	?^ELK ElkUserSt(st)$?
ElvFromListBoxI	edmacro.c	?^ElvFromListBoxI(uList, phpval)$?
EnableContinue	edmacro.c	?^EnableContinue(fEnable)$?
EndCommit	edit.c	?^#define EndCommit()     AssertDo(!--vfInCommit)$?
FActivateWindow	eldde.c	?^FActivateWindow(hwnd)$?
FAllocMacroSbs	elsubs2.c	?^FAllocMacroSbs()$?
FAssureBkmksForDoc	edit.c	?^FAssureBkmksForDoc(doc)$?
FBadWindow	eldde.c	?^FBadWindow(hwnd)$?
FCheckCab	elsubs3.c	?^FCheckCab(pcmb)$?
FCheckSzFileInUse	elfile.c	?^BOOL FCheckSzFileInUse(sz)$?
FClearGhd	etcmd.c	?^FClearGhd (pghd, cch)$?
FCloseEdMacro	edmacro.c	?^FCloseEdMacro(imei, ac)$?
FConfirmSaveMacros	edmacro.c	?^FConfirmSaveMacros(ac)$?
FCopyGhdToRg	etcmd.c	?^FCopyGhdToRg (pghd, rg, cch)$?
FCopyGhdToSzET	etcmd.c	?^FCopyGhdToSzET( pghd, sz )$?
FCopySzToGhdET	etcmd.c	?^FCopySzToGhdET( sz, pghd )$?
FCursCty	elmisc.c	?^FCursCty(cRepeat, fDrag, cty)$?
FDelete	edit.c	?^FDelete(pca)$?
FDeleteMacro	edmacro.c	?^FDeleteMacro(stName, docDot)$?
FDlgEdMacro	edmacro.c	?^BOOL FDlgEdMacro(dlm, tmc, wNew, wOld, wParam)$?
FDlgPrompt	elmisc.c	?^BOOL FDlgPrompt(dlm, tmc, wNew, wOld, wParam)$?
FDlgRenMacro	edmacro.c	?^BOOL FDlgRenMacro(dlm, tmc, wNew, wOld, wParam)$?
FDlgRunMacro	edmacro.c	?^BOOL FDlgRunMacro(dlm, tmc, wNew, wOld, wParam)$?
FDlgShowVars	edmacro.c	?^BOOL FDlgShowVars(dlm, tmc, wNew, wOld, wParam)$?
FDlgThesaurus	etcmd.c	?^BOOL FDlgThesaurus(dlm, tmc, wNew, wOld, wParam)$?
FEditHpeli	elsubs2.c	?^#define FEditHpeli(hpeli) ((hpeli)->w == 0xffff)$?
FEditMacro	edmacro.c	?^FEditMacro(stName, iContext, stDesc)$?
FElElx	elsubs3.c	?^FElElx(elx)$?
FElFileExit	elmisc.c	?^EL BOOL FElFileExit(ac)$?
FElNextObj	elmisc.c	?^EL BOOL FElNextObj()$?
FElNextPage	elmisc.c	?^EL BOOL FElNextPage()$?
FElPrevObj	elmisc.c	?^EL BOOL FElPrevObj()$?
FElPrevPage	elmisc.c	?^EL BOOL FElPrevPage()$?
FEnableTmcOriginal	etcmd.c	?^FEnableTmcOriginal()$?
FEnumRemoveMcr	edmacro.c	?^BOOL FEnumRemoveMcr(lpsy, bsy, stName, wParam)$?
FExecuteHCommands	eldde.c	?^FExecuteHCommands (hCmds)$?
FFillSttbFromAd	eldlg.c	?^FFillSttbFromAd(hsttb, ad)$?
FFwdCty	elmisc.c	?^#define FFwdCty(cty)	(((cty) & (ctyRight | ctyDown?
FGetStMacro	edmacro.c	?^FGetStMacro(doc, st)$?
FInitMacroDoc	elsubs3.c	?^FInitMacroDoc()$?
FInitThesaurus	etcmd.c	?^BOOL FInitThesaurus ()$?
FInsertStBkmk	edit.c	?^FInsertStBkmk (pca, st, pfUndoCancel)$?
FLoadThesaurus	etcmd.c	?^BOOL FLoadThesaurus ()$?
FMacroDdeMsg	eldde.c	?^FMacroDdeMsg (dcl, message, wLow, wHigh)$?
FMacroErrMsg	elsubs3.c	?^FMacroErrMsg(heli, rerr)$?
FMyCloseET	etcmd.c	?^BOOL FMyCloseET()$?
FMyInitET	etcmd.c	?^BOOL FMyInitET(ghszPath)$?
FParseKeys	eldde.c	?^FParseKeys(hKeys, pichOp, phevt)$?
FParsedRng	elsubs3.c	?^#define FParsedRng(rng) (*((long *) &rng) == 0x000?
FRemoveImcr	edmacro.c	?^FRemoveImcr(stName, docDot, imcr)$?
FRemoveImei	edmacro.c	?^BOOL FRemoveImei(imei, fCheckSave)$?
FReplaceCpsRM	edit.c	?^BOOL FReplaceCpsRM(pcaDel, pcaIns)$?
FResetMacroDcl	eldde.c	?^FResetMacroDcl (dcl)$?
FRunImei	edmacro.c	?^BOOL FRunImei(imei)$?
FSaveEdMacro	edmacro.c	?^FSaveEdMacro(imei, fClosing)$?
FSendKeysPending	elsubs2.c	?^FSendKeysPending()$?
FSetMenuHelp	edmacro.c	?^FSetMenuHelp(bsy, st)$?
FSetPcaForBkmkUndo	edit.c	?^FSetPcaForBkmkUndo(pcaUndo, doc, cpFirst, cpLim, f?
FStringRng	elsubs3.c	?^#define FStringRng(rng) (*((long *) &rng) == 0x000?
FSuspended	elsubs2.c	?^BOOL FSuspended(hmes)$?
FTokenizeImei	edmacro.c	?^FTokenizeImei(imei)$?
FUpDownCty	elmisc.c	?^#define FUpDownCty(cty)	(((cty) & (ctyUp | ctyDown?
FWaitOnDclMacro	eldde.c	?^FWaitOnDclMacro (dcl)$?
FillSzFromPca	etcmd.c	?^FillSzFromPca(pca,sz,ichMac,fRetCaFetch)$?
FillTmcDefList	etcmd.c	?^FillTmcDefList (szWord)$?
FillTmcDefinition	etcmd.c	?^FillTmcDefinition (szFullDef)$?
FillTmcLookup	etcmd.c	?^FillTmcLookup (szLookup)$?
FillTmcSynList	etcmd.c	?^FillTmcSynList (szWord, idef, fFocusChangeOK)$?
FillVarsList	edmacro.c	?^FillVarsList(tmc)$?
FindMatch	eldde.c	?^FindMatch(lpch, ch, pich, fOp)$?
FlagRtError	elsubs3.c	?^FlagRtError(eid)$?
FreeDialogs	eldlg.c	?^FreeDialogs()$?
FreeEditMacro	edmacro.c	?^FreeEditMacro(imei)$?
FreeMacroSbs	elsubs2.c	?^FreeMacroSbs()$?
GenStids	eldlg.c	?^GenStids(dxWidth, dyHeight, pistid, y)$?
GetCaOfBk	elmisc.c	?^GetCaOfBk(pca, st)$?
GetInfoElx	elsubs2.c	?^GetInfoElx(elx, pele, heli, fFunction, cmm)$?
GetNameBcmDocDotFromCab	edmacro.c	?^GetNameBcmDocDotFromCab(stName, pbcm, pdocDot, hca?
GetNameElk	elxprocs.c	?^VOID GetNameElk(elk, st)$?
GetPosInfo	elfile.c	?^GetPosInfo(stm, plcchCurrent, plcchMax)$?
HevtCompactHevt	eldde.c	?^HEVT HevtCompactHevt(hevt)$?
HidFromIeldi	elxprocs.c	?^WORD HidFromIeldi(ieldi)$?
HilightMacroPara	elsubs2.c	?^HilightMacroPara(imei, cp)$?
IRBAddNewRadioButtonToGroup	eldlg.c	?^IRBAddNewRadioButtonToGroup()$?
IbProcMacroEdit	edmacro.c	?^IbProcMacroEdit(hwnd, ibm, iibb, wParam, lParam)$?
IchEx	eldde.c	?^IchEx(ch)$?
IdQuerySaveChanges	edmacro.c	?^int IdQuerySaveChanges(pmei)$?
IeldiFromHid	elxprocs.c	?^int IeldiFromHid(hid)$?
IelpidTarget	elsubs.c	?^IelpidTarget(hid, iag)$?
ImcrCreate	edmacro.c	?^int ImcrCreate(docMcr, stName, pcaSrc)$?
ImcrFromDocDotBcm	edmacro.c	?^int ImcrFromDocDotBcm(docDot, bcm)$?
ImeiFromDoc	edmacro.c	?^int ImeiFromDoc(doc)$?
ImeiFromEditHpeli	elsubs2.c	?^#define ImeiFromEditHpeli(hpeli) (LOWORD((hpeli)->?
ImeiFromElgBcm	edmacro.c	?^int ImeiFromElgBcm(elg, bcm)$?
ImeiFromElgElm	edmacro.c	?^int ImeiFromElgElm(elg, elm)$?
ImeiFromMw	edmacro.c	?^int ImeiFromMw(mw)$?
ImeiFromSt	edmacro.c	?^int ImeiFromSt(stName, docDot)$?
IntElAscHpsd	elmisc2.c	?^EL IntElAscHpsd(hpsd)$?
IntElInstr	elmisc2.c	?^EL int IntElInstr(hpsd1, num, hpsd2, hpsd3)$?
IntElIntInt	elmisc2.c	?^EL int IntElIntInt(i)$?
IntElLenHpsd	elmisc2.c	?^EL int IntElLenHpsd(hpsd)$?
IntElSgnNum	elmisc2.c	?^EL int IntElSgnNum(num)$?
IsZoomed	elmisc2.c	?^#define IsZoomed(hwnd) (GetWindowLong((hwnd), GWL_?
ItbdGetTabAt	elmisc2.c	?^int ItbdGetTabAt(pnumPos)$?
KillSelMacro	elsubs2.c	?^KillSelMacro()$?
LTimeCur	elmisc.c	?^unsigned long LTimeCur()$?
LValGetIag	elsubs.c	?^#define LValGetIag(hcab, iag) \\$?
LcchCurPosStm	elfile.c	?^long LcchCurPosStm(stm)$?
LookupSz	etcmd.c	?^LookupSz (szWord)$?
MakeFileName	elfile.c	?^MakeFileName(szFullName, szLastName, szNewName)$?
MctEdMacroList	edmacro.c	?^MctEdMacroList(pcmb)$?
ModeError	elsubs3.c	?^void ModeError()$?
NextFr	eldlg.c	?^NextFr(hdc, dxWidth, dyHeight, pistid, piksp)$?
NextPrevTab	elmisc2.c	?^NextPrevTab(pnumPos, fPrev)$?
NumElAbsNum	elmisc2.c	?^EL NUM NumElAbsNum(num)$?
NumElNextTab	elmisc2.c	?^EL NUM NumElNextTab(numPos)$?
NumElPrevTab	elmisc2.c	?^EL NUM NumElPrevTab(numPos)$?
NumElValHpsd	elmisc2.c	?^EL NUM NumElValHpsd(hpsd)$?
NumScroll	elmisc2.c	?^NUM NumScroll(numScrollToPercent, fHoriz)$?
OKCanButton	eldlg.c	?^OKCanButton(x, y, dx, dy, fCancel)$?
PffnI	elmisc2.c	?^#define PffnI(i)	((struct FFN *) PstFromSttb(vhstt?
PfnTmcOptFromHidIag	elsubs.c	?^PFN PfnTmcOptFromHidIag(hid, iag, ptmc, popt, pfPt?
PpafI	elmisc2.c	?^#define PpafI(i)	((struct PAF *) PstFromSttb(vpri.?
PpvAllocCbWW	elsubs3.c	?^void ** PpvAllocCbWW(sb, cb)$?
PtmAddTmtToUsrDlg	eldlg.c	?^TM * PtmAddTmtToUsrDlg(tmt, x, y, dx, dy, sd)$?
PxsAlloc	edit.c	?^char *PxsAlloc(pxbc)$?
RecordParsedItem	elsubs.c	?^RecordParsedItem(hid, hcab, iag, ielpidTarget)$?
RenameMacro	edmacro.c	?^RenameMacro(stOldName, stNewName, docDot, stDesc)$?
ResetFNItemIhdt	elmisc2.c	?^ResetFNItemIhdt(ihdtWanted)$?
SdChgCaseHpsd	elfile.c	?^SdChgCaseHpsd(hpsd, fUpper)$?
SdCopyHsttbIst	elsubs3.c	?^SD SdCopyHsttbIst(hsttb, ist)$?
SdCurDateOrTime	elmisc2.c	?^SD SdCurDateOrTime(fDate)$?
SdElChrInt	elmisc2.c	?^EL SD SdElChrInt(i)$?
SdElLeftHpsdInt	elmisc2.c	?^EL SD SdElLeftHpsdInt(hpsd, i)$?
SdElMidHpsdIntOInt	elmisc2.c	?^EL SD SdElMidHpsdIntOInt(hpsd, ich, cchRet)$?
SdElRightHpsdInt	elmisc2.c	?^EL SD SdElRightHpsdInt(hpsd, i)$?
SdElStrNum	elmisc2.c	?^EL SD SdElStrNum(num)$?
SdElStringInt	elmisc2.c	?^EL SD SdElStringInt(cch, hpsd, num)$?
SdFetchPca	elmisc.c	?^SD SdFetchPca(pca)$?
SelectEdMacro	edmacro.c	?^SelectEdMacro(mw)$?
SelectMacroPara	elsubs2.c	?^SelectMacroPara(imei, cp)$?
SetBk	elmisc.c	?^SetBk(pca, st)$?
SetCabVal	elsubs3.c	?^SetCabVal(hid, hcab, iag, hpval, elv)$?
SetImeiCur	edmacro.c	?^SetImeiCur(imei)$?
StyOfCty	elmisc.c	?^#define StyOfCty(cty)	((cty) & 0xff)$?
TermMacro	elsubs2.c	?^TermMacro(heli)$?
TmcRenameMacro	edmacro.c	?^TmcRenameMacro(hcabedmacro)$?
TmcSetVarDlg	edmacro.c	?^TmcSetVarDlg(szBuf, fNumber)$?
ValGetIag	elsubs.c	?^#define ValGetIag(hcab, iag) \\$?
VkMatchKeyword	eldde.c	?^VkMatchKeyword(lpch, ich, ichMac)$?
VmnValidMacroNameSt	edmacro.c	?^int VmnValidMacroNameSt(stName)$?
WCmpiStLst	elxprocs.c	?^int WCmpiStLst(st1, lst2)$?
WElOutlineLevel	elmisc2.c	?^EL WElOutlineLevel()$?
WElSelType	elmisc.c	?^EL int WElSelType(wSelType)$?
WGetCab	elsubs3.c	?^WORD WGetCab(hcab, iag, bstRng)$?
WListStringArray	eldlg.c	?^WORD WListStringArray(tmm, sz, isz, filler, tmc, w?
WMyETLookup	etcmd.c	?^int WMyETLookup (ghszWord, iopt, ghszWorkspace, gh?
WToHexRgch	elmisc2.c	?^WToHexRgch(rgch, cch, w)$?
XAddHdrText	edit.c	?^EXPORT XAddHdrText(fPlan, pxbc, pcaSrc, pcaDest)$?
XAddReferencedText	edit.c	?^EXPORT XAddReferencedText(fPlan, pxbc, pxsf, pcaSr?
XAddToHplcEdit	edit.c	?^EXPORT XAddToHplcEdit(fPlan, pxbc, pxsa, pcaSrc, p?
XApplyGrpprlDocCp	edit.c	?^XApplyGrpprlDocCp(fPlan, pxbc, pxsp, grpprl, cb, d?
XCopyBkmks	edit.c	?^EXPORT XCopyBkmks(fPlan, pxbc, pxsb, pcaSrc, pcaDe?
XCopyFields	edit.c	?^EXPORT XCopyFields(fPlan, pxbc, pcaSrc, pcaDest)$?
XDelInHplcEdit	edit.c	?^EXPORT XDelInHplcEdit(fPlan, pxbc, pxsa, pca, hplc?
XDelReferencedText	edit.c	?^EXPORT XDelReferencedText(fPlan, pxbc, pxsf, pca, ?
XDeleteBkmks	edit.c	?^EXPORT XDeleteBkmks(fPlan, pxbc, pca, fAll)$?
XDeleteFields	edit.c	?^EXPORT XDeleteFields(fPlan, pxbc, pxsl, pca)$?
XDeleteHdrText	edit.c	?^EXPORT XDeleteHdrText(fPlan, pxbc, pxsp, pca)$?
XDeleteStruct	edit.c	?^XDeleteStruct(fPlan, pxbc, pxsr)$?
XSetGrpfIhdtPca	edit.c	?^XSetGrpfIhdtPca(fPlan, pxbc, pxsp, grpfIhdt, pca)$?
YFromIstid	eldlg.c	?^YFromIstid(istid, dyHeight)$?
AbsRefPtr2	fltexp.c	?^AbsRefPtr2(ptr2, doc, cp)$?
AddConvtrString	filecvt.c	?^AddConvtrString(sz)$?
AdjustChrf	formula.c	?^AdjustChrf(bchr, dxp, dyp)$?
AlterPassword	ffcrypt.c	?^AlterPassword(wKey,szPassword)$?
ApplyChpDocCps	fieldpic.c	?^ApplyChpDocCps (pchp, doc, cp, cpLim)$?
ApplyFFldVanish	fieldsp.c	?^ApplyFFldVanish (pca, fVanish)$?
ApplyReduction	fltexp.c	?^ApplyReduction(pev, fi, hrgtre, itreMac, ppes, pev?
AssureAllFieldsParsed	fieldcr.c	?^AssureAllFieldsParsed (doc)$?
AssureInstVisible	fieldprs.c	?^AssureInstVisible (doc, ifld)$?
AssureLegalSel	fieldcr.c	?^EXPORT AssureLegalSel(pca)$?
AvFromTr2Fi	fltexp.c	?^AvFromTr2Fi(fi, pav, ptr2, ppes, pevTop)$?
BryanL	fltexp.c	?^#define BryanL(f)	(f)$?
CDays	fieldpic.c	?^CDays()$?
CMinElapsed	fieldpic.c	?^CMinElapsed()$?
C_CpFormatFrom	fieldcr.c	?^HANDNATIVE CP C_CpFormatFrom (ww, doc, cp)$?
C_CpVisibleBackCpField	fieldcr.c	?^HANDNATIVE CP C_CpVisibleBackCpField(doc, cp, fvc)?
C_CpVisibleCpField	fieldcr.c	?^HANDNATIVE CP C_CpVisibleCpField(doc, cp, fvc, fIn?
C_DcpSkipFieldChPflcd	fieldfmt.c	?^HANDNATIVE CP C_DcpSkipFieldChPflcd (ch, pflcd, fS?
C_FCpVisiInOutline	fieldcr.c	?^HANDNATIVE C_FCpVisiInOutline(ww, doc, cp, ccp, pc?
C_FFillRgwWithSeqLevs	fieldsp.c	?^HANDNATIVE C_FFillRgwWithSeqLevs(doc, cp, ipad, if?
C_FShowResultPflcdFvc	fieldfmt.c	?^HANDNATIVE C_FShowResultPflcdFvc(pflcd, fvc)$?
C_FVisibleCp	fieldcr.c	?^HANDNATIVE C_FVisibleCp (ww, doc, cp)$?
C_FetchCpPccpVisible	fieldcr.c	?^HANDNATIVE C_FetchCpPccpVisible (doc, cp, pccp, fv?
C_FetchVisibleRgch	fieldcr.c	?^HANDNATIVE C_FetchVisibleRgch (pfvb, fvc, fProps, ?
C_FfcFormatFieldPdcp	fieldfmt.c	?^HANDNATIVE C_FfcFormatFieldPdcp (pdcp, ww, doc, cp?
C_FillIfldFlcd	fieldfmt.c	?^HANDNATIVE C_FillIfldFlcd (hplcfld, ifld, pflcd)$?
C_GetCpFirstCpLimDisplayPara	fieldcr.c	?^HANDNATIVE void C_GetCpFirstCpLimDisplayPara(ww, d?
C_GetIfldFlcd	fieldfmt.c	?^HANDNATIVE C_GetIfldFlcd (doc, ifld, pflcd)$?
C_IfldFromDocCp	fieldcr.c	?^HANDNATIVE C_IfldFromDocCp (doc, cp, fMatch)$?
C_IfldInsertDocCp	fieldcr.c	?^HANDNATIVE C_IfldInsertDocCp (doc, cp)$?
C_PnWhoseFcGEFc	file2.c	?^NATIVE PN C_PnWhoseFcGEFc(fc) /* WINIGNORE - DEBUG?
C_SetFlcdCh	fieldfmt.c	?^HANDNATIVE C_SetFlcdCh (doc, pflcd, ch)$?
CacheNewSequenceValue	fieldspc.c	?^CacheNewSequenceValue (sz, cp, w)$?
Calendar	fieldpic.c	?^Calendar()$?
CallCalcFunc	fieldclc.c	?^CallCalcFunc (doc, ifld, fClearDiffer)$?
CallFIsFormatCorrect	filecvt.c	?^CallFIsFormatCorrect(ghszFn, ghszVersion)$?
CallForeignToRtf	filecvt.c	?^CallForeignToRtf(ghszFn, ghBuff, ghszVersion, ghsz?
CallGetIniEntry	filecvt.c	?^CallGetIniEntry(ghIniName, ghIniExt)$?
CallRtfToForeign	filecvt.c	?^CallRtfToForeign(ghszFn, ghBuff, ghszVersion, lpfn?
CchAtnToPpch	formatsp.c	?^CchAtnToPpch(doc, cp, ppch)$?
CchBinCellEnum	ffread.c	?^CchBinCellEnum (ped, pch, ichMac)$?
CchBinNNEnum	ffread.c	?^CchBinNNEnum (ped, pch, ichMac)$?
CchChSpec	formatsp.c	?^int CchChSpec(ch, pch)$?
CchCvtTknOfDff	filecvt.c	?^int CchCvtTknOfDff(dff, it, sz, ichMax)$?
CchCvtTknOfSz	filecvt.c	?^int CchCvtTknOfSz(szCvt, it, sz, ichMax)$?
CchExpandChPubs	formatsp.c	?^CchExpandChPubs( rgch, rgdxp, pdxpSum, ch, pfti )$?
CchFormatDate	ffread.c	?^CchFormatDate(pnum, pch, fmt)$?
CchFormatDttmPic	fieldpic.c	?^CchFormatDttmPic (pdttm, szPic, szResult, cchMax)$?
CchFormatLevelSeqs	fieldsp.c	?^CchFormatLevelSeqs (doc, cp, flt, pch, cchMax)$?
CchFormatNumPic	fieldpic.c	?^CchFormatNumPic (pnum, szPic, szResult, cchMax)$?
CchFormatWLvlPch	fieldsp.c	?^CchFormatWLvlPch (w, lvl, pch, cchMax)$?
CchGetProgramDir	file2.c	?^int CchGetProgramDir(sz, cchMax)$?
CchInsertFieldError	fieldclc.c	?^CchInsertFieldError (doc, cp, istError)$?
CchInsertLongNfc	fieldsc2.c	?^CchInsertLongNfc (doc, cp, l, nfc, pchp)$?
CchLongToRgchNfc	fieldsc2.c	?^int CchLongToRgchNfc(l, pch, nfc, cchMax)$?
CchPchToPpch	fieldpic.c	?^int CchPchToPpch (pch, ppch)$?
CchPutPosLong	fieldpic.c	?^int CchPutPosLong(l, rgch)$?
CchRmFieldAtDocCp	fieldcmd.c	?^CchRmFieldAtDocCp (doc, cp, pdcpInst, pdcpResult)$?
CchSanitizeRgch	fieldspc.c	?^int CchSanitizeRgch(rgch, cch, cchMax , fSpecToCRL?
CchSkipFieldKeywordArgs	fieldsp.c	?^CchSkipFieldKeywordArgs (doc, ifld, cSkipArgs)$?
CchStuffRmn2	fieldpic.c	?^int CchStuffRmn2(ppch, n, qrgchRoman, cchMax)$?
CchStuffRoman	fieldpic.c	?^int CchStuffRoman(ppch, n, fUC, cchMax)$?
CchSzInfoFromIifd	fieldsc2.c	?^CchSzInfoFromIifd (iifd, doc, rgch, hsttbAssoc, if?
CcrTruncateRgcr	fieldcr.c	?^CcrTruncateRgcr (rgcr, ichLast, ccr)$?
ChFetchExp	fltexp.c	?^CHAR ChFetchExp(pfeb)$?
ChFetchFromBkSel	fltexp.c	?^CHAR ChFetchFromBkSel(pfeb)$?
ChFetchFromBlock	fltexp.c	?^CHAR ChFetchFromBlock(pfeb)$?
ChFetchFromFe	fltexp.c	?^CHAR ChFetchFromFe(pfeb)$?
ChFetchFromSz	fltexp.c	?^CHAR ChFetchFromSz(pfeb)$?
ChFetchNonVanish	formula.c	?^NATIVE char ChFetchNonVanish(doc, pcp) /* WINIGNOR?
ChFetchSwitch	fieldclc.c	?^CHAR ChFetchSwitch (pffb, fSys)$?
CheckFNestedBits	fieldcr.c	?^HANDNATIVE CheckFNestedBits(doc)$?
CheckSequenceCache	fieldspc.c	?^CheckSequenceCache (sz, pcp, pw)$?
CheckUat	filewin.c	?^CheckUat()$?
ClearFDifferFltg	fieldfmt.c	?^ClearFDifferFltg (doc, fltg)$?
CloseUa	filewin.c	?^CloseUa()$?
CmdCalcSel	fieldclc.c	?^CMD CmdCalcSel (pcmb)$?
CmdCalculate	fltexp.c	?^CMD CmdCalculate(pcmb)$?
CmdDoFieldHit	fieldspc.c	?^CMD CmdDoFieldHit (pcmb)$?
CmdFieldCodes	fieldcmd.c	?^CMD CmdFieldCodes(pcmb)$?
CmdFldLocksOff	fieldcmd.c	?^CMD CmdFldLocksOff (pcmb)$?
CmdFldLocksOn	fieldcmd.c	?^CMD CmdFldLocksOn (pcmb)$?
CmdInsFltSzAtSelCur	fieldcmd.c	?^CMD CmdInsFltSzAtSelCur (flt, szArg, bcm, fCalc, f?
CmdInsertField	fieldcmd.c	?^CMD CmdInsertField (pcmb)$?
CmdNextField	fieldcmd.c	?^CMD CmdNextField (pcmb)$?
CmdPreviousField	fieldcmd.c	?^CMD CmdPreviousField (pcmb)$?
CmdReplaceField	fieldcmd.c	?^CMD CmdReplaceField (pcmb)$?
CmdSeeAllCps	fieldfmt.c	?^CMD CmdSeeAllCps (pcmb)$?
CmdToggleFieldDisplay	fieldcmd.c	?^CMD CmdToggleFieldDisplay (pcmb)$?
CmdUpdateSource	fieldcmd.c	?^CmdUpdateSource (pcmb)$?
CombineAvFi	fltexp.c	?^CombineAvFi(fi, pav, pavSrc)$?
CopyGhszToSz	filecvt.c	?^CopyGhszToSz(ghsz, sz)$?
CorrectFNestedBits	fieldcr.c	?^HANDNATIVE CorrectFNestedBits(doc)$?
Cp1VisibleCpField	fieldcr.c	?^CP Cp1VisibleCpField(hplcfld, cp, fvc, fIns)$?
CpFirstField	fieldfmt.c	?^CP CpFirstField (doc, ifld)$?
CpFirstNonBlank	formula.c	?^NATIVE CP CpFirstNonBlank(doc, cp) /* WINIGNORE - ?
CpFirstTableFromDocCp	fltexp.c	?^CP CpFirstTableFromDocCp(doc, cp)$?
CpFromIchPcr	fieldcr.c	?^CP CpFromIchPcr (ich, pcr, ccr)$?
CpLimDeadField	fieldsp.c	?^CP CpLimDeadField (doc, cpFirst)$?
CpLimField	fieldclc.c	?^EXPORT CP CpLimField (doc, ifld)$?
CpLimInstField	fieldclc.c	?^CP CpLimInstField (doc, ifld)$?
CpLimNoSpaces	fieldcr.c	?^CP CpLimNoSpaces(pca)$?
CpLimWord	fieldpic.c	?^CP CpLimWord (doc, cp)$?
CpMatchFieldBack	fieldsp.c	?^CP CpMatchFieldBack (doc, cp, fDeadOnly, cchFieldB?
CpNextVisiInOutline	fieldcr.c	?^HANDNATIVE CP CpNextVisiInOutline(ww, doc, cp)$?
CrefNextNameMP20	ffread.c	?^CrefNextNameMP20(pwEref, ierefMac, pcch, rgch, ich?
CwGetGlobalsMP20	ffread.c	?^CwGetGlobalsMP20 (rgwGlobals)$?
DcchSafePicTmplt	fieldpic.c	?^DcchSafePicTmplt(gfi, cDigBlwDec)$?
DcpApplyFormatSw	fieldpic.c	?^CP DcpApplyFormatSw (pffb, doc, cpResult, dcpNew, ?
DcpApplyPictureSw	fieldpic.c	?^CP DcpApplyPictureSw (ch, pffb, doc, cp, dcpOrig, ?
DcpApplySysSwitches	fieldclc.c	?^CP DcpApplySysSwitches (pffb, doc, cpResult, dcpNe?
DcpCopyArgs	fieldspc.c	?^CP DcpCopyArgs (pffb, doc, pwCh)$?
DcpCopyArgument	fieldclc.c	?^CP DcpCopyArgument (pffb, docDest, cpDest)$?
DcpCopyIchCchPcr	fieldclc.c	?^CP DcpCopyIchCchPcr (docDest, cp, docSrc, pcr, ccr?
DcpReplaceWithError	fieldclc.c	?^CP DcpReplaceWithError (doc, cp, dcp, istErr)$?
DcpUnHideFld	fieldsp.c	?^CP DcpUnHideFld (doc, cp, fUnVanish)$?
DcpUnHideFld1	fieldsp.c	?^CP DcpUnHideFld1 (doc, cp, cpLim, fUnVanish, pcp, ?
DcpUnlinkIfld	fieldcmd.c	?^CP DcpUnlinkIfld(doc, ifld)$?
DecryptHDS	ffcrypt.c	?^DecryptHDS(qbHDS, cb, bent)$?
DecryptRecord	ffread.c	?^DecryptRecord(pb, cb)$?
DecryptWrt	ffcrypt.c	?^DecryptWrt(pbWrt, cbWrt)$?
DefSzPicDTTmplt	fieldpic.c	?^DefSzPicDTTmplt(fDate, sz, cchMax)$?
DeleteFieldResult	fieldclc.c	?^DeleteFieldResult (doc, ifld, fSeparator, dcp)$?
DeleteFld	fieldprs.c	?^DeleteFld (doc, ifld)$?
DeleteFn	file2.c	?^DeleteFn(fn, fDelete)$?
DeleteFnHashEntries	file2.c	?^NATIVE DeleteFnHashEntries(fn)$?
DeleteIbpHashEntry	filewin.c	?^DeleteIbpHashEntry(ibpDelete)$?
DeleteNonReferencedFns	file2.c	?^DeleteNonReferencedFns(volSpec)$?
DffFindFmt	filecvt.c	?^DffFindFmt(fn)$?
DffVerifyDff	filecvt.c	?^DffVerifyDff(dff, fn)$?
DiscardConvtrLib	filecvt.c	?^DiscardConvtrLib()$?
DiskErrorProc	file2.c	?^DiskErrorProc(eid, fn, szFunc)$?
DisplayField	fieldsp.c	?^EXPORT DisplayField (doc, cp, bchr, flt, hdc, pt, ?
DisplayFltMessage	fieldsp.c	?^DisplayFltMessage (hdc, pt, ypBase, ypUL, puls, pr?
DisplayFltPrint	fieldsp.c	?^DisplayFltPrint(doc, cpStart, ifld, hdc, pt)$?
DisplayFltSeqLev	fieldsp.c	?^DisplayFltSeqLev (doc, cp, hdc, pt, ypBase, ypUL, ?
DisplayRgch	fieldsp.c	?^DisplayRgch (hdc, pt, ypBase, ypUL, puls, prcClip,?
DoHyperTextHit	fieldspc.c	?^DoHyperTextHit (doc, cp)$?
DoMacroTextHit	fieldspc.c	?^DoMacroTextHit (doc, cp)$?
DocCreateDffSsFn	ffread.c	?^DocCreateDffSsFn(dff, fn, szSubset)$?
DocCreateFnDff	filecvt.c	?^DocCreateFnDff(fn, dff, stSubset)$?
DrawDottedLineBox	formatsp.c	?^EXPORT DrawDottedLineBox(hdc, rcBox)$?
DttmCur	filewin.c	?^struct DTTM DttmCur()$?
DxpFromHps	formula.c	?^#define DxpFromHps(hps)	NMultDiv( (hps), vfti.dxpI?
DxtFromHps	formula.c	?^#define DxtFromHps(hps)	NMultDiv( (hps), vftiDxt.d?
DypFromHps	formula.c	?^DypFromHps(hps)$?
DypFromHpsCh	formula.c	?^DypFromHpsCh(hps)$?
DytFromHps	formula.c	?^DytFromHps(hps)$?
DytFromHpsCh	formula.c	?^DytFromHpsCh(hps)$?
EcOsDelete	file2.c	?^EcOsDelete(stFile, vol)$?
EcReadFnPns	filewin.c	?^EcReadFnPns(fn, pn, cpn, hpch)$?
EcReadWriteFn	filewin.c	?^EcReadWriteFn(fn, fc, hpch, cch, fWrite, fErrors)$?
EcWriteFnPns	filewin.c	?^EcWriteFnPns(fn, pn, cpn, hpch)$?
EdtExpFromPffbCps	fieldspc.c	?^EdtExpFromPffbCps (pffb, cpExp, pdoc, pcpFirst, pc?
EfltFromFlt	fieldfmt.c	?^NATIVE struct EFLT EfltFromFlt (flt) /* NATIVE for?
ExchangeIbp	file2.c	?^ExchangeIbp(ibp1, ibp2)$?
ExhaustFieldText	fieldclc.c	?^ExhaustFieldText (pffb)$?
ExpandToSameField	fieldsp.c	?^ExpandToSameField (doc, pcpFirst, pcpLim)$?
ExpandToSameLiveField	fieldcr.c	?^ExpandToSameLiveField(pca)$?
FAccessFn	filewin.c	?^FAccessFn( fn, grpfOst )$?
FAddChCpToPfvb	fieldprs.c	?^NATIVE FAddChCpToPfvb (pfvb, ch, cp)$?
FAddStringsForConvtr	filecvt.c	?^FAddStringsForConvtr(rgch)$?
FApplyFi	fltexp.c	?^BOOL FApplyFi(fi, pevArg1, pevArg2, pev)$?
FApplyInfixFi	fltexp.c	?^BOOL FApplyInfixFi(fi, pevArg1, pevArg2, pevRes)$?
FAssureHplcfld	fieldprs.c	?^FAssureHplcfld(doc, cfld)$?
FBkmkInTable	fltexp.c	?^BOOL FBkmkInTable(doc, cp, pev, ibkf)$?
FCalcFieldIfld	fieldclc.c	?^FCalcFieldIfld (doc, ifld, frm, cNestLevel, fClear?
FCalcFields	fieldclc.c	?^FCalcFields (pca, frm, fPrompt, fClearDiffer)$?
FCalculateNumFromSz	fltexp.c	?^BOOL FCalculateNumFromSz(sz, pnum, ppes)$?
FChangeIbpMacExt	file2.c	?^FChangeIbpMacExt(ibpMacNew)$?
FCheckExtForPublic	ffcrypt.c	?^int FCheckExtForPublic()$?
FCheckFcLegal	file2.c	?^FCheckFcLegal (fc)$?
FCheckPassword	ffcrypt.c	?^int FCheckPassword(dff)$?
FCloseFn	file2.c	?^FCloseFn( fn )$?
FConvertRrutLongToRrutNum	fieldpic.c	?^FConvertRrutLongToRrutNum()$?
FCopyStToGhsz	filecvt.c	?^FCopyStToGhsz(st, ghsz)$?
FCopySzToGhsz	filecvt.c	?^NATIVE FCopySzToGhsz(sz, ghsz)$?
FCpVisibleInPflcd	fieldcr.c	?^FCpVisibleInPflcd (cp, pflcd, pcpNextVisi, fvc, fI?
FCreateStFile	file2.c	?^FCreateStFile( stFile )$?
FDlgFilePswd	ffcrypt.c	?^BOOL FDlgFilePswd(dlm, tmc, wNew, wOld, wParam)$?
FDttmFromDocCp	fieldpic.c	?^BOOL FDttmFromDocCp(doc, cpFirst, cpLim, pdttm, fV?
FDttmFromSzPl	fieldpic.c	?^BOOL FDttmFromSzPl(sz, pdttm, plSeconds)$?
FEnsureOnLineFn	file2.c	?^FEnsureOnLineFn( fn )$?
FEvalExpSz	fltexp.c	?^BOOL FEvalExpSz(sz, pnum, piszErr, fUseUtilCalc)$?
FEvalFieldCondition	fieldspc.c	?^FEvalFieldCondition (pffb, pistErr, pfCondition)$?
FEvalSelCur	fltexp.c	?^BOOL FEvalSelCur(fScrap, fPrompt, pnum, piszErr)$?
FExternalFile	file2.c	?^BOOL FExternalFile(fn)$?
FFetchArg	fieldsp.c	?^BOOL FFetchArg (pffb, rgch, cchMax)$?
FFetchArgExtents	fieldclc.c	?^FFetchArgExtents (pffb, pcpFirst, pcpLim, fRTF)$?
FFetchArgText	fieldclc.c	?^FFetchArgText (pffb, fTruncate)$?
FFilePswdDialog	ffcrypt.c	?^FFilePswdDialog(szPswd, cchMax)$?
FFindFileSpec	file2.c	?^FFindFileSpec (stShort, stFull, grpfpi, nfo)$?
FFindNameBiff	ffread.c	?^FFindNameBiff(prgsRow, prgsCol, szRange, pisMac)$?
FFindOtherConvtrs	filecvt.c	?^BOOL FFindOtherConvtrs()$?
FFindPchEnum	ffread.c	?^FFindPchEnum (ped, pch, cchMac)$?
FFindStc	fieldspc.c	?^FFindStc (doc, stc, fForward, cpFirst, cpLim)$?
FFldVanishDocCp	fieldcr.c	?^FFldVanishDocCp (doc, cp, fFetch)$?
FFltInFltg	fieldfmt.c	?^FFltInFltg (flt, fltg)$?
FFlushFn	file2.c	?^FFlushFn(fn)$?
FFnToGhsz	filecvt.c	?^FFnToGhsz(fn, ghsz)$?
FFormatChSpecSymbol	formula.c	?^FFormatChSpecSymbol(pchp, ch, pdxp, pdxt, pdypAsce?
FFormatLineFspec	formatsp.c	?^EXPORT FFormatLineFspec(ww, doc, dxl, ch)$?
FFormatPev	fltexp.c	?^FFormatPev(pev, pchp, rgch, pcch, cchMax)$?
FFormatRruPic	fieldpic.c	?^FFormatRruPic (fNumeric, prru, szPic, docSrc, rgcr?
FGetBiffRecord	ffread.c	?^FGetBiffRecord(puRow, puCol, purc, prt, rgbRecord)?
FGetFieldSequenceSz	fieldspc.c	?^FGetFieldSequenceSz (doc, ifld, rgch)$?
FGetInt	ffread.c	?^int FGetInt (ppch, pw)$?
FGetLevelSequences	fieldsp.c	?^FGetLevelSequences (doc, cp, rgw)$?
FGetMPBounds	ffread.c	?^FGetMPBounds(prowMax, pcolMax)$?
FGetMPRange	ffread.c	?^FGetMPRange (pch, prowsel, pcolsel)$?
FGetMpRecord	ffread.c	?^FGetMpRecord(puRow, puCol, purc, rgbRecord, pcch)$?
FGetStFpi	file2.c	?^FGetStFpi (fpi, st)$?
FGetWksRange	ffread.c	?^int FGetWksRange(id, prow, pcol)$?
FGetWksRecord	ffread.c	?^FGetWksRecord(puRow, puCol, purc, pwks, rgbRecord)?
FHexCh	fieldspc.c	?^FHexCh (ch, pw)$?
FIMonthFromRgch	fieldpic.c	?^BOOL FIMonthFromRgch(rgch, cch)$?
FImplicitTi	fltexp.c	?^BOOL FImplicitTi(ti)$?
FInitCvt	filecvt.c	?^BOOL FInitCvt()$?
FInitExtEnum	ffread.c	?^FInitExtEnum(eid, peref, fNames)$?
FInitialize	ffread.c	?^FInitialize()$?
FInsertFieldDocCp	fieldcmd.c	?^BOOL FInsertFieldDocCp (doc, cp, fSeparator)$?
FInsertFieldSeparator	fieldclc.c	?^FInsertFieldSeparator (doc, ifld)$?
FInsertFltDcps	fieldprs.c	?^BOOL FInsertFltDcps (flt, doc, cp, dcpInst, dcpRes?
FInsertMatrix	ffread.c	?^FInsertMatrix(cRow, cCol, pcfc, cfcMax, hppr)$?
FIntFromSz	fltexp.c	?^BOOL FIntFromSz(szToken, pi)$?
FIsFileProtected	ffcrypt.c	?^int FIsFileProtected(dff)$?
FIsPublic	ffcrypt.c	?^int FIsPublic(rw,col)$?
FLegalSel	fieldcr.c	?^FLegalSel (doc, cpFirst, cpLim)$?
FLoadConvtrLib	filecvt.c	?^FLoadConvtrLib(pszFnLib)$?
FMTFromFmtWks	ffread.c	?^FMTFromFmtWks(fmtWks)$?
FNameFn	file2.c	?^FNameFn(fn, st)$?
FNameLookup	ffread.c	?^FNameLookup(rgch, cch, peref)$?
FNeedsQuote	fieldpic.c	?^BOOL FNeedsQuote(ch, fNumeric)$?
FNestedInDeadField	fieldsp.c	?^FNestedInDeadField (doc, cp)$?
FNewChrfChr	formula.c	?^BOOL FNewChrfChr(ich, ch, pchp, fLoad)$?
FNextField	fieldcmd.c	?^FNextField()$?
FNextName	ffread.c	?^FNextName(peref, pcch, rgch, fFirst)$?
FNextNameWks	ffread.c	?^FNextNameWks(pcch, pch, fFirst)$?
FNumFromBkmkCp	fltexp.c	?^FNumFromBkmkCp(pfebBk, pev, cpFirst, cpLim, ppes)$?
FNumFromCps	fltexp.c	?^BOOL FNumFromCps(doc, cpFirst, cpLim, pnum, ppes, ?
FPMergeTerm	fieldprs.c	?^NATIVE FPMergeTerm (ch)$?
FParseExp	fltexp.c	?^FParseExp(pfeb, ppes)$?
FParseMP	ffread.c	?^FParseMP (rgwr, rgwc, pch, pisMac)$?
FParseRangeBiff	ffread.c	?^FParseRangeBiff(szRange)$?
FParseRangeMP	ffread.c	?^FParseRangeMP(szRange)$?
FParseRangeWks	ffread.c	?^FParseRangeWks(szRange)$?
FParseWks	ffread.c	?^FParseWks (rgwr, rgwc, pch, pisMac)$?
FPicTmpltPnumGfi	fieldpic.c	?^FPicTmpltPnumGfi(pnum, gfi, cDigBlwDec, szPicTmplt?
FPosInNum	fieldpic.c	?^FPosInNum (pos, pupnum, pch)$?
FPossibleDeadMismatch	fieldcr.c	?^FPossibleDeadMismatch (pca)$?
FPrefixPchCchSzCS	fieldpic.c	?^BOOL FPrefixPchCchSzCS(rgch, cch, szCS)$?
FPrevField	fieldcmd.c	?^FPrevField()$?
FPutCpsInField	fieldcmd.c	?^FPutCpsInField (flt, doc, cpFirst, pdcpInst, dcpRe?
FPutRgchInScrap	fltexp.c	?^BOOL FPutRgchInScrap(rgch, cch, pchp, doc)$?
FReadDffSs	ffread.c	?^FReadDffSs()$?
FReadLarge	filewin.c	?^FReadLarge( fn, pnMin, cpn, ibpMin )$?
FReadMatrix	ffread.c	?^FReadMatrix(uRowTop, uColLeft, uRowBottom, uColRig?
FRowColInPurc	ffread.c	?^FRowColInPurc(uRow, uCol, purc)$?
FSetFieldLocks	fieldcmd.c	?^FSetFieldLocks (fOn, doc, ifld, cpLim)$?
FSetPcaForCalc	fieldclc.c	?^FSetPcaForCalc (pca, doc, cpFirst, cpLim, pcFields?
FSetposValueMP20	ffread.c	?^FSetposValueMP20 (rgwOutput, rgeref, ierefMac, fFi?
FSpreadsheetLeapYear	ffread.c	?^FSpreadsheetLeapYear(year)$?
FSubCalcSkip	fltexp.c	?^BOOL FSubCalcSkip(ti)$?
FTextCh	fieldpic.c	?^FTextCh (ch)$?
FTryConvtr	filecvt.c	?^FTryConvtr(fn, pszConvtr, pszVersion)$?
FUpdateSourceIfld	fieldcmd.c	?^FUpdateSourceIfld (doc, ifld)$?
FWhite	fieldprs.c	?^NATIVE FWhite (ch)$?
FWriteFnDsrsForeign	filecvt.c	?^BOOL FWriteFnDsrsForeign(dff, fn, doc)$?
FcMacFn	file2.c	?^FC FcMacFn(fn)$?
FcrCalcFltAskFill	fieldspc.c	?^FcrCalcFltAskFill (doc, ifld, flt, cpInst, cpResul?
FcrCalcFltBkmkRef	fieldspc.c	?^FcrCalcFltBkmkRef (doc, ifld, flt, cpInst, cpResul?
FcrCalcFltDateTime	fieldsc2.c	?^FcrCalcFltDateTime (doc, ifld, flt, cpInst, cpResu?
FcrCalcFltExp	fltexp.c	?^FcrCalcFltExp (doc, ifld, flt, cpInst, cpResult, p?
FcrCalcFltFtnRef	fieldspc.c	?^FcrCalcFltFtnRef (doc, ifld, flt, cpInst, cpResult?
FcrCalcFltGlsy	fieldspc.c	?^FcrCalcFltGlsy (doc, ifld, flt, cpInst, cpResult, ?
FcrCalcFltIf	fieldspc.c	?^FcrCalcFltIf (doc, ifld, flt, cpInst, cpResult, pf?
FcrCalcFltInclude	fieldspc.c	?^FcrCalcFltInclude (doc, ifld, flt, cpInst, cpResul?
FcrCalcFltInfo	fieldsc2.c	?^FcrCalcFltInfo (doc, ifld, flt, cpInst, cpResult, ?
FcrCalcFltPage	fieldsc2.c	?^FcrCalcFltPage (doc, ifld, flt, cpInst, cpResult, ?
FcrCalcFltQuote	fieldspc.c	?^FcrCalcFltQuote (doc, ifld, flt, cpInst, cpResult,?
FcrCalcFltRefPage	fieldsc2.c	?^FcrCalcFltRefPage (doc, ifld, flt, cpInst, cpResul?
FcrCalcFltSequence	fieldspc.c	?^FcrCalcFltSequence (doc, ifld, flt, cpInst, cpResu?
FcrCalcFltSet	fieldspc.c	?^FcrCalcFltSet (doc, ifld, flt, cpInst, cpResult, p?
FcrCalcFltStyleRef	fieldspc.c	?^FcrCalcFltStyleRef (doc, ifld, flt, cpInst, cpResu?
FcrRegisterDttmResult	fieldclc.c	?^int FcrRegisterDttmResult (dttm)$?
FcrRegisterIntResult	fieldclc.c	?^int FcrRegisterIntResult (n)$?
FcrRegisterLongResult	fieldclc.c	?^int FcrRegisterLongResult (l)$?
FcrRegisterRealResult	fieldclc.c	?^int FcrRegisterRealResult (pnum)$?
FetchFib	filewin.c	?^FetchFib(fn, pfib, pn)$?
FetchFromField	fieldprs.c	?^NATIVE FetchFromField (pffb, fArgument, fRTF)$?
FfcFormatDisplay	fieldsp.c	?^EXPORT FfcFormatDisplay (ch, doc, pflcd, pdcp)$?
FfcFormatFltMessage	fieldsp.c	?^FfcFormatFltMessage (istMsg, doc, cp)$?
FfcFormatRgch	fieldsp.c	?^FfcFormatRgch (cch, pch, pchp)$?
FfcFormatSeqLev	fieldsp.c	?^FfcFormatSeqLev (doc, cp, flt)$?
Fieldcr_Last	fieldcr.c	?^Fieldcr_Last(){}$?
Fieldfmt_Last	fieldfmt.c	?^Fieldfmt_Last(){}$?
Fieldsp_Last	fieldsp.c	?^Fieldsp_Last(){}$?
File2_Last	file2.c	?^File2_Last(){}$?
Filewin_Last	filewin.c	?^Filewin_Last(){}$?
FillFvbBuffer	fieldspc.c	?^FillFvbBuffer (pfvb, ich, fVanished)$?
FillStFromBiffRecord	ffread.c	?^FillStFromBiffRecord(st, rgbRecord, rt)$?
FillStFromWksRecord	ffread.c	?^FillStFromWksRecord(st, rgbRecord, wks)$?
FillStatInfo_fieldspc	fieldsc2.c	?^FillStatInfo_fieldspc(doc, fCWords)$?
FixSel	ffread.c	?^FixSel(pw, piwMac, rwFirst, rwLast)$?
FixSelect	ffread.c	?^FixSelect(rgw, iwMac)$?
FixSells	ffread.c	?^FixSells()$?
FltParseDocCp	fieldprs.c	?^EXPORT FltParseDocCp (doc, cp, ifld, fChgView, fEn?
FltParseSz	fieldprs.c	?^FltParseSz (sz, fEnglish)$?
FltScanForDeadField	fieldsp.c	?^int FltScanForDeadField (pffb, pca)$?
FmtArray	formula.c	?^FmtArray(pfapb)$?
FmtOverstrike	formula.c	?^FmtOverstrike(pfmaFirst, cfma, pdxpMax, pdxtMax)$?
ForeignToRtfIn	filecvt.c	?^EXPORT FAR PASCAL ForeignToRtfIn(cch, nPercentComp?
FormatChPubs	formatsp.c	?^EXPORT FormatChPubs( ch, pdxp, pdxt )$?
FormatChSpec	formatsp.c	?^EXPORT FormatChSpec(bchr, ich, pdxp, pdxt, pdyyAsc?
FormatFormula	formula.c	?^EXPORT FormatFormula(pfmal)$?
Formula_Last	formula.c	?^Formula_Last(){}$?
FptNextPppb	fieldpic.c	?^FptNextPppb (pppb, fNumeric, fMemory)$?
FreeExcr	filecvt.c	?^FreeExcr(pexcr)$?
FreePhhac	fltexp.c	?^FreePhhac(phhac)$?
FreePhhacHtre	fltexp.c	?^FreePhhacHtre(phhac, htre)$?
GetAlphaDate	fieldpic.c	?^int GetAlphaDate(ppch)$?
GetBiffBounds	ffread.c	?^GetBiffBounds(peref)$?
GetDefSzPicDT	fieldpic.c	?^GetDefSzPicDT(szPic)$?
GetDefaultSzPic	fieldpic.c	?^GetDefaultSzPic (sz, fDate)$?
GetFltKeyword	fieldcmd.c	?^GetFltKeyword (flt, sz)$?
GetNextCh	fltexp.c	?^CHAR GetNextCh(pfeb)$?
GetNextSep	fieldpic.c	?^int GetNextSep(ppch)$?
GetPdocPcpMotherFromDocCp	fieldclc.c	?^GetPdocPcpMotherFromDocCp (doc, cp, pdoc, pcp)$?
GetRTFForConvtr	filecvt.c	?^EXPORT FAR PASCAL GetRTFForConvtr(fPicture, nUnuse?
GetResultChp	fieldclc.c	?^GetResultChp (pffb, pchp)$?
GetWksCol	ffread.c	?^GetWksCol (ppch, rgw)$?
HTreAllocCw	fltexp.c	?^TRE **HTreAllocCw(ctre, phhac)$?
HpbpsIbp	filewin.c	?^struct BPS HUGE *HpbpsIbp(ibp)$?
HpibpHash	filewin.c	?^int HUGE *HpibpHash(iibp)$?
HpsFromDyp	formula.c	?^HpsFromDyp(dyp)$?
IbpLoadFn	filewin.c	?^EXPORT IbpLoadFn(fn, pn)$?
IbpReadFilePage	filewin.c	?^EXPORT int IbpReadFilePage(fn, pn, iibp)$?
IbpSelectCachePage	filewin.c	?^IbpSelectCachePage(fn)$?
IchParseRef	ffread.c	?^int IchParseRef (rgchRef, ichStart, peref)$?
IcrFromIchPcr	fieldcr.c	?^IcrFromIchPcr (ich, pcr, ccr)$?
IfldAfterFlcd	fieldfmt.c	?^IfldAfterFlcd (doc, ifld, pflcd)$?
IfldDocIfldCh	fieldcmd.c	?^int IfldDocIfldCh (doc, ifld, ch)$?
IfldEncloseIfld	fieldcmd.c	?^IfldEncloseIfld (doc, ifld)$?
IfldNextField	fieldfmt.c	?^IfldNextField (doc, cp)$?
IfldSelCur	fieldcmd.c	?^IfldSelCur ()$?
IfsiPfsfLookupSwitch	fieldprs.c	?^IfsiPfsfLookupSwitch (ch, pffb, ppfsf)$?
IncIbEnc	ffcrypt.c	?^#define IncIbEnc(ib) ib = ((ib + 1) & IBENCMASK )$?
InitExcr	filecvt.c	?^InitExcr(pexcr)$?
InitFebBkSel	fltexp.c	?^InitFebBkSel(pfeb, pfibk, doc, cpFirst, cpLim, fBk?
InitFebBlk	fltexp.c	?^InitFebBlk(pfeb, pfiblk)$?
InitFebFe	fltexp.c	?^InitFebFe(pfeb, pffb)$?
InitFebSz	fltexp.c	?^InitFebSz(pfeb, pfibk, sz, fBkmk)$?
InitFpi	file2.c	?^InitFpi(fpi)$?
InitFvb	fieldcr.c	?^InitFvb (pfvb)$?
InitFvbBufs	fieldcr.c	?^InitFvbBufs (pfvb, rgch, cchMax, rgcr, ccrMax)$?
InitPav	fltexp.c	?^InitPav(pav, fi)$?
InitPppb	fieldpic.c	?^InitPppb (fNumeric, wSign, rgch, rgcr, pppb)$?
InitReadDffSs	ffread.c	?^InitReadDffSs()$?
InitUa	filewin.c	?^InitUa()$?
InsertIbpHashEntry	file2.c	?^InsertIbpHashEntry(ibp)$?
IszFEFromMerr	fltexp.c	?^IszFEFromMerr(merr)$?
ItMaxDff	filecvt.c	?^int ItMaxDff(dff)$?
ItMaxInSz	filecvt.c	?^int ItMaxInSz(sz)$?
KillExtraFns	file2.c	?^KillExtraFns()$?
KillField	fieldsp.c	?^KillField (doc, cp, ifld)$?
LocalSzPicDTTmplt	fieldpic.c	?^LocalSzPicDTTmplt (pchSrc, pch)$?
LocalSzPicNumTmplt	fieldpic.c	?^LocalSzPicNumTmplt (pchSrc, pch)$?
LogUa	filewin.c	?^LogUa(ua)$?
LogUaNoTimestamp	filewin.c	?^LogUaNoTimestamp(ua)$?
LogUatTimes	filewin.c	?^LogUatTimes()$?
MarkAllReferencedFn	file2.c	?^MarkAllReferencedFn()$?
MarkFcbRef	file2.c	?^MarkFcbRef(fn, doc)$?
MatchRhoPtr2	fltexp.c	?^MatchRhoPtr2(ptr2, ptr2Templt)$?
MergePicProps	fieldpic.c	?^MergePicProps(doc, cpFirst, ppic)$?
MergeResultProps	fieldpic.c	?^MergeResultProps (docDest, cpDest, cpLimDest, docS?
MergeTableProps	fieldpic.c	?^MergeTableProps(docSrc, cpSrc, docDest, cpDest)$?
MergeTrePev	fltexp.c	?^MergeTrePev(pevDest, pev1, pev2, phhac)$?
NAutoFtn	formatsp.c	?^int NAutoFtn(doc, cp)$?
NfcFromFfn	fieldpic.c	?^#define NfcFromFfn(ffn) (mpffnw [ffn])$?
NullifyFcTbl	ffread.c	?^NullifyFcTbl(fn, lcb)$?
OpenEveryHardFn	file2.c	?^OpenEveryHardFn()$?
OsfnOurOpenFile	filewin.c	?^OsfnOurOpenFile( fn, pofs, fCreate )$?
OsfnValidAndSeek	filewin.c	?^OsfnValidAndSeek(fn, fc)$?
ParseDate	fieldpic.c	?^ParseDate()$?
PcaField	fieldfmt.c	?^struct CA *PcaField(pca, doc, ifld)$?
PcaFieldResult	fieldclc.c	?^struct CA *PcaFieldResult(pca, doc, ifld)$?
PchInPppb	fieldpic.c	?^CHAR *PchInPppb (ch, pch)$?
PchSkipStrictlySpacesPch	filecvt.c	?^CHAR *PchSkipStrictlySpacesPch( pch )$?
PchpSetChrDyp	formula.c	?^struct CHP *PchpSetChrDyp(bchr, dyp, ch, fVar)$?
PchrNew	formula.c	?^struct CHR * PchrNew(chrm, ich, pbchr)$?
PgnFromDocCp	fieldsc2.c	?^PgnFromDocCp (doc, cp)$?
PgnInsertSzPage	fieldsc2.c	?^PgnInsertSzPage (docRef, cpRef, doc, cp, pchp, pcc?
PushBackCh	fltexp.c	?^PushBackCh(ch, pfeb)$?
PutTreInPev	fltexp.c	?^PutTreInPev(pev, fTR2, pch, pcgfi, phhac)$?
ReadRecord	ffread.c	?^ReadRecord(pb, cb)$?
RestartUatTimer	filewin.c	?^RestartUatTimer()$?
ResurrectField	fieldsp.c	?^BOOL ResurrectField (doc, cp, flt, fChgView)$?
RgchToDoc	ffread.c	?^RgchToDoc(rgchIns, cchIns, pchp, ppap)$?
RhoFromPtr2	fltexp.c	?^int RhoFromPtr2(ptr2)$?
RotateLeft1	ffcrypt.c	?^#define RotateLeft1(b) (char)( ((b & 0x7f) << 1) |?
RotateLeft3	ffcrypt.c	?^#define RotateLeft3(b) (char)( ((b & 0x1f) << 3) |?
RotateRight1	ffcrypt.c	?^#define RotateRight1(b) (char)( ((b & 1) << 7) | (?
RotateRight3	ffcrypt.c	?^#define RotateRight3(b) (char)( ((b & 7) << 5) | (?
RoundRgch	fieldpic.c	?^RoundRgch(rgch, cchMax, cchLimit, pwExp)$?
SetChrf	formula.c	?^SetChrf(bchr, dxp, dyp, fLine)$?
SetEofFn	file2.c	?^SetEofFn(fn, fc)$?
SetFfbDeadFlt	fieldsp.c	?^SetFfbDeadFlt (pffb, doc, cp, flt)$?
SetFfbIfld	fieldprs.c	?^SetFfbIfld (pffb, doc, ifld)$?
SetFieldPchp	fieldcmd.c	?^SetFieldPchp (doc, cp, pchp, cpFirst)$?
SetFieldResultProps	fieldclc.c	?^SetFieldResultProps(doc, ifld, fInTable)$?
SetInfoFromIifdPval	fieldsc2.c	?^SetInfoFromIifdPval(iifd, pValue, doc, hsttbAssoc)?
SetRange	ffread.c	?^int SetRange (j,b,prow,pcol)    /* define j'th ran?
SetRgbEncrypt	ffcrypt.c	?^SetRgbEncrypt(pchPassword, Key1, Key2)$?
SetUatMode	filewin.c	?^SetUatMode(uam)$?
SetViewResultsFltg	fieldcmd.c	?^SetViewResultsFltg (ww, fltg, f)$?
ShowLkAhdBuf	fltexp.c	?^ShowLkAhdBuf(pfeb)$?
ShowSpecSymbol	formula.c	?^ShowSpecSymbol(ich, pchp, puls, hdc, pptPen)$?
SkipArgument	fieldclc.c	?^SkipArgument (pffb)$?
SortIbp	file2.c	?^SortIbp(rgw, iwMac)$?
SortSiftUpIbp	file2.c	?^SortSiftUpIbp(rgw, iwI, iwN)$?
StartSubTimer	filewin.c	?^StartSubTimer(uas)$?
StopSubTimer	filewin.c	?^StopSubTimer(uas)$?
StopUatTimer	filewin.c	?^StopUatTimer()$?
Stream3Setpos	ffread.c	?^Stream3Setpos(pos, ib1, ib2)$?
SymbolProto	formula.c	?^SymbolProto(ch, pchp, pdypAscent, pdypDescent, pdy?
SynthesizePevFormat	fltexp.c	?^NATIVE SynthesizePevFormat(pev, pevStack, pdApp)$?
TiClassAlphaTokenPfeb	fltexp.c	?^NATIVE int TiClassAlphaTokenPfeb(pfeb)$?
TiLexFPfeb	fltexp.c	?^int TiLexFPfeb( grpfLex, pfeb)$?
TiLexSubCalc	fltexp.c	?^int TiLexSubCalc(grpfLex, pfeb)$?
ToggleViewResultsIfld	fieldcmd.c	?^ToggleViewResultsIfld (doc, ifld)$?
Tr2FromPevDocCp	fltexp.c	?^Tr2FromPevDocCp(pev, doc, cp, rho)$?
TranslateFields	fieldcmd.c	?^TranslateFields (doc)$?
UnfieldifyDocCp	fieldsp.c	?^UnfieldifyDocCp (doc, cp)$?
UnvanishCpCpLim	fieldsp.c	?^UnvanishCpCpLim (doc, cp, cpLim)$?
VFromPpch	fieldpic.c	?^int VFromPpch(ppch)$?
WApplyFieldToSequence	fieldspc.c	?^WApplyFieldToSequence (doc, ifld, w)$?
WCalcSequenceValue	fieldspc.c	?^WCalcSequenceValue (sz, doc, cpFirst, w, cpLast)$?
WCompSfc	fieldspc.c	?^WCompSfc (sz, psfc)$?
WFromChCh	formula.c	?^#define WFromChCh(ch1, ch2) (int)((((ch1) & 0xff) ?
WGetPasswordKey	ffcrypt.c	?^NATIVE WGetPasswordKey(pchPassword)$?
WListDff	filecvt.c	?^EXPORT WORD WListDff(tmm, sz, isz, filler, tmc, wP?
WParseInt	formula.c	?^WParseInt(doc, pcp)$?
WPflcdDispFvc	fieldcr.c	?^WPflcdDispFvc (pflcd, fvc)$?
WSequenceValue	fieldspc.c	?^WSequenceValue (sz, doc, cp, fCacheResult)$?
WToHex	filewin.c	?^WToHex(rgch, w)$?
WcsFromFfn	fieldpic.c	?^#define WcsFromFfn(ffn) (mpffnw [ffn])$?
XpFromXs	formula.c	?^XpFromXs(xs)$?
XtFromXs	formula.c	?^XtFromXs(xs)$?
iabs	fieldpic.c	?^#define iabs(_i) (((_i) < 0) ?  -(_i) : (_i))$?
AddSttbToLBNew	glsy.c	?^AddSttbToLBNew(tmc, hsttb, hsttbExclude)$?
BFromTIFF	grtiff.c	?^#define BFromTIFF()	(FastBFromStm())$?
BayerInit	grswath.c	?^BayerInit(mpxyPat, mppatdns, ppatMac, ptwpPixel)$?
CheckGrAbortWin	grspec.c	?^CheckGrAbortWin(hpc)$?
CmdDoExpandGlsy	glsy.c	?^CMD CmdDoExpandGlsy(doc, iglsy)$?
CmdExpandGlsy	glsy.c	?^CMD CmdExpandGlsy(pcmb)$?
CmdGlossary	glsy.c	?^CMD CmdGlossary (pcmb)$?
CmdSpike	glsy.c	?^CMD CmdSpike (pcmb)$?
CmdUnspike	glsy.c	?^CMD CmdUnspike (pcmb)$?
DefineGlsy	glsy.c	?^DefineGlsy(doc, iglsy, pca)$?
DeleteGlsy	glsy.c	?^DeleteGlsy(doc, ist, pca)$?
DenFromTIFF	grtiff.c	?^DenFromTIFF(pden, fSwitchBytes)$?
DistFromCoCo	grspec.c	?^DistFromCoCo (co1, co2)$?
DoStrBltRow	grbit.c	?^#define DoStrBltRow(ppc, lpbSrc, lpbDst) \\$?
DocCreateGlsy	glsy.c	?^DocCreateGlsy(docMother)$?
DocGlsyLocal	glsy.c	?^DocGlsyLocal ()$?
ElSetGlossary	glsy.c	?^ElSetGlossary (hstName, hstText, fDot)$?
EndGraphics	grspec.c	?^EndGraphics(valRet)$?
EndPict	grspec.c	?^EndPict(hpc)$?
FAllocBitmap	grspec.c	?^FAllocBitmap(hpc)$?
FDlgGlossary	glsy.c	?^BOOL FDlgGlossary(dlm, tmc, wNew, wOld, wParam)$?
FDrawBitmap	grspec.c	?^FDrawBitmap(hdc, ppicrc, piLevel, ww, fn, ft)$?
FEnsureGlsyInited	glsy.c	?^FEnsureGlsyInited()$?
FEof	grspec.c	?^FEof()$?
FGribFromProfile	grspec.c	?^BOOL FGribFromProfile(szSection, szKey, pgrib)$?
FIglsyDocFromSt	glsy.c	?^FIglsyDocFromSt (piglsy, pdoc, st)$?
FImportFnChPic	grspec.c	?^FImportFnChPic(fn, stFile, doc, cp, pchp)$?
FLowRes	grtiff.c	?^#define FLowRes()	(vlm == lmPreview)$?
FPrepBitmap	grswath.c	?^FPrepBitmap(hpc)$?
FSearchGlsy	glsy.c	?^FSearchGlsy(doc, st, piglsy)$?
FSendBitmap	grspec.c	?^FSendBitmap(hpc, hdc, ppicrc)$?
FattingInit	grswath.c	?^FattingInit(mpxyPat, mppatdns, ppatMac)$?
FcrCalcFltImport	grspec.c	?^FcrCalcFltImport (doc, ifld, flt, cpInst, cpResult?
FillTmcGlossary	glsy.c	?^FillTmcGlossary (tmc, fTmcCombo)$?
FtFromStm	grspec.c	?^int FtFromStm()$?
GcfFromW2	grswath.c	?^GcfFromW2(w1, w2)$?
GetGrSize	grspec.c	?^GetGrSize(ft, pdya, pdxa)$?
GetInfoPCX	grspec.c	?^GetInfoPCX(hpc, rgco)$?
GetInfoTIFF	grtiff.c	?^GetInfoTIFF(hpc, rgco)$?
GetInfoWin	grspec.c	?^GetInfoWin(hpc, rgco)$?
GetPifdTIFF	grtiff.c	?^GetPifdTIFF(pfcIfd,fSwitchBytes, fcHeader)$?
Grbit_Last	grbit.c	?^Grbit_Last(){}$?
Grtiff_Last	grtiff.c	?^Grtiff_Last(){}$?
HOurLoadLibrary	grspec.c	?^HANDLE HOurLoadLibrary(sz, st)$?
HReadPgribSt	grspec.c	?^HANDLE HReadPgribSt(pgrib, st, prc, ph)$?
HReadStPict	grspec.c	?^HANDLE HReadStPict(stPict, prc, ph)$?
HprgbFromVfcStm	grspec.c	?^HprgbFromVfcStm(hprgb, cb)$?
IFromText	glsy.c	?^IFromText (doc, pfnIFromDocSt, cchMax)$?
IcoFromCoCcoRgco	grspec.c	?^IcoFromCoCcoRgco (co, cco, rgco)$?
IglsyCreate	glsy.c	?^int IglsyCreate(doc, pst)$?
IglsyFromSt	glsy.c	?^int IglsyFromSt(doc, st)$?
IgribFromSzExt	grspec.c	?^IgribFromSzExt(igrib, szExt, pgrib)$?
InFromOut	grswath.c	?^InFromOut(ppc, irwOut)$?
InitGrib	grspec.c	?^InitGrib()$?
InitPict	grspec.c	?^InitPict(hpc)$?
IntAssertProc	grspec.c	?^int IntAssertProc(unsval)$?
LFromTIFF	grtiff.c	?^LFromTIFF(pl,fSwitchBytes)$?
MapColors	grswath.c	?^MapColors(hpc, rgcoSrc)$?
NormTransBitmap	grbit.c	?^NormTransBitmap(hpc)$?
OutFromIn	grswath.c	?^OutFromIn(ppc, irwIn)$?
PchCopyToken	grspec.c	?^CHAR *PchCopyToken(pchDest, pchSrc, cchMax)$?
PrecalcBitParms	grswath.c	?^PrecalcBitParms(hpc)$?
PrecalcPrintParms	grswath.c	?^PrecalcPrintParms(hpc)$?
PrepMeta	grswath.c	?^PrepMeta(hpc)$?
ReadBitmap	grspec.c	?^ReadBitmap(hpc)$?
ReadTIFF	grtiff.c	?^ReadTIFF(hpc)$?
ReadTIFFLine	grtiff.c	?^ReadTIFFLine(hpc, hpPlane)$?
ReadWIN	grspec.c	?^ReadWIN(hpc)$?
RowPat	grswath.c	?^RowPat(mpxyPat, intensity, y)$?
ScaleToTwp	grspec.c	?^ScaleToTwp(pPoint)$?
SendBitmap	grbit.c	?^SendBitmap(hpc)$?
SetPreviewBounds	grswath.c	?^SetPreviewBounds(hpc)$?
SetPrintBounds	grswath.c	?^SetPrintBounds(hpc)$?
SetupStretch	grbit.c	?^SetupStretch(ppc)$?
ShortFatTransBitmap	grbit.c	?^ShortFatTransBitmap(hpc)$?
ShowGlsyOrSelection	glsy.c	?^ShowGlsyOrSelection (doc, iglsy, stGlsy)$?
SlowStrBltRow	grbit.c	?^SlowStrBltRow(ppc, lpbSrc, lpbDst)$?
StmInit	grspec.c	?^StmInit(fn)$?
StmSetPos	grtiff.c	?^#define StmSetPos(fc)	    StmSetTIFF(fc)$?
StmSetPosTIFF	grtiff.c	?^#define StmSetPosTIFF(fc)	StmSetPos(fc + ppc->tiff?
StmSetTIFF	grspec.c	?^StmSetTIFF(fc)$?
SwitchBytes	grtiff.c	?^SwitchBytes(pb, cw)$?
SwitchLong	grtiff.c	?^SwitchLong(pb)$?
SzExtFromSt	grspec.c	?^SzExtFromSt(st, szExt)$?
TallThinTransBitmap	grbit.c	?^TallThinTransBitmap(hpc)$?
TranslateBitmap	grbit.c	?^TranslateBitmap(hpc)$?
UndefineGlsy	glsy.c	?^UndefineGlsy (doc, iglsy)$?
WFromStm	grspec.c	?^#define WFromStm() 	(WFromVfcStm())$?
WFromTIFF	grtiff.c	?^WFromTIFF(fSwitchBytes)$?
WListGlsy	glsy.c	?^EXPORT WORD WListGlsy(tmm, sz, isz, filler, tmc, w?
WSwappedFromStm	grspec.c	?^WSwappedFromStm()$?
YpNextScan	grswath.c	?^YpNextScan(hpc)$?
sxt	grspec.c	?^int sxt (ch)$?
ApplyPgNumSetting	hddwin.c	?^ApplyPgNumSetting(pca)$?
CBTSelectPsel	help.c	?^CBTSelectPsel(psel)$?
CBTTblSelectPsel	help.c	?^CBTTblSelectPsel(psel)$?
CancelContextHelp	help.c	?^CancelContextHelp()$?
CbtTextEvent	help.c	?^CbtTextEvent(pch, cch)$?
CchCopyLpsz	help.c	?^int	CchCopyLpsz(lpchDest, lpchSrc)$?
CmdAbout	help.c	?^CMD CmdAbout(pcmb)$?
CmdCloseLowerPane	hddwin.c	?^CmdCloseLowerPane(pcmb)$?
CmdDoPgNum	hddwin.c	?^CMD CmdDoPgNum(fHdr, jc, pca, fFromRTF)$?
CmdHdrLinkPrev	hddwin.c	?^CMD CmdHdrLinkPrev(pcmb)$?
CmdHelp	help.c	?^CMD CmdHelp(pcmb)$?
CmdHelpActiveWindow	help.c	?^CMD CmdHelpActiveWindow(pcmb)$?
CmdHelpContents	help.c	?^CMD CmdHelpContents(pcmb)$?
CmdHelpContext	help.c	?^CMD CmdHelpContext(pcmb)$?
CmdHelpKeyboard	help.c	?^CMD CmdHelpKeyboard(pcmb)$?
CmdHelpTutorial	help.c	?^CMD CmdHelpTutorial(pcmb)$?
CmdHelpUsingHelp	help.c	?^CMD CmdHelpUsingHelp(pcmb)$?
CmdInsHeader	hddwin.c	?^CMD CmdInsHeader(pcmb)$?
CmdInsertDateField	hddwin.c	?^CMD CmdInsertDateField(pcmb)$?
CmdInsertPageField	hddwin.c	?^CMD CmdInsertPageField(pcmb)$?
CmdInsertTimeField	hddwin.c	?^CMD CmdInsertTimeField(pcmb)$?
CmdPageNumbers	hddwin.c	?^CMD CmdPageNumbers(pcmb)$?
CmdPageViewHeader	hddwin.c	?^CmdPageViewHeader(ihdt, pcaSrc)$?
CxtAppSysMenu	help.c	?^CxtAppSysMenu(wParam)$?
CxtDocSysMenu	help.c	?^CxtDocSysMenu(wParam)$?
CxtFromIbcHwnd	help.c	?^CxtFromIbcHwnd(ibc, hwnd)$?
CxtFromWw	help.c	?^int	CxtFromWw(ww)$?
CxtFromWwPt	help.c	?^int	CxtFromWwPt(ww, pt)$?
CxtMenuSelect	help.c	?^int	CxtMenuSelect(wParam, lParam, cxt)$?
DisposeWwHdr	hddwin.c	?^EXPORT DisposeWwHdr(ww)$?
FCBTChangeRuler	help.c	?^BOOL FCBTChangeRuler(imk, xa, xaOld, fLockOnLeft1)?
FCBTChangeTab	help.c	?^BOOL FCBTChangeTab(xa, xaOld)$?
FCanLinkPrev	hddwin.c	?^BOOL FCanLinkPrev(ww)$?
FDlgAbout	help.c	?^BOOL FDlgAbout(dlm, tmc, wNew, wOld, wParam)$?
FDlgHeader	hddwin.c	?^BOOL FDlgHeader(dlm, tmc, wNew, wOld, wParam)$?
FDlgInsPgNum	hddwin.c	?^FDlgInsPgNum(dlm, tmc, wNew, wOld, wParam)$?
FEnsureIhdtExists	hddwin.c	?^FEnsureIhdtExists(docMom, pdocHdr, ihdt, pcaSrc)$?
FHelp	help.c	?^BOOL PASCAL FHelp(usCommand, ulData)$?
FInFirstSection	hddwin.c	?^FInFirstSection(doc, cp)$?
FInitStateForCBT	help.c	?^FInitStateForCBT(fStartup)$?
FOpenHeaderIhtst	hddwin.c	?^FOpenHeaderIhtst(ihtst, fEditHdr)$?
FRunCBT	help.c	?^FRunCBT(fStartup)$?
GenHdrListBox	hddwin.c	?^GenHdrListBox(fFirstPage, fFacingPage)$?
GetCaHdrMom	hddwin.c	?^GetCaHdrMom(pca, ww)$?
GetHeaderSt	hddwin.c	?^GetHeaderSt(doc, ihtst, st, cchMax)$?
GetHelp	help.c	?^EXPORT int GetHelp(cxt)$?
HFill	help.c	?^HANDLE HFill(lpszHelp, usCommand, ulData)$?
IhdtFromDocIpgd	hddwin.c	?^IhdtFromDocIpgd(doc, ipgd, cpFirst, fHdr)$?
IhtstFromDoc	hddwin.c	?^IhtstFromDoc(docHdrDisp)$?
IhtstFromIhdrLB	hddwin.c	?^IhtstFromIhdrLB(iHdrLB)$?
KcFromSzHelp	help.c	?^KcFromSzHelp(hsz)$?
LRSBHelp	help.c	?^long	LRSBHelp(hwnd)$?
LookForHelp	help.c	?^HWND LookForHelp(hHlp)$?
LparamCBTFromIbcIibb	help.c	?^long	LparamCBTFromIbcIibb(ibc, iibb)$?
QuitHelp	help.c	?^QuitHelp()$?
SetHdrIBarName	hddwin.c	?^SetHdrIBarName(docHdrDisp, ihtst, ww)$?
SetSameAsPrevCtl	hddwin.c	?^SetSameAsPrevCtl(wwHdr, fEnable)$?
StCS	hddwin.c	?^#define StCS(s) StMap(s, 1)$?
StopCBT	help.c	?^StopCBT()$?
SwitchToHdrWw	hddwin.c	?^SwitchToHdrWw(ww)$?
SzFromKcHelp	help.c	?^SzFromKcHelp(kc, hsz)$?
UpdateHdrLB	hddwin.c	?^UpdateHdrLB()$?
WListHeader	hddwin.c	?^EXPORT WORD WListHeader(tmm, sz, isz, filler, tmc,?
AppendSwitchSt	index1.c	?^AppendSwitchSt(chSwitch, st, stArg)$?
AppendSzWordSz	insfield.c	?^AppendSzWordSz(szWord, sz, ichMax)$?
Blink	idle.c	?^Blink()$?
BringMenusUpToDate	idle.c	?^BringMenusUpToDate()$?
BuildScc	initwin.c	?^BuildScc(pscc, dxp, dyp)$?
C_WCompRgchIndex	index2.c	?^HANDNATIVE int C_WCompRgchIndex(hpch1, cch1, hpch2?
CallIbProc	iconbar1.c	?^CallIbProc(hibs, ibm, iibb, wParam, lParam)$?
CbRuntimeCtm	iconbar2.c	?^CHAR *rgtmwRibbon[CbRuntimeCtm(ctmDltRibbon)];$?
CchCopyStRgch	index1.c	?^int CchCopyStRgch(st, rgch)$?
CchFormatLongOrdinal	inter.c	?^int CchFormatLongOrdinal(l, ppch)$?
CchInclusiveNums	index1.c	?^CchInclusiveNums(w1, w2, pchTo, pich)$?
CchInsertFract	inter.c	?^int CchInsertFract(doc, cp, pnum, pchp)$?
CchReadPrstream	initwin.c	?^int CchReadPrstream(prstream, lpb, cb)$?
CchSkipSpace	index1.c	?^int CchSkipSpace(ppch, cchMax)$?
CchStuffLongText	inter.c	?^int CchStuffLongText(l, ppch, fOrd)$?
CheckHsttbSame	init2.c	?^CheckHsttbSame(hsttb1, hsttb2)$?
ClearInputState	idle.c	?^#define ClearInputState()   (fInputStateLatch = fF?
CmdIconBarMode	iconbar3.c	?^CMD CmdIconBarMode(pcmb)$?
CmdIndex	index1.c	?^CMD CmdIndex(pcmb)$?
CmdIndexEntry	index1.c	?^CMD CmdIndexEntry(pcmb)$?
CmdInsField	insfield.c	?^CMD CmdInsField(pcmb)$?
CmdRibbon	iconbar2.c	?^CMD CmdRibbon(pcmb)$?
CmdRuler	iconbar2.c	?^CMD CmdRuler (pcmb)$?
ConstructHeap	index1.c	?^ConstructHeap(ihteMax)$?
CopyTextPpch	inter.c	?^CopyTextPpch(isz, ppch, fOrd)$?
CpOutputEntry	index1.c	?^CP CpOutputEntry(hpidb, ilev, cp, docInd)$?
CpOutputHeading	index1.c	?^CP CpOutputHeading(doc, cp, ch)$?
DestroyHibs	iconbar2.c	?^DestroyHibs(hibs)$?
DestroyIconBar	iconbar3.c	?^DestroyIconBar(hwwd)$?
DestroyKmpIB	iconbar3.c	?^DestroyKmpIB(hwndIconBar)$?
DisableIbdlgHwndIb	iconbar2.c	?^DisableIbdlgHwndIb(hwnd, iibb, fDisable)$?
DisableIibbHwndIb	iconbar2.c	?^DisableIibbHwndIb(hwnd, iibb, fDisable)$?
DispStatlineInit	init2.c	?^DispStatlineInit()$?
DisplayRibbonInit	init2.c	?^DisplayRibbonInit()$?
DisplayRuler	iconbar2.c	?^DisplayRuler ()$?
DmscFromMsc	idle.c	?^LONG DmscFromMsc(mscBase, mscNow)$?
DoDebugTests	idle.c	?^DoDebugTests(fAbortOK)$?
DrawButtonBorder	iconbar1.c	?^DrawButtonBorder(hdc, clr, prc, fDown, fDontEraseT?
DrawButtonShadow	iconbar1.c	?^DrawButtonShadow(hdc, prc, fThickShadow, fPushed)$?
DrawShadowLines	iconbar1.c	?^DrawShadowLines(hwnd, hdc, fAbove, fBelow)$?
EnableIconAndCombo	iconbar2.c	?^EnableIconAndCombo(hwnd, iibb, fEnable)$?
EndIbdlg	iconbar2.c	?^EndIbdlg()$?
EndStartup	init2.c	?^EndStartup()$?
EndStartup1	init2.c	?^EndStartup1()$?
EndStartup2	init2.c	?^EndStartup2()$?
ExecIconBarCmd	iconbar3.c	?^ExecIconBarCmd(bcm, kc)$?
FAbstEnumBkmkInst	insfield.c	?^int FAbstEnumBkmkInst(abm, iae, sz, ichMax)$?
FAbstEnumDateInst	insfield.c	?^int FAbstEnumDateInst(abm, iae, sz, ichMax)$?
FAbstEnumEqInst	insfield.c	?^int FAbstEnumEqInst(abm, iae, sz, ichMax)$?
FAbstEnumGlossInst	insfield.c	?^int FAbstEnumGlossInst(abm, iae, sz, ichMax)$?
FAbstEnumIndexInst	insfield.c	?^int FAbstEnumIndexInst(abm, iae, sz, ichMax)$?
FAbstEnumInfoInst	insfield.c	?^int FAbstEnumInfoInst(abm, iae, sz, ichMax)$?
FAbstEnumMacroInst	insfield.c	?^int FAbstEnumMacroInst(abm, iae, sz, ichMax)$?
FAbstEnumNumInst	insfield.c	?^int FAbstEnumNumInst(abm, iae, sz, ichMax)$?
FAbstEnumPNumInst	insfield.c	?^int FAbstEnumPNumInst(abm, iae, sz, ichMax)$?
FAbstEnumPrintInst	insfield.c	?^int FAbstEnumPrintInst(abm, iae, sz, ichMax)$?
FAbstEnumStyleInst	insfield.c	?^int FAbstEnumStyleInst(abm, iae, sz, ichMax)$?
FAbstEnumTOCInst	insfield.c	?^int FAbstEnumTOCInst(abm, iae, sz, ichMax)$?
FAbstEnumTimeInst	insfield.c	?^int FAbstEnumTimeInst(abm, iae, sz, ichMax)$?
FAddFpgn	index2.c	?^int FAddFpgn(hpidb, pgn, nfc, grpf, pext, wSequenc?
FAddToSystemMenu	init2.c	?^FAddToSystemMenu()$?
FAnyDirtyDocs	idle.c	?^BOOL FAnyDirtyDocs()$?
FCreateAppIconBar	iconbar3.c	?^FCreateAppIconBar(pibd)$?
FCreateDocNew	init2.c	?^FCreateDocNew ()$?
FCreateFastStsh	init2.c	?^FCreateFastStsh(pstsh, phsttbChpe, phsttbPape)$?
FCreateHdrIconBar	iconbar3.c	?^FCreateHdrIconBar(hwwd)$?
FCreateMcrIconBar	iconbar3.c	?^FCreateMcrIconBar()$?
FCreateOutlineIcnBr	iconbar3.c	?^FCreateOutlineIcnBr(hwwd)$?
FCreatePatternBitmaps	initwin.c	?^FCreatePatternBitmaps()$?
FCreatePmdcd	initwin.c	?^FCreatePmdcd(pmdcd, hdcCompat)$?
FCreatePrvwIconBar	iconbar3.c	?^FCreatePrvwIconBar(hwnd, prc)$?
FCreateRibbon	iconbar2.c	?^BOOL NEAR FCreateRibbon()$?
FCreateRuler	iconbar2.c	?^FCreateRuler(ww, fCmd)$?
FCreateSysMenu	init2.c	?^FCreateSysMenu()$?
FCreateWwIconBar	iconbar3.c	?^FCreateWwIconBar(hwwd, pibd)$?
FDestroyRuler	iconbar2.c	?^FDestroyRuler (hmwd)$?
FDisplayableCh	index1.c	?^FDisplayableCh(ch)$?
FDlgIb	iconbar1.c	?^BOOL FDlgIb(dlm, tmc, wNew, wOld, wParam)$?
FDlgIndexEntry	index1.c	?^BOOL FDlgIndexEntry(dlm, tmc, wNew, wOld, wParam)$?
FDlgInsField	insfield.c	?^BOOL FDlgInsField(dlm, tmc, wNew, wOld, wParam)$?
FDoAutoSave	idle.c	?^FDoAutoSave()$?
FEnsureNewPara	index1.c	?^BOOL FEnsureNewPara(doc, pcpResult, cpField)$?
FFindEntries	index1.c	?^BOOL FFindEntries(pca, ipgd, sde)$?
FGetIndexChpPap	index1.c	?^BOOL FGetIndexChpPap(doc, cp, stc, pchp, ppap)$?
FGetInputState	idle.c	?^#define FGetInputState()    (fInputStateLatch || (?
FHookOutlineKmpHmwdWw	iconbar3.c	?^BOOL FHookOutlineKmpHmwdWw(hmwd, ww)$?
FIdle	idle.c	?^FIdle()$?
FIndexInit	index2.c	?^BOOL FIndexInit()$?
FInitArgs	init2.c	?^FInitArgs( rgszArg, ipchArgMac )$?
FInitCommands	initwin.c	?^FInitCommands()$?
FInitDefaultPrefs	initwin.c	?^FInitDefaultPrefs(fTutorial)$?
FInitFarprocs	initwin.c	?^int FInitFarprocs()$?
FInitFn	initwin.c	?^FInitFn()$?
FInitGlobalDot	init2.c	?^FInitGlobalDot(fTutorial)$?
FInitHandles	initwin.c	?^FInitHandles()$?
FInitPart1	initwin.c	?^int FInitPart1( hInstance, hPrevInstance, lpszCmdL?
FInitPart2	init2.c	?^FInitPart2(cmdShow, rgchCmdLine, rgpchArg, ipchArg?
FInitRulerData	iconbar2.c	?^FInitRulerData(hwndMark, hwndRuler)$?
FInitScreenConstants	initwin.c	?^int FInitScreenConstants()$?
FInitStructs	initwin.c	?^FInitStructs()$?
FMouseHitIibb	iconbar1.c	?^FMouseHitIibb(hibs, iibb, ppibb)$?
FMsgPresent	idle.c	?^NATIVE FMsgPresent( mty )$?
FNextMsgForInsert	idle.c	?^BOOL FNextMsgForInsert(ptlv)$?
FOutputIndex	index1.c	?^BOOL FOutputIndex(doc, cpIndex, cpField)$?
FParsePartialRange	index1.c	?^BOOL FParsePartialRange(st, pchMin, pchMax)$?
FProcessIndexEntry	index2.c	?^BOOL FProcessIndexEntry(pffb, doc, pgn, nfc)$?
FReadOpusIni	initwin.c	?^BOOL FReadOpusIni()$?
FReadUserState	initwin.c	?^FReadUserState()$?
FRegisterWinInfo	initwin.c	?^STATIC int NEAR FRegisterWinInfo ()$?
FRegisterWnd	initwin.c	?^STATIC BOOL NEAR FRegisterWnd()$?
FScanDocForEntries	index1.c	?^BOOL FScanDocForEntries(doc, cpFirst, cpLim, sde)$?
FScanDocForFlt	index1.c	?^BOOL FScanDocForFlt(pca, flt)$?
FTurnRibbonFOn	iconbar2.c	?^FTurnRibbonFOn(fOn, fAdjust, fUpdate)$?
FWwCanSpareDyp	iconbar2.c	?^FWwCanSpareDyp(ww, dyp)$?
FcrCalcFltIndex	index1.c	?^FcrCalcFltIndex(doc, ifld, flt, cpInst, cpResult, ?
FieldLegalSz	insfield.c	?^FieldLegalSz(szSrc, szT, ichMax, fQuoteIt)$?
FillKmp	iconbar3.c	?^FillKmp(hkmp, lpkme, ikmeMac)$?
FillLBoxInst	insfield.c	?^FillLBoxInst(ifd, sz)$?
FilterDownHeap	index1.c	?^FilterDownHeap(ihteScan, ihteMax)      /*  (ihteSc?
FormatTensPpch	inter.c	?^FormatTensPpch(n, ppch, fOrd)$?
FreeIndexMem	index2.c	?^FreeIndexMem()$?
GetHwndParentRc	iconbar2.c	?^GetHwndParentRc(hwnd, prc)$?
GetTextIibbHwndIb	iconbar3.c	?^GetTextIibbHwndIb(hwnd, iibb, sz, cchMax)$?
GetToggleBorderRcs	iconbar1.c	?^NATIVE GetToggleBorderRcs(prc, rgrcNor, rgrcInv)$?
GetToggleRc	iconbar1.c	?^NATIVE GetToggleRc(prc, prcInside)$?
GrayIibbHwndIb	iconbar1.c	?^GrayIibbHwndIb(hwnd, iibb, fGray)$?
HReadCbFromPrstream	initwin.c	?^HReadCbFromPrstream(prstream,cb)$?
HdlgHibs	iconbar1.c	?^HDLG HdlgHibs(hibs)$?
HdlgHibsDlgCur	iconbar1.c	?^HDLG HdlgHibsDlgCur(hibs)$?
HideIibbHwndIb	iconbar2.c	?^HideIibbHwndIb(hwnd, iibb, fHidden)$?
HiliteBorder	iconbar1.c	?^HiliteBorder(hwnd, iibb, fHilite)$?
HpAllocIndex	index2.c	?^HP HpAllocIndex(cb)$?
HpidbFirstFromHeap	index1.c	?^HPIDB HpidbFirstFromHeap(pihteMax)$?
HpidbNew	index2.c	?^HPIDB HpidbNew(pch, cch, doc, cp, hpidbNext)$?
HpidbScanChain	index2.c	?^HPIDB HpidbScanChain(hphpidb, pch, cch, doc, cp)$?
HppnbNew	index2.c	?^HPPNB HppnbNew()$?
HwndCreateIconBar	iconbar2.c	?^HWND HwndCreateIconBar(pibd, pdlt, hwndParent, prc?
HwndCusFromHwndIibb	iconbar2.c	?^HWND HwndCusFromHwndIibb(hwnd, iibb)$?
IBAnimateMacro	iconbar3.c	?^void IBAnimateMacro()$?
IBCancel	iconbar3.c	?^void IBCancel ()$?
IBCollapse	iconbar3.c	?^void IBCollapse ()$?
IBContinueMacro	iconbar3.c	?^void IBContinueMacro()$?
IBConvertToBody	iconbar3.c	?^void IBConvertToBody ()$?
IBDlgLoop	iconbar3.c	?^IBDlgLoop()$?
IBExpand	iconbar3.c	?^void IBExpand ()$?
IBExpandAll	iconbar3.c	?^void IBExpandAll ()$?
IBGetHelpHdr	iconbar3.c	?^void IBGetHelpHdr()$?
IBGetHelpMacro	iconbar3.c	?^void IBGetHelpMacro()$?
IBGetHelpOutline	iconbar3.c	?^void IBGetHelpOutline()$?
IBGetHelpPreview	iconbar3.c	?^void IBGetHelpPreview()$?
IBHdrDate	iconbar3.c	?^void IBHdrDate ()$?
IBHdrLinkPrev	iconbar3.c	?^void IBHdrLinkPrev ()$?
IBHdrPage	iconbar3.c	?^void IBHdrPage ()$?
IBHdrRetToDoc	iconbar3.c	?^void IBHdrRetToDoc ()$?
IBHdrTime	iconbar3.c	?^void IBHdrTime ()$?
IBLevel1	iconbar3.c	?^void IBLevel1 ()$?
IBLevel2	iconbar3.c	?^void IBLevel2 ()$?
IBLevel3	iconbar3.c	?^void IBLevel3 ()$?
IBLevel4	iconbar3.c	?^void IBLevel4 ()$?
IBLevel5	iconbar3.c	?^void IBLevel5 ()$?
IBLevel6	iconbar3.c	?^void IBLevel6 ()$?
IBLevel7	iconbar3.c	?^void IBLevel7 ()$?
IBLevel8	iconbar3.c	?^void IBLevel8 ()$?
IBLevel9	iconbar3.c	?^void IBLevel9 ()$?
IBMoveDown	iconbar3.c	?^void IBMoveDown ()$?
IBMoveLeft	iconbar3.c	?^void IBMoveLeft ()$?
IBMoveRight	iconbar3.c	?^void IBMoveRight ()$?
IBMoveUp	iconbar3.c	?^void IBMoveUp ()$?
IBPageView	iconbar3.c	?^void IBPageView()$?
IBPrvwBound	iconbar3.c	?^void IBPrvwBound()$?
IBPrvwClose	iconbar3.c	?^void IBPrvwClose()$?
IBPrvwPages	iconbar3.c	?^void IBPrvwPages()$?
IBPrvwPrint	iconbar3.c	?^void IBPrvwPrint()$?
IBReturn	iconbar3.c	?^void IBReturn ()$?
IBShowFormat	iconbar3.c	?^void IBShowFormat()$?
IBShowVars	iconbar3.c	?^void IBShowVars()$?
IBStepMacro	iconbar3.c	?^void IBStepMacro()$?
IBTab	iconbar3.c	?^void IBTab ()$?
IBToggleEllip	iconbar3.c	?^void IBToggleEllip()$?
IBTraceMacro	iconbar3.c	?^void IBTraceMacro()$?
IbTextOut	iconbar1.c	?^IbTextOut(hdc, prc, pch, fCenter, fGray)$?
IbTextOut2	iconbar1.c	?^IbTextOut2(hdc, prc, pch, fCenter, fGray)$?
IbTextOut3	iconbar1.c	?^IbTextOut3(hdc, prc, pch, fCenter, fGray)$?
IbstXlate	initwin.c	?^IbstXlate( hsttbFont, ibst )$?
IconBarWndProc	iconbar1.c	?^EXPORT LONG FAR PASCAL IconBarWndProc(hwnd, wMessa?
IconDlgWndProc	iconbar1.c	?^long EXPORT FAR PASCAL IconDlgWndProc(hwnd, messag?
Idle_Last	idle.c	?^Idle_Last(){}$?
IhteHashFct	index2.c	?^int IhteHashFct(pch, cch)$?
IibbAfterHibs	iconbar3.c	?^IibbAfterHibs(hibs, iibbFrom, fNext)$?
IibbFromHibsPt	iconbar1.c	?^IibbFromHibsPt(hibs, pt)$?
IibbFromHibsTmc	iconbar1.c	?^IibbFromHibsTmc(hibs, tmc)$?
IibbHiliteHibs	iconbar3.c	?^IibbHiliteHibs(hibs)$?
Index2_Last	index2.c	?^Index2_Last(){}$?
InitHpbps	initwin.c	?^InitHpbps(hpbps, ibpMax)$?
InitPnb	index2.c	?^InitPnb(hppnb)$?
InitStructScc2	initwin.c	?^InitStructScc2()$?
InitVpriFromFile	initwin.c	?^InitVpriFromFile(prstream,pprefd)$?
Initwin_Last	initwin.c	?^Initwin_Last(){}$?
InvalidateIibb	iconbar2.c	?^InvalidateIibb(hwnd, iibb)$?
PaintBorders	iconbar1.c	?^PaintBorders(hdc, pibb)$?
PaintHwndIb	iconbar1.c	?^PaintHwndIb(hwnd)$?
PaintToggle	iconbar1.c	?^PaintToggle(hwnd, hdc, pibb)$?
PaintToggle2	iconbar1.c	?^PaintToggle2(hwnd, hdc, pibb)$?
PaintToggle3	iconbar1.c	?^PaintToggle3(hwnd, hdc, pibb)$?
PchKeywordFromSyntax	insfield.c	?^CHAR *PchKeywordFromSyntax(sz)$?
PibbFromHibsIibb	iconbar1.c	?^NATIVE struct IBB *PibbFromHibsIibb(hibs, iibb)$?
RDProcessRefDoc	index1.c	?^int RDProcessRefDoc(pffb, sde, pist)$?
ResetASBase	idle.c	?^ResetASBase()$?
SelectRadioIibb	iconbar1.c	?^SelectRadioIibb(hwnd, iibbFirst, iibbLast, iibbSel?
SetEndIbdlg	iconbar2.c	?^SetEndIbdlg(hdlg)$?
SetFldDescrTxt	insfield.c	?^SetFldDescrTxt(ifd, tmcFldFlt, tmcFldSyntax, tmcFl?
SetFocusIibb	iconbar3.c	?^SetFocusIibb(hwnd, iibb)$?
SetHiliteHibs	iconbar3.c	?^SetHiliteHibs(hibs, iibb)$?
SetHiliteIibb	iconbar3.c	?^SetHiliteIibb(hibs, iibb, fOn)$?
SetHiliteNext	iconbar3.c	?^SetHiliteNext(hwnd, fNext)$?
SetIibbTextHwndIb	iconbar1.c	?^SetIibbTextHwndIb(hwnd, iibb, sz)$?
SetRgRcs	iconbar1.c	?^NATIVE SetRgRcs(i, fVert, xp, yp, dzp, rgrc1, rgrc?
SetValIibbHwndIb	iconbar1.c	?^SetValIibbHwndIb(hwnd, iibb, val)$?
SetWRefHwndIb	iconbar2.c	?^SetWRefHwndIb(hwnd, wRef)$?
SetupIconBarButton	iconbar3.c	?^SetupIconBarButton(wwHdr, doc, cp, ihdt)$?
ShowRulerWwCur	iconbar2.c	?^ShowRulerWwCur (fCreate, fCmd)$?
StartWndProc	init2.c	?^long EXPORT PASCAL StartWndProc(hwnd, wm, wParam, ?
TermCurIBDlg	iconbar3.c	?^TermCurIBDlg(fOK)$?
TerminateIBDlgMode	iconbar3.c	?^TerminateIBDlgMode(hibs, fOK)$?
ToggleButton	iconbar1.c	?^ToggleButton(hwnd, iibb, fDown)$?
ToggleButton2	iconbar1.c	?^ToggleButton2(hwnd, iibb, fHilite)$?
ToggleButton3	iconbar1.c	?^ToggleButton3(hwnd, iibb, fDown)$?
TurnOnToggle	iconbar1.c	?^TurnOnToggle(hwnd, pibb, fOn)$?
UnhookOutlineKmpHmwdWw	iconbar3.c	?^UnhookOutlineKmpHmwdWw(hmwd, ww)$?
UpdateIibb	iconbar1.c	?^UpdateIibb(hibs, iibb, fErase)$?
ValGetIibbHwndIb	iconbar3.c	?^WORD ValGetIibbHwndIb(hwnd, iibb)$?
ValidatePotentialXe	index1.c	?^ValidatePotentialXe(stFetch, stEntry)$?
WLBPBookmark	index1.c	?^WORD WLBPBookmark(tmm, sz, isz, filler, tmc, wPara?
WListFld	insfield.c	?^WORD WListFld(tmm, sz, isz, filler, tmc, wParam)$?
WParseHeading	index1.c	?^int WParseHeading(st)$?
WRefFromHwndIb	iconbar1.c	?^NATIVE WORD WRefFromHwndIb(hwnd)$?
XpStartupText	init2.c	?^int XpStartupText(dxpWnd, cch)$?
C_FGraphicsFcidToPlf	loadfont.c	?^HANDNATIVE C_FGraphicsFcidToPlf( fcid, plf, fPrint?
C_LoadFcid	loadfont.c	?^HANDNATIVE C_LoadFcid( fcid, pfti, fWidthsOnly )$?
C_LoadFcidFull	loadfont.c	?^HANDNATIVE C_LoadFcidFull( fcid )$?
C_LoadFont	loadfont.c	?^HANDNATIVE C_LoadFont( pchp, fWidthsOnly )$?
C_ResetFont	loadfont.c	?^HANDNATIVE C_ResetFont(fPrinterFont)$?
CommFontAttr	loadfont.c	?^CommFontAttr(szHeader, fItalic, fStrikeOut,fUnderl?
FSelectFont	loadfont.c	?^HANDNATIVE FSelectFont( pfti, phfont, phdc )$?
OurGetCharWidth	loadfont.c	?^HANDNATIVE OurGetCharWidth( hdc, chFirst, chLast, ?
OurSelectObject	loadfont.c	?^OurSelectObject(hdc, h)$?
PfceLruGet	loadfont.c	?^HANDNATIVE struct FCE *PfceLruGet()$?
AccToPnum	mathapi.c	?^AccToPnum(pnum)$?
AccToStack	mathapi.c	?^AccToStack()$?
Add2Num	mathapi.c	?^Add2Num(pnumLeft, pnumRight)$?
AddINum	mathapi.c	?^AddINum(pnum)$?
AddNum	mathapi.c	?^AddNum()$?
BcmFromSysMenu	menuhelp.c	?^int BcmFromSysMenu(bcm)$?
BsyAddCmd1	menu.c	?^BsyAddCmd1(st, docDot, imcr)$?
BsyAddMacro	menu.c	?^BsyAddMacro(st, docDot, imcr, bcm)$?
BsyFromElgSt	menu.c	?^uns BsyFromElgSt(elg, st)$?
CIntNum	mathapi.c	?^int CIntNum()$?
CNumInt	mathapi.c	?^CNumInt(w)$?
CNumUns	mathapi.c	?^CNumUns(w)$?
CUnsNum	mathapi.c	?^unsigned CUnsNum()$?
CchSzFractNum	mathapi.c	?^CchSzFractNum (pnum, pch, cchMax)$?
ClearMud	menu.c	?^ClearMud(hmud)$?
CmdPrintMerge	merge.c	?^CMD CmdPrintMerge(pcmb)$?
Cmp2Num	mathapi.c	?^long Cmp2Num(pnumLeft, pnumRight)$?
CmpINum	mathapi.c	?^long CmpINum(pnum)$?
CmpNum	mathapi.c	?^long CmpNum()$?
CreateAob	mathapi.c	?^CreateAob(dxWidth, dyHeight)$?
Div2Num	mathapi.c	?^Div2Num(pnumLeft, pnumRight)$?
DivINum	mathapi.c	?^DivINum(pnum)$?
DivNum	mathapi.c	?^DivNum()$?
DoPrintMerge	merge.c	?^DoPrintMerge(doc, docResult, iFirst, iLast, stPrFr?
DrawMenuHelp	menuhelp.c	?^DrawMenuHelp(hMenu, bcm, mf)$?
DumpMud	menu.c	?^DumpMud(hmud)$?
EnableAppMenu	menu.c	?^EnableAppMenu(fEnable)$?
ExpBase2Pnum	mathapi.c	?^int ExpBase2Pnum(pnum)$?
ExpNum	mathapi.c	?^ExpNum()$?
FAddToMud	menu.c	?^BOOL FAddToMud(hmud, imnu, st, bsy, fRemove)$?
FBuiltIn	menu.c	?^BOOL FBuiltIn(imnu, bsy)$?
FCloseDotMacros	menu.c	?^FCloseDotMacros(docDot, ac)$?
FDiffMuds	menu.c	?^BOOL FDiffMuds(hmudDest, hmudSrc)$?
FDlgPrintMerge	merge.c	?^BOOL FDlgPrintMerge(dlm, tmc, wNew, wOld, wParam)$?
FGetNextMergeData	merge.c	?^FGetNextMergeData(doc, cp)$?
FInitMergeData	merge.c	?^FInitMergeData(stData, stHeader)$?
FMenuBarHasFrame	menu.c	?^FMenuBarHasFrame(hmenu)$?
FSetMinMenu	menu.c	?^BOOL FSetMinMenu()$?
FSetShortMenu	menu.c	?^BOOL FSetShortMenu()$?
FSkipDataRecs	merge.c	?^FSkipDataRecs(i)$?
FcrCalcFltPMNextData	merge.c	?^FcrCalcFltPMNextData(doc, ifld, flt, cpInst, cpRes?
FcrCalcFltPMRec	merge.c	?^FcrCalcFltPMRec(doc, ifld, flt, cpInst, cpResult, ?
FcrCalcFltPMSkipIf	merge.c	?^FcrCalcFltPMSkipIf(doc, ifld, flt, cpInst, cpResul?
FixNum	mathapi.c	?^FixNum(w)$?
GetMenuHelpSz	menuhelp.c	?^GetMenuHelpSz(bcm, sz)$?
GetNameFromBsy	menu.c	?^GetNameFromBsy(stName, bsy)$?
HMenuFromMw	menu.c	?^HMENU HMenuFromMw(mw)$?
HMenuLoadCodeMenu	menu.c	?^HMENU HMenuLoadCodeMenu(i)$?
ImnuFromHMenu	menuhelp.c	?^int ImnuFromHMenu(hMenu, bcm)$?
ImtmFindImnu	menu.c	?^int ImtmFindImnu(imnu, rgmtm, imtmMac)$?
InitMath	mathapi.c	?^InitMath()$?
InitRnd	mathapi.c	?^InitRnd()$?
LWholeFromNum	mathapi.c	?^LONG LWholeFromNum (pnum, fTruncate)$?
LdComNum	mathapi.c	?^LdComNum(icnum)$?
LdiNum	mathapi.c	?^LdiNum(pnum)$?
LnNum	mathapi.c	?^LnNum()$?
LpstToSz	menu.c	?^LpstToSz(lpst, sz)$?
MakeNum	mathapi.c	?^MakeNum (pnum, lWhole, lFract, cd)$?
MathCheck	mathapi.c	?^MathCheck()$?
MathError	mathapi.c	?^EXPORT FAR PASCAL MathError(merr)$?
MathStackCheck	mathapi.c	?^MathStackCheck(dir)$?
Mathapi_Last	mathapi.c	?^Mathapi_Last(){}$?
ModINum	mathapi.c	?^ModINum(pnum)$?
ModNum	mathapi.c	?^ModNum()$?
Mul2Num	mathapi.c	?^Mul2Num(pnumLeft, pnumRight)$?
MulINum	mathapi.c	?^MulINum(pnum)$?
MulNum	mathapi.c	?^MulNum()$?
NegNum	mathapi.c	?^NegNum()$?
NumFromL	mathapi.c	?^void NumFromL(l, pnum)$?
NumFromSz	mathapi.c	?^NumFromSz(sz, pnum)$?
NumIToI	mathapi.c	?^void NumIToI(w0, w1, pnum)$?
NumToPupnum	mathapi.c	?^NumToPupnum (pnum, pupnum, cDigBlw)$?
PaobNew	mathapi.c	?^AOB * PaobNew(aot)$?
PchGetStr	menuhelp.c	?^char *PchGetStr(lpch, pch)$?
PnumToAcc	mathapi.c	?^PnumToAcc(pnum)$?
PnumToStack	mathapi.c	?^PnumToStack(pnum)$?
PsyGetSyFromBcmElg	menu.c	?^SY * PsyGetSyFromBcmElg(rgchSy, bcm, elg)$?
RemoveCmd	menu.c	?^RemoveCmd(st, elg)$?
RemoveDotMacros	menu.c	?^RemoveDotMacros(docDot)$?
RemoveFieldsFromDoc	merge.c	?^RemoveFieldsFromDoc (doc, fAll)$?
ResetMathPack	mathapi.c	?^ResetMathPack()$?
RoundNum	mathapi.c	?^RoundNum(w)$?
SetFfbPrintMergeText	merge.c	?^SetFfbPrintMergeText (pffb, doc, cp)$?
SpawnAobs	mathapi.c	?^SpawnAobs(x, y)$?
StackToAcc	mathapi.c	?^StackToAcc()$?
StackToPnum	mathapi.c	?^StackToPnum(pnum)$?
StiNum	mathapi.c	?^StiNum(pnum)$?
Sub2Num	mathapi.c	?^Sub2Num(pnumLeft, pnumRight)$?
SubINum	mathapi.c	?^SubINum(pnum)$?
SubNum	mathapi.c	?^SubNum()$?
UnpackNum	mathapi.c	?^UnpackNum(pwExp, pwSign, rgch)$?
WApproxCmpPnum	mathapi.c	?^int WApproxCmpPnum(pnum1, pnum2)$?
WRand	mathapi.c	?^WRand(w)$?
WSignFromPnum	mathapi.c	?^int WSignFromPnum(pnum)$?
AnimateOtl	outwin.c	?^AnimateOtl(fExpand, doc, ipad, prc1, prc2)$?
AppendWw	open.c	?^AppendWw(doc, ww)$?
ApplyDocSep	openrare.c	?^ApplyDocSep(doc, docSrc)$?
ChangeDocDot	openrare.c	?^ChangeDocDot (doc, docDotNew)$?
CheckCloseUntitled	open.c	?^CheckCloseUntitled()$?
CheckQueryAndStartHotLinks	open.c	?^CheckQueryAndStartHotLinks (doc)$?
CmdOutline	outwin.c	?^CMD CmdOutline(pcmb)$?
ConvertFib	openrare.c	?^ConvertFib (pfib)$?
CpOutlineAdvance	outwin.c	?^EXPORT CP CpOutlineAdvance(doc, cp)$?
DffFromFn	openrare.c	?^DffFromFn(fn)$?
DisplayAndUpdateControl	open.c	?^DisplayAndUpdateControl(hwnd)$?
DocCreateForeignFn	openrare.c	?^DocCreateForeignFn (fn, fInput, stConverter, pstSu?
DocOpenDot	openrare.c	?^DocOpenDot (stDot, fErrors, docFor)$?
DocOpenStDof	open.c	?^DocOpenStDof(stName, dof, prcMw)$?
DocReadPlainFn	openrare.c	?^DocReadPlainFn (fn)$?
DrawMks	outwin.c	?^DrawMks(pmks, mkt, xp, yp, dyp)$?
DrawOtlMoveMarker	outwin.c	?^DrawOtlMoveMarker(xp, yp, dyp, mkt)$?
DrawOtlPat	outwin.c	?^EXPORT DrawOtlPat(ww, hdc, idcbOtlMark, xwT, ywT)$?
DxaTabOutline	outwin.c	?^int DxaTabOutline(doc)$?
DxpOutlineSplats	outwin.c	?^EXPORT DxpOutlineSplats(hdc, xp, ptText, prcwOpaqu?
ElNewFile	open.c	?^EL ElNewFile(stType, fNewDot)$?
FBltOutlineSplat	outwin.c	?^EXPORT BOOL FAR PASCAL FBltOutlineSplat(hdc, lprc,?
FConvertDoc	openrare.c	?^FConvertDoc (doc, dk)$?
FCreateMw	open.c	?^FCreateMw(doc, wk, psels, prcMw)$?
FCreateScrollBars	open.c	?^FCreateScrollBars( pfVert, pfHorz, wwTop, pmwd, rc?
FCreateVScrlWw	open.c	?^FCreateVScrlWw(ww, rcVScrlBar)$?
FFillMissingBtePns	openrare.c	?^FFillMissingBtePns(fn, hplcbte, pfib, cpnPrev, fCh?
FOutlineSelect	outwin.c	?^FOutlineSelect(pt, fShift, fOption, fCommand)$?
FReadCmds	openrare.c	?^FReadCmds(fn, fc, hdod)$?
FShowOutline	outwin.c	?^EXPORT FShowOutline(doc, cp)$?
FToggleOutline	outwin.c	?^BOOL FToggleOutline(ww)$?
FXwInBullet	outwin.c	?^FXwInBullet(ww, dl, xw)$?
FnTranslateOemFn	openrare.c	?^FnTranslateOemFn(fnSrc)$?
HwndCreateScrollBar	open.c	?^HWND HwndCreateScrollBar(fVert, fVisible, rc, hwnd?
InitESF	outwin.c	?^InitESF()$?
InvalYpMin	outwin.c	?^InvalYpMin(hwwd, dyp)$?
Lvl2FromDocCp	outwin.c	?^int Lvl2FromDocCp(doc, cp)$?
Lvl2FromIpad	outwin.c	?^int Lvl2FromIpad(doc, ipad, fInsert)$?
LvlFromXp	outwin.c	?^LvlFromXp(xp)$?
OtlMarkPos	outwin.c	?^EXPORT OtlMarkPos(xw, yw, dyp, pxw, pyw)$?
OutlineChp	outwin.c	?^NATIVE OutlineChp(doc, pchp)$?
OutlineProps	outwin.c	?^EXPORT OutlineProps(pxaLeft, pxaRight, pdypBefore)?
QueryAndStartHotLinks	openrare.c	?^QueryAndStartHotLinks (doc)$?
StFileInDocDir	openrare.c	?^StFileInDocDir(stFile1, stFile2, doc)$?
SubsetDoc	openrare.c	?^SubsetDoc (doc, stBkmk)$?
SynchOutline	outwin.c	?^SynchOutline(ww)$?
ToggleESF	outwin.c	?^ToggleESF(ww, fTgEllip, fTgShowF)$?
ToggleOutlineLvl	outwin.c	?^ToggleOutlineLvl(hwndIconBar, lvlOld, lvlNew)$?
UpdateControlsMw	open.c	?^UpdateControlsMw(mw)$?
UpdateOutlineIconBar	outwin.c	?^UpdateOutlineIconBar()$?
UpdateVScrlWw	open.c	?^UpdateVScrlWw(ww)$?
WwCreate	open.c	?^WwCreate(doc, wwOther, mw, rcWw, wk)$?
WwLastInDoc	open.c	?^WwLastInDoc(doc, ppwwd)$?
WwPaneCreate	open.c	?^WwPaneCreate( hwnd )$?
XpFromLvl	outwin.c	?^XpFromLvl(lvl, fBody)$?
AbortPmt	prompt.c	?^void AbortPmt ()$?
AddFontResourcePR	profwin2.c	?^NATIVE short AddFontResourcePR(P1) /* WINIGNORE - ?
AdjustPrompt	prompt.c	?^EXPORT AdjustPrompt (ich, cch, pch)$?
AdjustPrompt2	prompt.c	?^AdjustPrompt2 (ich, cch, pch)$?
AdjustPrompt3	prompt.c	?^AdjustPrompt3 (ich, cch, xp, pch)$?
AdjustRcLine	pic3.c	?^AdjustRcLine(prc)$?
AlignLrs	print1.c	?^AlignLrs(plbs, hgrpalg, ialgMac, clrAdjust)$?
AnimateFlipPage	preview.c	?^AnimateFlipPage(hdc, direc)$?
AnimateRect	preview.c	?^AnimateRect(hdc,prcFrom, prcTo)$?
BeginPaintPR	profwin.c	?^NATIVE HDC BeginPaintPR(P1,P2) /* WINIGNORE - PROF?
BitBltPR	profwin.c	?^NATIVE BOOL BitBltPR(P1,P2,P3,P4,P5,P6,P7,P8,P9) /?
BlankPageRect	preview.c	?^BlankPageRect(hdc,prc)$?
BlinkPromptCaret	prompt.c	?^BlinkPromptCaret (hdc, fToggle)$?
BringWindowToTopPR	profwin.c	?^NATIVE void BringWindowToTopPR(P1) /* WINIGNORE - ?
BuildPrSetupSz	print2.c	?^BuildPrSetupSz(szPrSetup, szPrinter, szPort)$?
BuildStMstRgw	prompt.c	?^BuildStMstRgw (mst, rgw, st, cchMax, hppr)$?
CacheAbsObj	prvw2.c	?^CacheAbsObj()$?
CallWindowProcPR	profwin.c	?^NATIVE long CallWindowProcPR(P1,P2,P3,P4,P5) /* WI?
CchPgnFromIpgd	preview.c	?^CchPgnFromIpgd(pchFirst, doc, ipgd1, ipgd2)$?
ChangeMargins	prvw2.c	?^ChangeMargins(hdc, pt, ircs)$?
ChangeMenuPR	profwin.c	?^NATIVE BOOL ChangeMenuPR(P1,P2,P3,P4,P5) /* WINIGN?
ChangePicFrame	pic3.c	?^ChangePicFrame(pca, brcl, mx, my, wCropTop, wCropL?
ChangePicVals	pictdrag.c	?^ChangePicVals (prcDrag, prcBasisPic, prcScale, irc?
ChangeProgressReport	prompt.c	?^ChangeProgressReport (hppr, nNew)$?
ChangePrvwCancel	prvw2.c	?^ChangePrvwCancel()$?
CheckCompressDoc	prompt.c	?^CheckCompressDoc(doc)$?
CheckDlgButtonPR	profwin.c	?^NATIVE void CheckDlgButtonPR(P1,P2,P3) /* WINIGNOR?
CheckMenuItemPR	profwin.c	?^NATIVE BOOL CheckMenuItemPR(P1,P2,P3) /* WINIGNORE?
CheckRadioButtonPR	profwin.c	?^NATIVE void CheckRadioButtonPR(P1,P2,P3,P4) /* WIN?
ChgPr	print2.c	?^ChgPr(hszPrinter, hszPort, hszDriver)$?
ClipLnbcToApo	print1.c	?^ClipLnbcToApo(plbs)$?
CloseClipboardPR	profwin.c	?^NATIVE BOOL CloseClipboardPR() /* WINIGNORE - PROF?
CmdChangePrinter	print2.c	?^CMD CmdChangePrinter(pcmb)$?
CmdInsPicture	pic2.c	?^CMD CmdInsPicture(pcmb)$?
CmdPicture	pic2.c	?^CMD CmdPicture(pcmb)$?
CmdPrint	print.c	?^CMD CmdPrint(pcmb)$?
CmdPrintPreview	preview.c	?^CMD CmdPrintPreview(pcmb)$?
CmdPrvwBound	prvw2.c	?^CMD CmdPrvwBound(pcmb)$?
CmdPrvwPages	prvw2.c	?^CMD CmdPrvwPages(pcmb)$?
CmdRegenPrvw	prvw2.c	?^CMD CmdRegenPrvw()$?
CmdRepaginate	print.c	?^CMD CmdRepaginate(pcmb)$?
CmdTurnOnPrvw	preview.c	?^CMD CmdTurnOnPrvw()$?
CompressSt	print.c	?^CompressSt(st)$?
CreateBMIndirectPR	profwin.c	?^NATIVE HBITMAP CreateBMIndirectPR(P1) /* WINIGNORE?
CreateBitmapPR	profwin.c	?^NATIVE HBITMAP CreateBitmapPR(P1,P2,P3,P4,P5) /* W?
CreateCaretPR	profwin.c	?^NATIVE void CreateCaretPR(P1,P2,P3,P4) /* WINIGNOR?
CreateComBitmapPR	profwin.c	?^NATIVE HBITMAP CreateComBitmapPR(P1,P2,P3) /* WINI?
CreateComDCPR	profwin.c	?^NATIVE HDC CreateComDCPR(P1) /* WINIGNORE - PROFIL?
CreateDCPR	profwin.c	?^NATIVE HDC CreateDCPR(P1,P2,P3,P4) /* WINIGNORE - ?
CreateFontIndirectPR	profwin.c	?^NATIVE HFONT CreateFontIndirectPR(P1) /* WINIGNORE?
CreateICPR	profwin.c	?^NATIVE HDC CreateICPR(P1,P2,P3,P4) /* WINIGNORE - ?
CreateMenuPR	profwin.c	?^NATIVE HMENU CreateMenuPR() /* WINIGNORE - PROFILE?
CreatePatternBrushPR	profwin.c	?^NATIVE HBRUSH CreatePatternBrushPR(P1) /* WINIGNOR?
CreatePenIndirectPR	profwin.c	?^NATIVE HPEN CreatePenIndirectPR(P1) /* WINIGNORE -?
CreatePenPR	profwin.c	?^NATIVE HPEN CreatePenPR(P1,P2,P3) /* WINIGNORE - P?
CreateRectRgnIndirectPR	profwin.c	?^NATIVE HRGN CreateRectRgnIndirectPR(P1) /* WINIGNO?
CreateSolidBrushPR	profwin.c	?^NATIVE HBRUSH CreateSolidBrushPR(P1) /* WINIGNORE ?
CreateWindowPR	profwin.c	?^NATIVE HWND CreateWindowPR(P1,P2,P3,P4,P5,P6,P7,P8?
DefWinProcPR	profwin2.c	?^NATIVE long DefWinProcPR(P1,P2,P3,P4) /* WINIGNORE?
DeleteDCPR	profwin.c	?^NATIVE BOOL DeleteDCPR(P1) /* WINIGNORE - PROFILE ?
DeleteObjectPR	profwin.c	?^NATIVE BOOL DeleteObjectPR(P1) /* WINIGNORE - PROF?
DestroyCaretPR	profwin.c	?^NATIVE void DestroyCaretPR() /* WINIGNORE - PROFIL?
DestroyMenuPR	profwin2.c	?^NATIVE BOOL DestroyMenuPR(P1) /* WINIGNORE - PROFI?
DestroyWindowPR	profwin2.c	?^NATIVE BOOL DestroyWindowPR(P1) /* WINIGNORE - PRO?
DisplayLrs	preview.c	?^DisplayLrs(plbsText, fCanAbort)$?
DisplayPrompt	prompt.c	?^DisplayPrompt (pdc, hppr)$?
DisplayPrvwFli	preview.c	?^DisplayPrvwFli(ww, rc, xl, yl)$?
DoPrint	print.c	?^DoPrint(doc, stFrom, stTo, fWholeDoc, fChkPgMgn)$?
DragPicFrame	pictdrag.c	?^DragPicFrame(ircs, ptIn, prcpic, fScale)$?
DrawChPic	pic.c	?^DrawChPic(ww, ich, pptPen, ypBase, pchpIn)$?
DrawDragBox	prvw2.c	?^DrawDragBox(hdc, prc, xp, yp)$?
DrawFormulaLine	print1.c	?^EXPORT DrawFormulaLine(hdc, x2, y2, x1, y1, grpf)$?
DrawPicFrame	pic.c	?^DrawPicFrame(hdc, prcFrame, pbrdr, brcl, ico)$?
DrawPrvwLine	prvw2.c	?^EXPORT DrawPrvwLine(hdc, xpFrom, ypFrom, dxp, dyp,?
DrawTextPR	profwin.c	?^NATIVE void DrawTextPR(P1,P2,P3,P4,P5) /* WINIGNOR?
DrawXorFrame	pic3.c	?^DrawXorFrame (hdc, prc, ipatHorz, ipatVert)$?
DsiToDopDoc	print.c	?^DsiToDopDoc(doc)$?
DxpDypToPara	print2.c	?^int DxpDypToPara(doc, cp, pdyp)$?
DzpFromMmZext	pic3.c	?^int DzpFromMmZext( mm, val, pxlDeviceRes, milDevic?
ElPrintPrvw	preview.c	?^EL ElPrintPrvw(fOn)$?
ElPrinterSetup	print2.c	?^ElPrinterSetup(pstPrinter, pstPort, pstDriver)$?
EmitComplexPs	print2.c	?^EmitComplexPs(psz, pw)$?
EmitPs	print2.c	?^EmitPs(idPrintPs, cp)$?
EmitPsSz	print2.c	?^EmitPsSz(sz)$?
EmptyClipboardPR	profwin.c	?^NATIVE BOOL EmptyClipboardPR() /* WINIGNORE - PROF?
EnableHotSpots	print.c	?^EnableHotSpots(fEnable)$?
EnableMwHotSpots	print.c	?^EnableMwHotSpots(mw, fEnable)$?
EnableWindowPR	profwin.c	?^NATIVE BOOL EnableWindowPR(P1,P2) /* WINIGNORE - P?
EnableWwHotSpots	print.c	?^EnableWwHotSpots(ww, fEnable)$?
EndPaintPR	profwin.c	?^NATIVE void EndPaintPR(P1,P2) /* WINIGNORE - PROFI?
EndPreviewMode	preview.c	?^EndPreviewMode()$?
EndPrintJob	print.c	?^EndPrintJob(lm, flm)$?
EndULPrint	print1.c	?^EndULPrint(puls)$?
EscapeError	print.c	?^EscapeError(iEscape)$?
EscapePR	profwin.c	?^NATIVE short EscapePR(P1,P2,P3,P4,P5) /* WINIGNORE?
ExcludeClipRectPR	profwin.c	?^NATIVE ExcludeClipRectPR(P1,P2,P3,P4,P5) /* WINIGN?
ExtTextOutPR	profwin.c	?^NATIVE BOOL ExtTextOutPR(P1,P2,P3,P4,P5,P6,P7,P8) ?
FAllocAlg	print1.c	?^FAllocAlg(hgrpalg, ccolM1, pbalgMac, pbalgMax)$?
FAppModalFilter	prompt.c	?^FAppModalFilter (hwnd, pmsg, mmo)$?
FBeginPrintJob	print.c	?^FBeginPrintJob(doc, lm, flm)$?
FChangePageBreak	prvw2.c	?^FChangePageBreak(hdc, pt, prc)$?
FChangePrvwDoc	prvw2.c	?^FChangePrvwDoc(hdc, fNuke, fNewRcs)$?
FCheckAbortKey	prompt.c	?^FCheckAbortKey()$?
FCheckBox	prvw2.c	?^FCheckBox(hdc, iobj, pt, fShift, fChange, prcPage)?
FCheckFmtPic	pic2.c	?^FCheckFmtPic(pcmb, fDialog)$?
FCheckLine	prvw2.c	?^FCheckLine(hdc, iobj, pt, fChange, pfError, prcPag?
FCheckPageAndMargins	print1.c	?^FCheckPageAndMargins(doc, fSwapDimensions, fPrinti?
FCheckPageSect	print.c	?^FCheckPageSect(st)$?
FCheckPic	pic2.c	?^FCheckPic(ppic, pca)$?
FCheckPopupRect	prvw2.c	?^EXPORT BOOL far PASCAL FCheckPopupRect(hwnd,lppuch?
FCheckPrinter	print2.c	?^FCheckPrinter(hszPrinter, hszPort, hszDriver)$?
FClipRcPic	pic3.c	?^BOOL FClipRcPic(psel, prcPic, prcClip)$?
FComputePictSize	pic3.c	?^FComputePictSize( pmfp, pdxa, pdya )$?
FContainsFlts	print.c	?^FContainsFlts (doc, flt1, flt2)$?
FContentHitPic	pic3.c	?^FContentHitPic(psel, ppt, fShift, fOption, fComman?
FCopyPageBitmap	preview.c	?^FCopyPageBitmap(hdc, fToRight)$?
FCopyPrvwFoo	preview.c	?^FCopyPrvwFoo(hplfooFrom, hplfooTo, pfoo)$?
FCropGetPicSizes	pic.c	?^FCropGetPicSizes( doc, cp, pchp, ppicdim)$?
FDisplayLrsInPage	preview.c	?^FDisplayLrsInPage(hdc, fRight, fSync)$?
FDisplayPage	preview.c	?^FDisplayPage(hdc, fRight)$?
FDlgChgPr	print2.c	?^int FDlgChgPr(dlm, tmc, wNew, wOld, wParam)$?
FDlgFormatPic	pic2.c	?^BOOL FDlgFormatPic(dlm, tmc, wNew, wOld, wParam)$?
FDlgInsPic	pic2.c	?^BOOL FDlgInsPic(dlm, tmc, wNew, wOld, wParam)$?
FDlgPrint	print.c	?^BOOL FDlgPrint(dlm, tmc, wNew, wOld, wParam)$?
FDrawMetafile	pic3.c	?^FDrawMetafile(hdc, ppicrc, piLevel, ww, peid)$?
FEnhanceHpldr	pic3.c	?^FEnhanceHpldr(ww, hpldr)$?
FEnhanceWw	pic3.c	?^FEnhanceWw (ww)$?
FEqualPt	prvw2.c	?^FEqualPt(lpt1,lpt2)$?
FFacingEven	prvw2.c	?^FFacingEven(fLeft)$?
FFetchSelPicRc	pic.c	?^FFetchSelPicRc (psel, pPicrc, pfCrop, grpfPic, fIn?
FFillCabPrint	print.c	?^FFillCabPrint(hcab, fPrintMerge)$?
FFillChgPrLb	print2.c	?^FFillChgPrLb(szDevSpec, szListEntry, phsttb)$?
FFillUndoAtn	print2.c	?^FFillUndoAtn(docMother, cpFirst, cpLim)$?
FFillUndoGlsy	print2.c	?^FFillUndoGlsy(docMother)$?
FFillUndoKeys	print2.c	?^FFillUndoKeys(docMother)$?
FFillUndoStsh	print2.c	?^FFillUndoStsh(docMother)$?
FFillUndoSummaryInfo	print2.c	?^FFillUndoSummaryInfo(docMother)$?
FGenDragBox	prvw2.c	?^FGenDragBox(iobj, prcBox, prcLim, pfTopLeft, pgrpf?
FGenDragLine	prvw2.c	?^FGenDragLine(iobj, prcHit, prcLim, fChange)$?
FGetPicRc	pic.c	?^FGetPicRc (pPicrc, pfCrop, pchp, xp, yp, psel, grp?
FGetPsPicRc	print2.c	?^FGetPsPicRc(doc, cp, plr, prc)$?
FGotoPagePrvw	preview.c	?^FGotoPagePrvw(hdc, yp, dipgd)$?
FInitPrvw	preview.c	?^FInitPrvw(fGenKmp)$?
FInsKmpInUndo	print2.c	?^FInsKmpInUndo(hkmp, pcp, szBuf)$?
FLeftLbs	prvw2.c	?^FLeftLbs()$?
FLnbcInBand	print.c	?^FLnbcInBand(lnbc, dxpO2)$?
FLrGt	print.c	?^FLrGt(ilr0, ilr1)$?
FLrInBand	print.c	?^FLrInBand(lr, xpRevBar)$?
FMFContinue	pic3.c	?^EXPORT BOOL FAR PASCAL FMFContinue(hdc, lpHTable, ?
FMarginsOK	print1.c	?^FMarginsOK( docMother)$?
FMustPrePaginate	print.c	?^FMustPrePaginate (doc)$?
FOurPlayMetaFile	pic3.c	?^FOurPlayMetaFile(hdc, hMF, ww)$?
FPageOK	print1.c	?^FPageOK( docMother, dxaDocPage, dyaDocPage, pfPrin?
FPopupOverlap	preview.c	?^FPopupOverlap(hwnd,prc)$?
FPrContinue	print.c	?^EXPORT BOOL FAR PASCAL FPrContinue(hdc, iCode)$?
FPrefixSzSzBin	print.c	?^FPrefixSzSzBin(pch1, pch2)$?
FPrintAtn	print2.c	?^FPrintAtn(doc, cpFirst, cpLim)$?
FPrintDoc	print.c	?^FPrintDoc(doc, hppr)$?
FPrintSummaryInfo	print2.c	?^FPrintSummaryInfo(doc, cpFirst, cpLim)$?
FProcessMessageQueue	prompt.c	?^FProcessMessageQueue (hwnd, pw, fAppModal, mmo)$?
FPrvwBoundaries	prvw2.c	?^FPrvwBoundaries(fOn)$?
FPrvwPageScroll	preview.c	?^FPrvwPageScroll(hdc, fUp)$?
FPrvwPages	prvw2.c	?^FPrvwPages(wPages)$?
FPtInRc	prvw2.c	?^FPtInRc(prc, pt)$?
FQueryAbortCheckProc	prompt.c	?^NATIVE FQueryAbortCheckProc ()$?
FRegenLrs	prvw2.c	?^FRegenLrs()$?
FRepaginateDoc	print.c	?^BOOL FRepaginateDoc(doc, prpl, pat)$?
FScaleInRange	pic2.c	?^FScaleInRange(dx, dy, wScaleMx, wScaleMy, dxMin, d?
FScaleViewportForPrvw	pic3.c	?^FScaleViewportForPrvw(hdc, prc)$?
FSetModeNorm	prvw2.c	?^FSetModeNorm(hdc, fAreasOff)$?
FSetViewport	pic3.c	?^FSetViewport(hdc, prc)$?
FSetWinView	pic3.c	?^FSetWinView(hdc, dxpOrig, dypOrig)$?
FSetWindowExt	pic3.c	?^FSetWindowExt(hdc)$?
FSortAndDisplayLrs	print.c	?^FSortAndDisplayLrs(plbs)$?
FSyncLbs	preview.c	?^FSyncLbs()$?
FTrackAndChangeObject	prvw2.c	?^FTrackAndChangeObject(hdc, pt, prcPage, fShift, fC?
FTrackBox	prvw2.c	?^FTrackBox(hdc, pt, prcBox, prcLim, fTopLeft, grpfD?
FTrackPL	prvw2.c	?^FTrackPL(hdc, ppt, prcLim, ircs)$?
FTrackPrvwLine	prvw2.c	?^FTrackPrvwLine(hdc, ppt, ircs, prcHit, prcFrame)$?
FValidPgn	preview.c	?^FValidPgn(doc, ipgd)$?
FXaYaFromPt	prvw2.c	?^FXaYaFromPt(pt, pxa, pya, grpf)$?
FetchPe	pic.c	?^FetchPe(pchp, docSrc, cpSrc)$?
FetchPeData	pic.c	?^FetchPeData(fc, hpch, lcb)$?
FillPrsu	print.c	?^FillPrsu(hcab, stFrom, stTo, cchMax)$?
FillRectPR	profwin.c	?^NATIVE int FillRectPR(P1,P2,P3) /* WINIGNORE - PRO?
FillRgnPR	profwin.c	?^NATIVE BOOL FillRgnPR(P1,P2,P3) /* WINIGNORE - PRO?
FillWindowPR	profwin.c	?^NATIVE void FillWindowPR(P1,P2,P3,P4) /* WINIGNORE?
ForceAbortCheck	prompt.c	?^ForceAbortCheck ()$?
FrameRectPic	pictdrag.c	?^FrameRectPic(hdc, prc)$?
GenPrvwPlf	preview.c	?^EXPORT GenPrvwPlf(plf)$?
GetBasisPicRc	pictdrag.c	?^GetBasisPicRc (prcBasis, prcpic, fScale)$?
GetBestWholeMxMy	pic3.c	?^GetBestWholeMxMy( fPrinter, dxpOrig, dypOrig, dxaG?
GetBinInfo	print.c	?^GetBinInfo(hcabPrint)$?
GetBitmapSize	pic3.c	?^GetBitmapSize(pdxt, pdyt)$?
GetBrdrLineSizes	pic.c	?^GetBrdrLineSizes (brcl, pbrdr, prcBrdr, fScaleForS?
GetClipboardDataPR	profwin.c	?^NATIVE HANDLE GetClipboardDataPR(P1) /* WINIGNORE ?
GetDCPR	profwin.c	?^NATIVE HDC GetDCPR(P1) /* WINIGNORE - PROFILE only?
GetDragRc	pic3.c	?^GetDragRc(ircs, prcDrag, prcFrame)$?
GetEnvironmentPR	profwin.c	?^NATIVE short GetEnvironmentPR(P1,P2,P3) /* WINIGNO?
GetInputStatePR	profwin.c	?^NATIVE BOOL GetInputStatePR() /* WINIGNORE - PROFI?
GetMargin	prvw2.c	?^GetMargin(ircs, prcHandle, prcLine)$?
GetMenuItemCountPR	profwin.c	?^NATIVE WORD GetMenuItemCountPR(P1) /* WINIGNORE - ?
GetMenuItemIdPR	profwin.c	?^NATIVE WORD GetMenuItemIdPR(P1,P2) /* WINIGNORE - ?
GetMenuPR	profwin.c	?^NATIVE HMENU GetMenuPR(P1) /* WINIGNORE - PROFILE ?
GetMenuStatePR	profwin.c	?^NATIVE WORD GetMenuStatePR(P1,P2,P3) /* WINIGNORE ?
GetMenuStringPR	profwin.c	?^NATIVE int GetMenuStringPR(P1,P2,P3,P4,P5) /* WINI?
GetMessagePR	profwin.c	?^NATIVE BOOL GetMessagePR(P1,P2,P3,P4) /* WINIGNORE?
GetMstStNoAbort	prompt.c	?^GetMstStNoAbort(pmst)$?
GetPicLim	pictdrag.c	?^GetPicLim(prcMinMax, prcBasis, prcScale, fScale)$?
GetPictureInfo	pic.c	?^GetPictureInfo(bchrChp, ich, pdxp, pdxt, pdyyAscen?
GetPrinterFromListEntry	print2.c	?^GetPrinterFromListEntry(szListEntry, ppchPort, szD?
GetProfileIntPR	profwin.c	?^NATIVE int GetProfileIntPR(P1,P2,P3) /* WINIGNORE ?
GetProfileStringPR	profwin.c	?^NATIVE int GetProfileStringPR(P1,P2,P3,P4,P5) /* W?
GetRcDragLim	pictdrag.c	?^GetRcDragLim(prcDragLim, prcDrag, prcBasisPic, prc?
GetStockObjectPR	profwin.c	?^NATIVE HANDLE GetStockObjectPR(P1) /* WINIGNORE - ?
GetTempFileNamePR	profwin.c	?^NATIVE int GetTempFileNamePR(P1,P2,P3,P4) /* WINIG?
GetTextExtentPR	profwin.c	?^NATIVE DWORD GetTextExtentPR(P1,P2,P3) /* WINIGNOR?
GetUpdateRectPR	profwin.c	?^NATIVE BOOL GetUpdateRectPR(P1,P2,P3) /* WINIGNORE?
GlblAllocPR	profwin.c	?^NATIVE HANDLE GlblAllocPR(P1,P2) /* WINIGNORE - PR?
GlobalCompactPR	profwin.c	?^NATIVE DWORD GlobalCompactPR(P1) /* WINIGNORE - PR?
GlobalFreePR	profwin.c	?^NATIVE HANDLE GlobalFreePR(P1) /* WINIGNORE - PROF?
GlobalLockPR	profwin.c	?^NATIVE LPSTR GlobalLockPR(P1) /* WINIGNORE - PROFI?
GlobalReAllocPR	profwin.c	?^NATIVE HANDLE GlobalReAllocPR(P1,P2,P3) /* WINIGNO?
GlobalSizePR	profwin.c	?^NATIVE DWORD GlobalSizePR(P1) /* WINIGNORE - PROFI?
GlobalUnlockPR	profwin.c	?^NATIVE BOOL GlobalUnlockPR(P1) /* WINIGNORE - PROF?
GlobalWirePR	profwin2.c	?^NATIVE LPSTR GlobalWirePR(P1) /* WINIGNORE - PROFI?
GrayStringPR	profwin.c	?^NATIVE BOOL GrayStringPR(P1,P2,P3,P4,P5,P6,P7,P8,P?
HideCaretPR	profwin.c	?^NATIVE void HideCaretPR(P1) /* WINIGNORE - PROFILE?
HilitePicSel	pic3.c	?^EXPORT HilitePicSel(psel, prcwPic)$?
HilitePicSel1	pic3.c	?^EXPORT HilitePicSel1(psel, prcwPic, prcwClip)$?
HilitePicSel2	pic3.c	?^EXPORT HilitePicSel2(psel, prcwPic, ppicrc, prcwCl?
HpprStartProgressReport	prompt.c	?^struct PPR **HpprStartProgressReport (mst, rgw, nI?
HstCreate	prompt.c	?^CHAR (**HstCreate(st))[]$?
IFromPicBrcl	pic2.c	?^#define IFromPicBrcl(brcl) (((brcl) >= brclSingle ?
IidBinFromIstPrFeed	print.c	?^IidBinFromIstPrFeed(istPrFeed)$?
IlrFromYlXl	prvw2.c	?^int IlrFromYlXl(hpllr, yl, xl, pilrCol)$?
InitAbortCheck	prompt.c	?^InitAbortCheck ()$?
InitDsi	print.c	?^InitDsi()$?
InvalPrompt	prompt.c	?^InvalPrompt()$?
InvalidateRectPR	profwin.c	?^NATIVE void InvalidateRectPR(P1,P2,P3) /* WINIGNOR?
InvertRectPR	profwin.c	?^NATIVE int InvertRectPR(P1,P2) /* WINIGNORE - PROF?
IstPrFeedFromVpri	print.c	?^IstPrFeedFromVpri()$?
LAreaFromPrc	preview.c	?^long LAreaFromPrc(prc)$?
LMultDiv	prompt.c	?^long LMultDiv (l, lNumer, lDenom)$?
LineToPR	profwin.c	?^NATIVE BOOL LineToPR(P1,P2,P3) /* WINIGNORE - PROF?
LoadBitmapPR	profwin2.c	?^NATIVE HBITMAP LoadBitmapPR(P1,P2) /* WINIGNORE - ?
LoadLibraryPR	profwin.c	?^NATIVE HANDLE LoadLibraryPR(P1) /* WINIGNORE - PRO?
LpchIncr	pic3.c	?^LPCH LpchIncr(lpch, cch)$?
MapPt	preview.c	?^MapPt(ppt, prcFrom, prcTo)$?
MapRect	preview.c	?^MapRect(prcRect, prcFrom, prcTo)$?
MessageBoxPR	profwin.c	?^NATIVE int MessageBoxPR(P1,P2,P3,P4) /* WINIGNORE ?
MoveToPR	profwin.c	?^NATIVE DWORD MoveToPR(P1,P2,P3) /* WINIGNORE - PRO?
MoveWindowPR	profwin2.c	?^NATIVE void MoveWindowPR(P1,P2,P3,P4,P5,P6) /* WIN?
MsgBeepPR	profwin.c	?^NATIVE BOOL MsgBeepPR(P1) /* WINIGNORE - PROFILE o?
MxRoundMx	pic3.c	?^unsigned MxRoundMx( mx )$?
OpenClipboardPR	profwin.c	?^NATIVE BOOL OpenClipboardPR(P1) /* WINIGNORE - PRO?
OpenFilePR	profwin.c	?^NATIVE int OpenFilePR(P1,P2,P3) /* WINIGNORE - PRO?
OurYield	prompt.c	?^OurYield(fNotDde)$?
PageSectFromSt	print.c	?^PageSectFromSt(st, ppgn, pscn/*, fFirst*/)$?
PalgFromHgrpalgBalg	print1.c	?^struct ALG *PalgFromHgrpalgBalg(hgrpalg, balg)$?
PalgNextFromHgrpalgPbalg	print1.c	?^struct ALG *PalgNextFromHgrpalgPbalg(hgrpalg, pbal?
PatBltPR	profwin.c	?^NATIVE BOOL PatBltPR(P1,P2,P3,P4,P5,P6) /* WINIGNO?
PctDiffUl	pic3.c	?^int PctDiffUl( ul1, ul2 )$?
PdodMotherPrint	print.c	?^struct DOD *PdodMotherPrint(doc)$?
PeekMsgPR	profwin.c	?^NATIVE BOOL PeekMsgPR(P1,P2,P3,P4,P5) /* WINIGNORE?
PgPrvwWndProc	preview.c	?^EXPORT LONG FAR PASCAL PgPrvwWndProc(hwnd, message?
PicBrclFromI	pic2.c	?^#define PicBrclFromI(i)  ((((unsigned) (i)) == 0) ?
PictError	pic3.c	?^PictError (eid)$?
PopToHppr	prompt.c	?^EXPORT PopToHppr (hppr)$?
PostMsgPR	profwin.c	?^NATIVE BOOL PostMsgPR(P1,P2,P3,P4) /* WINIGNORE - ?
PrintDocCopies	print.c	?^PrintDocCopies(doc, cpFirst, cpLim, hppr)$?
PrintUlFaked	print.c	?^PrintUlFaked(hdc, xpFirst, yp, dxp, eto, lprcClip)?
PrintUlLine	print.c	?^PrintUlLine(hdc, xp, yp, eto, lprcClip, lpdxp, cch?
PrintXLine	print.c	?^PrintXLine( hdc, xpFirst, yp, xpLim )$?
ProgressReportPercent	prompt.c	?^ProgressReportPercent (hppr, lLow, lHigh, l, plNex?
PromptWndProc	prompt.c	?^EXPORT LONG FAR PASCAL PromptWndProc (hwnd, messag?
Prompt_Last	prompt.c	?^Prompt_Last(){}$?
PrvwF1	prvw2.c	?^void PrvwF1()$?
PrvwPageDown	preview.c	?^void PrvwPageDown()$?
PrvwPageScroll	preview.c	?^PrvwPageScroll(fUp)$?
PrvwPageUp	preview.c	?^void PrvwPageUp()$?
PrvwReturn	prvw2.c	?^void PrvwReturn()$?
PrvwShiftF1	prvw2.c	?^void PrvwShiftF1()$?
PrvwTab	prvw2.c	?^void PrvwTab()$?
PtPropRect	pictdrag.c	?^struct PT PtPropRect(ptMouse, pdrcCorner, prcLim)$?
ReleaseCapturePR	profwin.c	?^NATIVE void ReleaseCapturePR() /* WINIGNORE - PROF?
RestoreDCPR	profwin.c	?^NATIVE int RestoreDCPR(P1,P2) /* WINIGNORE - PROFI?
RestoreInputFocus	prompt.c	?^RestoreInputFocus ()$?
RoundPzaTo16ths	prvw2.c	?^RoundPzaTo16ths(pza)$?
RunDriverDlg	print2.c	?^RunDriverDlg(pchPrinter, pchPort, pchDriver)$?
SaveDCPR	profwin.c	?^NATIVE short SaveDCPR(P1) /* WINIGNORE - PROFILE o?
ScaleZtForScreen	pic.c	?^ScaleZtForScreen(pDim, cDim)$?
ScrollDCPR	profwin.c	?^NATIVE BOOL ScrollDCPR(P1,P2,P3,P4,P5,P6,P7) /* WI?
ScrollWindowPR	profwin.c	?^NATIVE void ScrollWindowPR(P1,P2,P3,P4,P5) /* WINI?
SelectClipRgnPR	profwin.c	?^NATIVE int SelectClipRgnPR(P1,P2) /* WINIGNORE - P?
SelectObjectPR	profwin.c	?^NATIVE HANDLE SelectObjectPR(P1,P2) /* WINIGNORE -?
SelectPrvwFont	preview.c	?^EXPORT SelectPrvwFont(phfont, phdc)$?
SendMsgPR	profwin.c	?^NATIVE long SendMsgPR(P1,P2,P3,P4) /* WINIGNORE - ?
SetAbsPos	prvw2.c	?^SetAbsPos(hdc, iaor, prcNew, prcPage)$?
SetActiveWindowPR	profwin.c	?^NATIVE HWND SetActiveWindowPR(P1) /* WINIGNORE - P?
SetBkColorPR	profwin2.c	?^NATIVE DWORD SetBkColorPR(P1,P2) /* WINIGNORE - PR?
SetBkModePR	profwin2.c	?^NATIVE SetBkModePR(P1,P2) /* WINIGNORE - PROFILE o?
SetCapturePR	profwin.c	?^NATIVE HWND SetCapturePR(P1) /* WINIGNORE - PROFIL?
SetClipboardDataPR	profwin.c	?^NATIVE HANDLE SetClipboardDataPR(P1,P2) /* WINIGNO?
SetCursorPR	profwin.c	?^NATIVE HCURSOR SetCursorPR(P1) /* WINIGNORE - PROF?
SetFocusPR	profwin.c	?^NATIVE HWND SetFocusPR(P1) /* WINIGNORE - PROFILE ?
SetHdrFtr	prvw2.c	?^SetHdrFtr(hdc, pt, fHdr, fFree)$?
SetMapperFlagsPR	profwin2.c	?^NATIVE DWORD SetMapperFlagsPR(P1,P2) /* WINIGNORE ?
SetMenuPR	profwin.c	?^NATIVE BOOL SetMenuPR(P1,P2) /* WINIGNORE - PROFIL?
SetModalFocusHwnd	prompt.c	?^SetModalFocusHwnd (hwnd)$?
SetPageRcs	preview.c	?^SetPageRcs()$?
SetPromptMst	prompt.c	?^SetPromptMst (mst, pdc)$?
SetPromptRgwMst	prompt.c	?^SetPromptRgwMst (mst, rgw, pdc)$?
SetPromptSt	prompt.c	?^SetPromptSt (st, pdc)$?
SetPromptWMst	prompt.c	?^SetPromptWMst (mst, w, pdc)$?
SetSectLnbcHeight	print1.c	?^SetSectLnbcHeight(hpllnbc, dypSect, ilnbcSectStart?
SetTextColorPR	profwin2.c	?^NATIVE DWORD SetTextColorPR(P1,P2) /* WINIGNORE - ?
SetUpPrintPrompt	print.c	?^SetUpPrintPrompt(doc, ist, pgn, phppr, fFirst)$?
SetVdxpGutter	preview.c	?^SetVdxpGutter(dxaGutter)$?
SetWindowPosPR	profwin2.c	?^NATIVE void SetWindowPosPR(P1,P2,P3,P4,P5,P6,P7) /?
SetfEnhanceEdlWw	pic3.c	?^SetfEnhanceEdlWw(ww)$?
SetupPrinter	print2.c	?^SetupPrinter(szPrinter)$?
ShowAreas	preview.c	?^ShowAreas(hdc, fTurningOn)$?
ShowCaretPR	profwin.c	?^NATIVE void ShowCaretPR(P1) /* WINIGNORE - PROFILE?
ShowCursorPR	profwin.c	?^NATIVE int ShowCursorPR(P1) /* WINIGNORE - PROFILE?
ShowOldWindows	preview.c	?^ShowOldWindows(wCmdShow)$?
ShowPgnP	preview.c	?^ShowPgnP(ipgd, fOnePage)$?
ShowPicSize	pictdrag.c	?^ShowPicSize (prcDrag, prcBasisPic, prcScale, ircs,?
ShowWindowPR	profwin.c	?^NATIVE BOOL ShowWindowPR(P1,P2) /* WINIGNORE - PRO?
ShowXaYaFromPt	prvw2.c	?^ShowXaYaFromPt(hdc, pt, grpfDrag, fTellCBT)$?
SizePrvw	preview.c	?^SizePrvw(hwnd, dxp, dyp)$?
StopProgressReport	prompt.c	?^StopProgressReport (hppr, pdc)$?
StretchBltPR	profwin.c	?^NATIVE BOOL StretchBltPR(P1,P2,P3,P4,P5,P6,P7,P8,P?
TerminateAbortCheck	prompt.c	?^TerminateAbortCheck (pdc)$?
TextOutPR	profwin.c	?^NATIVE BOOL TextOutPR(P1,P2,P3,P4,P5) /* WINIGNORE?
TmcDoPrintDialog	print.c	?^TmcDoPrintDialog (pcmb, fPrintMerge, fFileFind)$?
TrackMouseXaYa	prvw2.c	?^TrackMouseXaYa(hdc, grpfShow, ppt)$?
TranslateMessagePR	profwin.c	?^NATIVE BOOL TranslateMessagePR(P1) /* WINIGNORE - ?
UnInitPrvw	preview.c	?^UnInitPrvw(fNukeKmp)$?
UpdateDsi	print.c	?^UpdateDsi()$?
UpdateWindowPR	profwin.c	?^NATIVE void UpdateWindowPR(P1) /* WINIGNORE - PROF?
ValidateRectPR	profwin.c	?^NATIVE void ValidateRectPR(P1,P2) /* WINIGNORE - P?
WAppModalHwnd	prompt.c	?^WAppModalHwnd (hwnd, mmo)$?
WElPrvwBoundaries	prvw2.c	?^EL WElPrvwBoundaries(fOn)$?
WElPrvwPages	prvw2.c	?^EL WElPrvwPages(wPages)$?
WListChgPr	print2.c	?^EXPORT WORD WListChgPr(tmm, sz, isz, filler, tmc, ?
WListPrFeed	print.c	?^EXPORT WORD WListPrFeed(tmm, sz, isz, filler, tmc,?
WriteProfileStringPR	profwin.c	?^NATIVE BOOL WriteProfileStringPR(P1,P2,P3) /* WINI?
XaCrop	pictdrag.c	?^XaCrop(xp, prcBasisPic, iCropOpposite)$?
XpScale	pictdrag.c	?^#define XpScale() (umax(umin (UMultDiv((prcDrag->x?
YaCrop	pictdrag.c	?^YaCrop(yp, prcBasisPic, iCropOpposite)$?
YieldPR	profwin2.c	?^NATIVE BOOL YieldPR() /* WINIGNORE - PROFILE only ?
YpFromCp	preview.c	?^YpFromCp(cp)$?
YpScale	pictdrag.c	?^#define YpScale() (umax(umin (UMultDiv((prcDrag->y?
AppDestroy	quit.c	?^AppDestroy()$?
CbToWriteH	quit.c	?^CbToWriteH(h)$?
CfcePackRgfce	quit.c	?^CfcePackRgfce()$?
CleanUpForExit	quit.c	?^CleanUpForExit()$?
CmdFileExit	quit.c	?^CMD CmdFileExit(pcmb)$?
CommitSuicide	quit.c	?^CommitSuicide(fn, sz)$?
DeleteGDIHandles	quit.c	?^DeleteGDIHandles()$?
FAppClose	quit.c	?^EL BOOL FAppClose(ac)$?
FConfirmSaveAllDocs	quit.c	?^FConfirmSaveAllDocs(ac)$?
FQueryEndSession	quit.c	?^FQueryEndSession(ac)$?
FWriteCbToOsfn	quit.c	?^FWriteCbToOsfn(osfn, cb, pch)$?
FWriteHCbToOsfn	quit.c	?^FWriteHCbToOsfn(osfn, cb, h)$?
FWriteHqCbToOsfn	quit.c	?^FWriteHqCbToOsfn( osfn, cb, hq )$?
KillTempFiles	quit.c	?^KillTempFiles( fEndSession )$?
OurExitWindows	quit.c	?^EXPORT OurExitWindows()$?
QuitExit	quit.c	?^QuitExit()$?
RemovePlaybackHook	quit.c	?^RemovePlaybackHook ()$?
RunAtmCloseOnAllDocs	quit.c	?^RunAtmCloseOnAllDocs()$?
SaveAllHeaders	quit.c	?^SaveAllHeaders()$?
WriteUserState	quit.c	?^WriteUserState()$?
AddChXeTc	rtfrare.c	?^AddChXeTc(doc, ch, pchStart, ppch, cchMax, pchp)$?
AddKeyKtW	raremsg.c	?^AddKeyKtW(hkmp, kc, kt, w)$?
AddLooksKeys	raremsg.c	?^AddLooksKeys(hkmpSearch, hkmpAdd, ilcdMaxAdd)$?
AddRulerGrpprl	rulrib.c	?^AddRulerGrpprl (hrsd, prl, cb)$?
AddToVrac	recorder.c	?^AddToVrac(racop, sty, dSty)$?
AdjustStyNameDxw	raremsg.c	?^AdjustStyNameDxw(hmwd, pdxw)$?
AppSize	raremsg.c	?^AppSize(fShrink)$?
AppWndProcRare	raremsg.c	?^long AppWndProcRare(hwnd, message, wParam, lParam)?
AppendRgchToFnRtf	rtfout2.c	?^void AppendRgchToFnRtf(prarf, pch, cch)$?
AppendRgchToHandleRtf	rtfout2.c	?^void AppendRgchToHandleRtf(prhpcchw, pch, cch)$?
ApplyPropChange	rtfin2.c	?^ApplyPropChange(irrbProp, fHaveVal, val, hribl)$?
ApplyStcEndOfDoc	rtfin2.c	?^ApplyStcEndOfDoc(doc, stc)$?
AutoRenumParas	renum.c	?^AutoRenumParas (cpFirst, cpLim, fAll, rpfNew)$?
BatchModeError	raremsg.c	?^BatchModeError(sz1, sz2, n1, n2)$?
BltRulerMark	rulerdrw.c	?^BltRulerMark (hdc, preb, xp, imk, ms)$?
BltRulerMark2	rulerdrw.c	?^BltRulerMark2 (hdc, preb, xp, imk, ms)$?
BltRulerMark3	rulerdrw.c	?^BltRulerMark3 (hdc, preb, xp, imk, ms, fErase)$?
BuildReplaceGrpprls	replace.c	?^BuildReplaceGrpprls(prpp)$?
C_ChMapSpecChar	rtfin.c	?^HANDNATIVE char C_ChMapSpecChar(ch, chs)$?
C_FSearchRgrsym	rtfsubs.c	?^HANDNATIVE int C_FSearchRgrsym(sz, pirsym)$?
C_IbstFindSzFfn	res.c	?^HANDNATIVE C_IbstFindSzFfn(hsttb, pffn)$?
C_PchSzRtfMove	rtfsubs.c	?^HANDNATIVE char *C_PchSzRtfMove(iszRtf, pch)$?
C_PdodDoc	res.c	?^struct DOD *C_PdodDoc(doc)$?
C_RtfIn	rtfin.c	?^HANDNATIVE C_RtfIn(hribl, pch, cch)$?
CacheParaRUL	rulrib.c	?^CacheParaRUL(doc,cp)$?
CbOfHplc	res.c	?^uns CbOfHplc(hplc)$?
CchCopyLpszCchMax	res.c	?^int CchCopyLpszCchMax(lpch1, lpch2, cchMax)$?
CchCopySz	res.c	?^int CchCopySz(pch1, pch2)$?
CchHpsToPpch	res.c	?^int CchHpsToPpch(hps, ppch)$?
CchLongToPpch	res.c	?^int CchLongToPpch(l, ppch)$?
CchLpszLen	res.c	?^CchLpszLen(lpsz)$?
CchPrlChangeOneTab	rulrib.c	?^CchPrlChangeOneTab (prl, dxaIns, dxaDel, tbd, dxaC?
CchRTFFormatDttmPch	rtfout2.c	?^CchRTFFormatDttmPch (pdttm, pchFormat)$?
CchStripString	res.c	?^int CchStripString(pch, cch)$?
CchSzItlDtm	rtftrans.c	?^int CchSzItlDtm(sz, rgch, fLocal)$?
CchSzItlNum	rtftrans.c	?^int CchSzItlNum(sz, rgch, fLocal)$?
ChItlSw	rtftrans.c	?^CHAR ChItlSw(flt, chSw, fLocal)$?
ChSpFetchSw	rtftrans.c	?^CHAR ChSpFetchSw(pffb, pcp, fSys)$?
ChUpper	res.c	?^EXPORT ChUpper(ch)$?
ChUpperLookup	res.c	?^EXPORT ChUpperLookup(ch)$?
ChangeAll	replace.c	?^BOOL ChangeAll()$?
ChangeCursor	res.c	?^ChangeCursor(fExact)$?
ChangeRulerImk	rulrib.c	?^ChangeRulerImk (hrsd, imk, i, xa, xaOld)$?
ChangeRulerTab	rulrib.c	?^ChangeRulerTab (hrsd, dxaIns, dxaDel, tbd, dxaClos?
CheckHkmp	raremsg.c	?^CheckHkmp(hkmp)$?
CheckRulerGrpprlSize	rulrib.c	?^CheckRulerGrpprlSize ()$?
ChngToRdsFld	rtfin2.c	?^ChngToRdsFld(hribl, val)$?
ChngToRdsFldIT	rtfin2.c	?^ChngToRdsFldIT(hribl, val)$?
ChngToRdsFldRslt	rtfin2.c	?^ChngToRdsFldRslt(hribl, val)$?
ChngToRdsGrid	rtfrare.c	?^ChngToRdsGrid(hribl, val)$?
ChngToRdsHdr	rtfin2.c	?^ChngToRdsHdr(hribl, val)$?
ChngToRdsNewStd	rtfin2.c	?^ChngToRdsNewStd(hribl, val)$?
ChngToRdsPic	rtfrare.c	?^ChngToRdsPic(hribl, val)$?
ChngToRdsPrivate1	rtfrare.c	?^ChngToRdsPrivate1(hribl, val)$?
ChngToRdsRtf	rtfin2.c	?^ChngToRdsRtf(hribl, val)$?
ChngToRdsStylesheet	rtfin2.c	?^ChngToRdsStylesheet(hribl, val)$?
ChngToRdsXeRT	rtfrare.c	?^ChngToRdsXeRT(hribl, val)$?
ChngToRdsXeTc	rtfrare.c	?^ChngToRdsXeTc(hribl, val)$?
CloseQuoteXeTc	rtfrare.c	?^CloseQuoteXeTc (hribl, pcpInsert)$?
CmdDumpKeymap	raremsg.c	?^CMD CmdDumpKeymap(pcmb)$?
CmdEditRuler	rulrib.c	?^CMD CmdEditRuler (pcmb)$?
CmdRenumParas	renum.c	?^CMD CmdRenumParas(pcmb)$?
CmdReplace	replace.c	?^CMD CmdReplace(pcmb)$?
CmdReplaceChar	replace.c	?^CMD CmdReplaceChar(pcmb)$?
CmdReplacePara	replace.c	?^CMD CmdReplacePara(pcmb)$?
CmdRulerMode	rulrib.c	?^CMD CmdRulerMode(pcmb)$?
CpDoReplace	replace.c	?^CP CpDoReplace(cpMatchFirst, cpMatchLim, prcb, pfD?
DchTextToPlainText	rtfout2.c	?^int DchTextToPlainText(ppchDest, ppchSrc, cchSrc, ?
DeskTopWndProc	raremsg.c	?^EXPORT long FAR PASCAL DeskTopWndProc(hwnd, messag?
DiDirtyDoc	res.c	?^int DiDirtyDoc(doc)$?
DirtyRibbonFontLists	rulrib.c	?^DirtyRibbonFontLists()$?
DoPageNum	rtfin2.c	?^DoPageNum(hribl, cp)$?
DoQuoteForBinCode	rtfin2.c	?^DoQuoteForBinCode(hribl, val)$?
DoRecScroll	recorder.c	?^DoRecScroll(racop, sb, c)$?
DoRtfParaEnd	rtfin2.c	?^DoRtfParaEnd(hribl, val)$?
DoRtfSectEnd	rtfin2.c	?^DoRtfSectEnd(hribl, val)$?
DoRtfTab	rtfin2.c	?^DoRtfTab(hribl, val)$?
DoRtfTableRowEnd	rtfin2.c	?^DoRtfTableRowEnd(hribl, val)$?
DoRulerCommand	rulrib.c	?^DoRulerCommand(hrsd, idRul)$?
DoRulerDblClick	rulrib.c	?^DoRulerDblClick(pt, fMark)$?
DoSpecDocProps	rtfrare.c	?^DoSpecDocProps(hribl)$?
DoStackTrace	ripaux.c	?^void DoStackTrace(sz)$?
DocBaseWw	res.c	?^int DocBaseWw(ww)$?
DocCreateRtf	rtfin2.c	?^DocCreateRtf(fn)$?
DocCreateRtf1	rtfin2.c	?^DocCreateRtf1(fn, hribl, fFail)$?
DragMark	rulrib.c	?^DragMark (hrsd, ptMouse)$?
DrawMinorTicks	rulerdrw.c	?^DrawMinorTicks (hdc, xp, yp, dyp, dxa, n)$?
DrawRulerCursor	rulrib.c	?^DrawRulerCursor (hdc, preb, xa)$?
DrawRulerMarks	rulerdrw.c	?^DrawRulerMarks (hdc, preb, fErased)$?
DrawRulerScale	rulerdrw.c	?^DrawRulerScale (hdc, preb, fErased)$?
DrawRulerScl2	rulerdrw.c	?^DrawRulerScl2 (hdc, preb, fErased)$?
DrawRulerScl3	rulerdrw.c	?^DrawRulerScl3(hdc, preb, fErased)$?
DrawRulerTicks	rulerdrw.c	?^DrawRulerTicks(hdc, hrsd, dxa, dxp, ut, xpRight, f?
DtrNum	rtfout2.c	?^DtrNum(pdtr, pdttm)  /* convert internal date/time?
DttmFromPdtr	rtfrare.c	?^struct DTTM DttmFromPdtr(pdtr)	/* convert struct t?
DumpBkmks	rtfout2.c	?^DumpBkmks(doc, cpCur, pbkmkRtf, prebl, ppch, ppchO?
DumpParaProps	rtfout2.c	?^NATIVE DumpParaProps(prebl, ppch, ppap, pfBracketP?
DumpStshNml	rtfrare.c	?^DumpStshNml(pstsh, hsttbPape)$?
EndKeyMode	raremsg.c	?^EndKeyMode()$?
EndLongOp	res.c	?^EndLongOp(fAll)$?
EnsureCursorInvisibleMouseless	res.c	?^EnsureCursorInvisibleMouseless()$?
EnsureCursorVisible	res.c	?^EnsureCursorVisible()$?
EnsureRtfChEop	rtfout2.c	?^EnsureRtfChEop(prebl, cb)$?
FAddArgTrfl	rtftrans.c	?^BOOL FAddArgTrfl(pffb, doc, sz, cch, ptrfl)$?
FAddSwTrfl	rtftrans.c	?^BOOL FAddSwTrfl(pffb, doc, chSw, cp, ptrfl)$?
FAlpha	res.c	?^FAlpha(ch)$?
FAlphaNum	res.c	?^FAlphaNum(ch)$?
FAssignFnFcForStReplace	replace.c	?^BOOL FAssignFnFcForStReplace(prcb, doc, cpMatchFir?
FAssureSdmInit	raremsg.c	?^FAssureSdmInit()$?
FCancelClose	raremsg.c	?^FCancelClose()$?
FChangeOne	replace.c	?^BOOL FChangeOne()$?
FChngSizeHCbProc	res.c	?^EXPORT FChngSizeHCbProc(szFile, nLine, h, cb, fShr?
FChngSizePhqLcb	res.c	?^EXPORT FChngSizePhqLcb (phq, lcb)$?
FCompChCh	rtftrans.c	?^FCompChCh(ch1, ch2)$?
FCopyKmpToKmp	raremsg.c	?^FCopyKmpToKmp(hkmpSrc, hkmpDest)$?
FDigit	res.c	?^FDigit(ch)$?
FDlgConfirmRepl	replace.c	?^BOOL FDlgConfirmRepl(dlm, tmc, wNew, wOld, wParam)?
FDlgRenumParas	renum.c	?^BOOL FDlgRenumParas(dlm, tmc, wNew, wOld, wParam)$?
FEmitForChpx	rtfout2.c	?^FEmitForChpx(pchpx, irrb)$?
FEnsureRtfStcDefined	rtfrare.c	?^FEnsureRtfStcDefined(doc, stc, pcstcStd)$?
FFedtClear	raremsg.c	?^BOOL FFedtClear(phfedt)$?
FFedtCopy	raremsg.c	?^BOOL FFedtCopy(phfedt)$?
FFedtPaste	raremsg.c	?^BOOL FFedtPaste(phfedt)$?
FFillBuffer	renum.c	?^FFillBuffer(sz, cp, pcch, pclev, prpf)$?
FFillCabRenum	renum.c	?^FFillCabRenum(hcab)$?
FFindSeg	ripaux.c	?^EXPORT FFindSeg(CSvalue, szSymFile, szSegName)$?
FFindSymbName	ripaux.c	?^FFindSymbName(szFileName, szSymbol)$?
FFinishFtnAtn	rtfin.c	?^FFinishFtnAtn(hribl, edc)$?
FFormatTableHribl	rtfrare.c	?^BOOL FFormatTableHribl(hribl)$?
FGetConstSymb	ripaux.c	?^EXPORT FGetConstSymb(Const, szSymFile, szConstName?
FGetPcodeSegName	ripaux.c	?^EXPORT FGetPcodeSegName(iPcodeSeg, szSegName)$?
FGetSegSymb	ripaux.c	?^EXPORT FGetSegSymb(Seg, szSymFile, szSegName)$?
FGetSymbol	ripaux.c	?^EXPORT FGetSymbol(Offset, szSymbol)$?
FInfixCh	rtftrans.c	?^BOOL FInfixCh(ch)$?
FInitRSB	rsb.c	?^FInitRSB()$?
FInsertPapsForReplace	replace.c	?^BOOL FInsertPapsForReplace(doc, stReplace, fc)$?
FInvalidRPNumTmc	renum.c	?^FInvalidRPNumTmc(tmc)$?
FIsLCRoman	renum.c	?^FIsLCRoman(ch)$?
FIsPunc	renum.c	?^FIsPunc(ch)$?
FIsUCRoman	renum.c	?^FIsUCRoman(ch)$?
FLower	res.c	?^HANDNATIVE FLower(ch)$?
FNeNcRgch	res.c	?^FNeNcRgch(pch1, pch2, cch)$?
FNeNcSt	res.c	?^FNeNcSt(st1, st2)$?
FNeNcSz	res.c	?^EXPORT FNeNcSz(sz1, sz2)$?
FNextMatch	replace.c	?^FNextMatch(fNoReplace)$?
FPointNearMark	rulrib.c	?^FPointNearMark (xa1, xa2)$?
FPropToRtfSpecMacPlus	rtfout2.c	?^FPropToRtfSpecMacPlus(pprop, prrb, irrb, pval, ppc?
FRareRoman	renum.c	?^FRareRoman(pch)$?
FReadRTF	rtfrare.c	?^FReadRTF (docDest, cf, hData, cbInitial)$?
FRecInsRgch	recorder.c	?^FRecInsRgch(pch, cch)$?
FRecordCab	recorder.c	?^BOOL FRecordCab(hcab, hid, tmc, fDismiss)$?
FRecordableBcm	recorder.c	?^FRecordableBcm(bcm)$?
FReplNewText	rtftrans.c	?^BOOL FReplNewText(ptrfl)$?
FRetryLmemError	res.c	?^EXPORT FRetryLmemError(merr, sb, cbNew, cRetry)$?
FRetrySbError	raremsg.c	?^BOOL FRetrySbError(merr, sb, lcbNew, cretry)$?
FRetrySdmError	raremsg.c	?^BOOL FRetrySdmError(w, hdlg, sev)$?
FRgbZero	rulerdrw.c	?^FRgbZero (rgb, ibMax)$?
FSearchFtcmap	rtfin.c	?^int FSearchFtcmap(hftcmap, ftcFrom, pftcTo, fAdd)$?
FSkipWhiteSpace	renum.c	?^FSkipWhiteSpace(pcpStart, pcpCur)$?
FSpFetchArgText	rtftrans.c	?^BOOL FSpFetchArgText (pffb)$?
FStackRtfState	rtfin.c	?^EXPORT FStackRtfState(hribl)$?
FStcDefined	res.c	?^FStcDefined(doc, stc)$?
FTableFromSideBySide	rtfrare.c	?^FTableFromSideBySide(pcaSel, fn)$?
FTranslFields	rtftrans.c	?^BOOL FTranslFields (doc, fLocal)$?
FTranslFn	rtftrans.c	?^BOOL FTranslFn(szOpt, ppchLead, pchFollow, pfnCchS?
FUpper	res.c	?^HANDNATIVE FUpper(ch)$?
FVanishXeTc	rtfrare.c	?^FVanishXeTc(hribl, fVanish)$?
FillRenumList	renum.c	?^FillRenumList(rpf, rpfMac, szFormat)$?
FinishXeTc	rtfrare.c	?^FinishXeTc(hribl)$?
FldsPopFlt	rtfout2.c	?^FldsPopFlt(rgfltStack, piTop)$?
FldsStackFlt	rtfout2.c	?^FldsStackFlt(fldsIn, flt, rgfltStack, piTop)$?
FlushRebl	rtfout2.c	?^FlushRebl(prebl, ppch)$?
FlushReblPch	rtfout2.c	?^FlushReblPch(prebl, pch, pchStart)$?
FlushRecIns	recorder.c	?^FlushRecIns()$?
FlushRulerSprms	rulrib.c	?^EXPORT FlushRulerSprms ()$?
FlushVrac	recorder.c	?^FlushVrac()$?
FreeEmmSb	res.c	?^FreeEmmSb(sb)$?
FreeHq	res.c	?^EXPORT FreeHq(hq)$?
FreeHribl	rtfin2.c	?^FreeHribl(hribl)$?
FreePh	res.c	?^FreePh(ph)$?
FreePreb	rulerdrw.c	?^FreePreb (preb)$?
GenStatement	recorder.c	?^GenStatement(bcm)$?
GetDeskTopPrc	raremsg.c	?^GetDeskTopPrc( prc )$?
GetExeHead	ripaux.c	?^GetExeHead()$?
GetFontFamily	rtfout2.c	?^GetFontFamily(ibst, pff)$?
GetFontName	rtfout2.c	?^GetFontName(ibst, st)$?
GetLongOpState	res.c	?^GetLongOpState (pw)$?
GetNonPaneRgdyp	raremsg.c	?^GetNonPaneRgdyp(hmwd, rgdyp)$?
GetRrb	rtfsubs.c	?^GetRrb(irrbProp, prrb)$?
GetSnMac	ripaux.c	?^EXPORT GetSnMac()$?
GetSzFromSttb	res.c	?^GetSzFromSttb(hsttb, i, sz)$?
GetXpsForHwwd	rulerdrw.c	?^GetXpsForHwwd(hwwd, hrsd, pxpLeft, pxpZero, pxpRig?
GlobalAlloc2	res.c	?^HANDLE GlobalAlloc2(wFlags, dwBytes)$?
HAllocateCbProc	res.c	?^HAllocateCbProc(szFile, nLine, cb)$?
HFedtStripText	raremsg.c	?^HANDLE HFedtStripText(hfedt, hdata)$?
HFromIbmds0	rcinit.c	?^HANDLE HFromIbmds0(i)$?
HFromIbmds1	rcbmp1.c	?^HANDLE HFromIbmds1(i)$?
HFromIbmds13	rcbmp13.c	?^HANDLE HFromIbmds13(hdc, i)$?
HFromIbmds2	rcbmp2.c	?^HANDLE HFromIbmds2(i)$?
HFromIbmds23	rcbmp23.c	?^HANDLE HFromIbmds23(hdc, i)$?
HFromIbmds3	rcbmp3.c	?^HANDLE HFromIbmds3(i)$?
HFromIbmds4	rcbmp4.c	?^HANDLE HFromIbmds4(i)$?
HFromIbmds43	rcbmp43.c	?^HANDLE HFromIbmds43(hdc, i)$?
HLoadRes0	rcinit.c	?^HANDLE HLoadRes0(i)$?
HOpenDbgScreen	ripaux.c	?^EXPORT HOpenDbgScreen()$?
HOpenFileSearch	ripaux.c	?^HOpenFileSearch (szFile, pofstruct, of)$?
HOpenOutFile	ripaux.c	?^EXPORT HOpenOutFile()$?
HWriteRTF	rtfout2.c	?^HWriteRTF (doc, cpFirst, cpLim, cbInitial)$?
HqAllocLcb	res.c	?^EXPORT HQ HqAllocLcb (lcb)$?
HriblCreateDoc	rtfin2.c	?^struct RIBL  **HriblCreateDoc(docIn)$?
HwwdWw	res.c	?^HANDNATIVE struct WWD **HwwdWw(ww)$?
IScanLprgb	res.c	?^NATIVE IScanLprgb( lprgb, b, ibMax ) /* WINIGNORE ?
IScanLprgw	res.c	?^HANDNATIVE IScanLprgw( lprgw, w, iwMax )$?
IbProcRibbon	rulerdrw.c	?^IbProcRibbon(hwnd, ibm, iibb, wParam, lParam)$?
IbProcRibbonCmd	rulrib.c	?^IbProcRibbonCmd(hwnd, ibm, iibb, wParam, lParam)$?
IbProcRuler	rulerdrw.c	?^IbProcRuler(hwndRuler, ibm, idRul, wParam, lParam)?
IbProcRulerCmd	rulrib.c	?^IbProcRulerCmd(hwndRuler, hrsd, ibm, idRul, wParam?
IbstFontFromFtcDoc	res.c	?^IbstFontFromFtcDoc (ftc, doc)$?
IcpFirstBkmk	rtfout.c	?^IcpFirstBkmk(hplc, cpFirst, pcp)$?
InitReplaceFormatting	replace.c	?^InitReplaceFormatting()$?
InsDelTab	rulrib.c	?^InsDelTab(fIns)$?
InsertRgchRec	recorder.c	?^InsertRgchRec(pch, cch)$?
InsertXeTcText	rtfrare.c	?^InsertXeTcText(hribl, docHold, cpFirst, cpLim)$?
InvalSelCurProps	res.c	?^InvalSelCurProps (fSelChanged)$?
InvalStyle	rulrib.c	?^InvalStyle()$?
InvalidateFontPointLH	rulrib.c	?^InvalidateFontPointLH()$?
Isgn	res.c	?^Isgn(i)$?
LFromSzNumber	rtfrare.c	?^long LFromSzNumber(szNumber)$?
LValGetIag	recorder.c	?^#define LValGetIag(hcab, iag) \\$?
LoadPreviewFont	raremsg.c	?^LoadPreviewFont()$?
MoveCursorToXa	rulrib.c	?^MoveCursorToXa (preb, xa)$?
MoveRulerLeftRight	rulrib.c	?^MoveRulerLeftRight(fRight, fLarge)$?
MyLock	ripaux.c	?^#define MyLock(ps)      HIWORD(GlobalHandle(ps))$?
NFromLetter	renum.c	?^NFromLetter(szLetter)$?
NFromRoman	renum.c	?^NFromRoman(szRoman)$?
OurGlobalAlloc	res.c	?^HANDLE OurGlobalAlloc(wFlags, dwBytes)$?
OurGlobalReAlloc	res.c	?^HANDLE OurGlobalReAlloc(hMem, dwBytes, wFlags)$?
OutHdrs	rtfout2.c	?^OutHdrs(prebl, docHdr, ihddMin, ihddMac, grpfIhdt,?
PInPl	res.c	?^HANDNATIVE char  *PInPl(hpl, i)$?
PaintRuler	rulerdrw.c	?^PaintRuler (hrsd, rpc)$?
PapForEndSecPara	rtfin2.c	?^PapForEndSecPara(hribl, ppap)$?
PatBltBorder	rsb.c	?^PatBltBorder( hdc, prc, fVert, fTop )$?
PatBltVertLine	rulerdrw.c	?^PatBltVertLine(hdc, xp, yp, dyp)$?
PbmsFromFlags	rsb.c	?^struct BMS *PbmsFromFlags( fVert, fTopLeft )$?
PchInSt	res.c	?^CHAR *PchInSt(st, ch)$?
PerformRtfTestSuite	rtfsubs.c	?^PerformRtfTestSuite (chTest, stFile)$?
PmwdWw	res.c	?^HANDNATIVE struct MWD *PmwdWw(ww)$?
PopRtfState	rtfin.c	?^PopRtfState(hribl)$?
PositionMarkWindow	rulerdrw.c	?^PositionMarkWindow(hwndRuler)$?
PrcSet	res.c	?^struct RC *PrcSet( prc, xpLeft, ypTop, xpRight, yp?
PrebInitPrebHrsd	rulerdrw.c	?^struct REB * PrebInitPrebHrsd (preb, hrsd, fGlobal?
PropToRtf	rtfout2.c	?^PropToRtf(prebl, pprop, irrbFirst, irrbLim, pfnFEm?
PsbhiOfSb	res.c	?^struct SBHI *PsbhiOfSb(sb, pisbhi)$?
PselActive	res.c	?^struct SEL *PselActive()$?
PstFromSttb	res.c	?^HANDNATIVE char *PstFromSttb(hsttb, i)$?
PwwdOther	res.c	?^struct WWD *PwwdOther(ww)$?
QszUpper	res.c	?^EXPORT QszUpper(pch)$?
REDelete	rulrib.c	?^void REDelete()$?
REEnd	rulrib.c	?^void REEnd()$?
REEscape	rulrib.c	?^void REEscape()$?
REGetHelp	rulrib.c	?^void REGetHelp()$?
REHome	rulrib.c	?^void REHome()$?
REIndLeft	rulrib.c	?^void REIndLeft()$?
REIndLeft1	rulrib.c	?^void REIndLeft1()$?
REIndRight	rulrib.c	?^void REIndRight()$?
REInsert	rulrib.c	?^void REInsert()$?
RELeft	rulrib.c	?^void RELeft()$?
REReturn	rulrib.c	?^void REReturn()$?
RERight	rulrib.c	?^void RERight()$?
RETab	rulrib.c	?^void RETab()$?
RETabCenter	rulrib.c	?^void RETabCenter()$?
RETabDecimal	rulrib.c	?^void RETabDecimal()$?
RETabLeft	rulrib.c	?^void RETabLeft()$?
RETabRight	rulrib.c	?^void RETabRight()$?
RSBComputeGrpzpp	rsb.c	?^RSBComputeGrpzpp( hwnd, sps, pgrpzpp )$?
RSBHit	rsb.c	?^RSBHit( hwnd, ptHit )$?
RSBInvertForTrack	rsb.c	?^RSBInvertForTrack( hwnd, hdc, prc, izpp )$?
RSBPaint	rsb.c	?^RSBPaint(hwnd)$?
RSBPaintAll	rsb.c	?^RSBPaintAll( hwnd )$?
RSBPaintBms	rsb.c	?^RSBPaintBms( hdc, pbms, prc )$?
RSBPaintCore	rsb.c	?^RSBPaintCore( hwnd, hdc, sps, prcPaint )$?
RSBPaintIzpp	rsb.c	?^RSBPaintIzpp( hwnd, hdc, pzpp, izpp )$?
RSBSetDCColors	rsb.c	?^RSBSetDCColors(hdc)$?
RSBSetSps	rsb.c	?^RSBSetSps( hwnd, spsNew )$?
RSBSetSpsLim	rsb.c	?^RSBSetSpsLim( hwnd, spsLim )$?
RSBSmartUpdate	rsb.c	?^RSBSmartUpdate(hwnd, spsNew)$?
RSBWndProc	rsb.c	?^long EXPORT FAR PASCAL RSBWndProc(hwnd, message, w?
RSBZppToRc	rsb.c	?^RSBZppToRc( hwnd, pzpp, prc )$?
RecordBksp	recorder.c	?^RecordBksp(ptlv)$?
RecordComma	recorder.c	?^RecordComma()$?
RecordCursor	recorder.c	?^RecordCursor(sty, dSty, fSelect)$?
RecordDelete	recorder.c	?^RecordDelete(sty, dSty)$?
RecordDocClose	recorder.c	?^RecordDocClose()$?
RecordEop	recorder.c	?^RecordEop()$?
RecordInsPara	recorder.c	?^RecordInsPara(ichInsert, ptlv)$?
RecordInsert	recorder.c	?^RecordInsert(ichInsert, ptlv)$?
RecordInt	recorder.c	?^RecordInt(i)$?
RecordLooks	raremsg.c	?^RecordLooks(ilcd)$?
RecordQuotedRgch	recorder.c	?^RecordQuotedRgch(rgch, cch)$?
RecordQuotedSt	recorder.c	?^RecordQuotedSt(st)$?
RecordRulerTab	recorder.c	?^RecordRulerTab(dxaIns, dxaDel, tbd)$?
RecordScroll	recorder.c	?^RecordScroll(wm, sb, pos)$?
RecordSt	recorder.c	?^RecordSt(st)$?
RecordSz	recorder.c	?^RecordSz(sz)$?
RemoveKeyFromKmp	raremsg.c	?^RemoveKeyFromKmp(hkmp, kc, bcm)$?
RenumParas	renum.c	?^RenumParas(cpFirst,cpLim,fAll,rpm,hszStartAt,hszFo?
ReplAdjust	replace.c	?^ReplAdjust(pcp, dcp, cpLim)$?
Replace_Last	replace.c	?^Replace_Last(){}$?
Res_Last	res.c	?^Res_Last(){}$?
ResetLongOpState	res.c	?^ResetLongOpState (w)$?
ResetPropsToDefault	rtfin2.c	?^ResetPropsToDefault(pribl)$?
ResizeMwds	raremsg.c	?^ResizeMwds()$?
RetrPropFromRtfStack	rtfin.c	?^RetrPropFromRtfStack(pprop, hribl, wPropType)$?
RipSz	raremsg.c	?^RipSz(sz)$?
RpsFromCh	renum.c	?^RpsFromCh(ch)$?
RtfGetChars	rtfin2.c	?^RtfGetChars(fn, hribl, hppr)$?
RtfInRare	rtfin.c	?^EXPORT RtfInRare(hribl, ppch, pchLim)$?
RtfOut	rtfout.c	?^RtfOut(pca, pfnWrite, pArgWrite, roo)$?
RtfPostProcess	rtfin2.c	?^RtfPostProcess(hribl, fn)$?
RtfStandardChp	rtfsubs.c	?^RtfStandardChp(pchp)$?
RtfStandardDop	rtfin2.c	?^RtfStandardDop(pdop)$?
RtfStandardSep	rtfin2.c	?^RtfStandardSep(psep)$?
RtfStandardTap	rtfin2.c	?^RtfStandardTap(ptap)$?
RtfVersion	rtfout2.c	?^RtfVersion(prebl)$?
Rtfin_Last	rtfin.c	?^Rtfin_Last(){}$?
Rtfsubs_Last	rtfsubs.c	?^Rtfsubs_Last(){}$?
RulerEditTab	rulrib.c	?^RulerEditTab (hrsd, fInsert, xa)$?
RulerMarkWndProc	rulerdrw.c	?^EXPORT LONG FAR PASCAL RulerMarkWndProc (hwndMark,?
SbAllocEmmCb	res.c	?^SB SbAllocEmmCb(cb)$?
SbFindCb	res.c	?^SB SbFindCb (cb)$?
ScanNumList	renum.c	?^ScanNumList(ppch, pnfc, pn, pchPunc)$?
ScrollRuler	rulerdrw.c	?^ScrollRuler ()$?
SetBrcForIrrb	rtfin2.c	?^SetBrcForIrrb(pbrc, irrbProp, val)$?
SetDialogFound	replace.c	?^SetDialogFound()$?
SetDialogSearching	replace.c	?^SetDialogSearching()$?
SetEditModeUndo	rulrib.c	?^SetEditModeUndo (preb)$?
SetIndent	rulrib.c	?^SetIndent(imk)$?
SetParaReplace	replace.c	?^NATIVE SetParaReplace(stReplace, pfParaReplace, rg?
SortIcp	rtftrans.c	?^SortIcp(ptrfl, rgw)$?
SortSiftUpIcp	rtftrans.c	?^SortSiftUpIcp(ptrfl, rgw, iwI, iwN)$?
SpecChToFld	rtfrare.c	?^SpecChToFld(hribl, val)$?
SpsFromHwndRSB	rsb.c	?^SpsFromHwndRSB( hwnd )$?
SpsLimFromHwndRSB	rsb.c	?^SpsLimFromHwndRSB( hwnd )$?
StStAppend	res.c	?^StStAppend(st1, st2)$?
StToRgNum	rtfrare.c	?^StToRgNum(st, rg)$?
StToSz	res.c	?^StToSz( st, sz )$?
StToSzInPlace	res.c	?^StToSzInPlace( pch )$?
StartLongOp	res.c	?^StartLongOp()$?
SzLen	raremsg.c	?^#define SzLen(sz)   (CchSz(sz)-1)$?
SzSpaceToRtf	rtfout2.c	?^SzSpaceToRtf(ppch, isz)$?
SzToRtf	rtfout2.c	?^SzToRtf(ppch, isz)$?
SzToSt	res.c	?^SzToSt(sz, st)$?
SzToStInPlace	res.c	?^SzToStInPlace(pch)$?
SzValToRtf	rtfout2.c	?^SzValToRtf(ppch, isz, val)$?
TjcToRtf	rtfout2.c	?^TjcToRtf(ppch, jc)$?
TlcToRtf	rtfout2.c	?^TlcToRtf(ppch, tlc)$?
TmcConfirmReplace	replace.c	?^TmcConfirmReplace()$?
TrnsfrmTcf	rtfrare.c	?^TrnsfrmTcf(hribl, val)$?
TrnsfrmTcl	rtfrare.c	?^TrnsfrmTcl(hribl, val)$?
TrnsfrmTxt	rtfrare.c	?^TrnsfrmTxt(hribl, val)  /* can't be a macro; addre?
TrnsfrmVal	rtfrare.c	?^TrnsfrmVal(hribl, ch, szVal)$?
UnnumberParas	renum.c	?^UnnumberParas(cpFirst, cpLim)$?
UpdateLHProp	rulerdrw.c	?^UpdateLHProp (valProp, fGray, idDisplay)$?
UpdateRibbon	rulerdrw.c	?^UpdateRibbon(fInit)$?
UpdateRuler	rulerdrw.c	?^UpdateRuler (hmwd, fInit, rkNew, fAbortOK)$?
UpdateRulerProp	rulerdrw.c	?^UpdateRulerProp (hrsd, prlVal, cbPrlVal, prlGray, ?
UpdateRulerStyle	rulerdrw.c	?^UpdateRulerStyle (hrsd, stc, fGray)$?
UpdateRulerTab	rulerdrw.c	?^UpdateRulerTab(jc, hwndRuler)$?
UpdateRulerToggle	rulerdrw.c	?^UpdateRulerToggle (hrsd, val, fGray, idRul)$?
Usgn	res.c	?^Usgn(u)$?
ValGetIag	recorder.c	?^#define ValGetIag(hcab, iag) \\$?
WCaseCp	replace.c	?^NATIVE WCaseCp(doc, cp, dcp)$?
WCompSt	res.c	?^int WCompSt(st1, st2)$?
WFromSzRTF	rtfin2.c	?^int WFromSzRTF( szNumber )$?
WListRenum	renum.c	?^EXPORT WORD WListRenum(tmm, sz, isz, filler, tmc, ?
WReplaceCore	replace.c	?^int WReplaceCore(hcab, pszSearch, pszReplace, fCas?
WaitActivation	raremsg.c	?^BOOL WaitActivation()$?
WriteDocFromRtf	rtfsubs.c	?^WriteDocFromRtf (stFile)$?
WriteFnDsrsRTF	rtfout2.c	?^WriteFnDsrsRTF( fn, doc )$?
WriteRt1Rt2FromDoc	rtfsubs.c	?^WriteRt1Rt2FromDoc (stFile)$?
WriteRtfFromDoc	rtfsubs.c	?^WriteRtfFromDoc (stFile)$?
WwDisp	res.c	?^WwDisp(doc, ww, fDrMatch)$?
WwOther	res.c	?^EXPORT WwOther(ww)$?
XaMarkFromXpMark	rulerdrw.c	?^XaMarkFromXpMark (xp, hrsd)$?
XaMarkPxp	rulrib.c	?^XaMarkPxp (pxp, hrsd, xaLow, xaHigh)$?
XaNextTab	rulrib.c	?^XaNextTab (hrsd, xa, wDir)$?
XaQuantize	rulerdrw.c	?^NATIVE XaQuantize (xa, dxa, ddxaAdj)$?
XpMarkFromXaMark	rulerdrw.c	?^XpMarkFromXaMark (xa, hrsd)$?
ch	res.c	?^#define ch(_i)  ((CHAR) (_i))$?
if	renum.c	?^else  if (FIsPunc(ch))$?
AddHpsToPaf	syschg.c	?^AddHpsToPaf( ppaf, hps )$?
AlignPn	save.c	?^AlignPn(fn)$?
AllocHdcPrinter	screen2.c	?^AllocHdcPrinter( fIC )$?
AppWinSysChange	syschg.c	?^AppWinSysChange(wm, lpsz)$?
ApplyDocMgmtSave	save.c	?^ApplyDocMgmtSave (doc)   /* set up document manage?
ApplyRulerStyle	stylesub.c	?^ApplyRulerStyle(szStyle, fSysModalMsg)$?
ApplyStcPermuteCa	stylesub.c	?^ApplyStcPermuteCa(pca, grpprl)$?
BanterToTmc	stylesub.c	?^BanterToTmc(tmc, stc, pstsh, hsttbChpe, hsttbPape)?
C_CpSearchSz	search.c	?^HANDNATIVE CP C_CpSearchSz (pbmib, cpFirst, cpLim,?
C_CpSearchSzBackward	search.c	?^HANDNATIVE CP C_CpSearchSzBackward (pbmib, cpFirst?
C_FMatchChp	search.c	?^BOOL C_FMatchChp()$?
C_FMatchPap	search.c	?^BOOL C_FMatchPap()$?
CchChFromAnsiOrOem	search.c	?^CchChFromAnsiOrOem(rgch, ich, ichMax, pch)$?
CchMeasure	statline.c	?^int CchMeasure(ppch, za, cchLast)$?
CchMeasure3	statline.c	?^int CchMeasure3(ppch, za, dxpMost, hdc)$?
CchSYSStripString	syschg.c	?^int CchSYSStripString(pch, cch)$?
CchSzEngFromSzgId	strtbl.c	?^CchSzEngFromSzgId (sz, szg, id, cchMax)$?
CchSzFromSzgId	strtbl.c	?^CchSzFromSzgId (sz, szg, id, cchMax)$?
CcpWriteText	savetext.c	?^CP CcpWriteText(fn, doc, ccpSoFar, ccpTotal, fTran?
CcpWriteTextWithLineBreaks	savetext.c	?^CP CcpWriteTextWithLineBreaks(fn, doc, ccpSoFar, c?
ChAnsiFromOem	search.c	?^CHAR ChAnsiFromOem(ch)$?
CheckElSaveAsCab	save.c	?^CheckElSaveAsCab(pcmb)$?
CheckForFormatting	search.c	?^CheckForFormatting()$?
CheckForInvalPadPgd	stylesub.c	?^CheckForInvalPadPgd(pstsh, hsttbChpe, hsttbPape)$?
CheckRgcpFetch	search.c	?^HANDNATIVE CheckRgcpFetch(ww, pccpFetch, fNotPlain?
CkRgSte	strtbl.c	?^CkRgSte ()$?
CmdApplyStyDlg	stylesub.c	?^CMD CmdApplyStyDlg(pcmb)$?
CmdDefineStyle	style.c	?^CMD CmdDefineStyle(pcmb)$?
CmdDeleteStyle	style.c	?^CMD CmdDeleteStyle(stcp, fMsg)$?
CmdDoSaveAsDlg	save.c	?^CMD CmdDoSaveAsDlg(pcmb)$?
CmdDoSaveDoc	save.c	?^CMD CmdDoSaveDoc(doc, fSaveAs, fPromptSI, pcmb)$?
CmdDumpBitmapSizes	screen2.c	?^CMD CmdDumpBitmapSizes(pcmb)$?
CmdElDefineStyle	style.c	?^CmdElDefineStyle(pcmb)$?
CmdGosubMerge	style.c	?^CMD CmdGosubMerge()$?
CmdGosubRename	style.c	?^CMD CmdGosubRename()$?
CmdGotoDefine	style.c	?^CMD CmdGotoDefine(stName)$?
CmdMergeStyle	style.c	?^CMD CmdMergeStyle(pcmb)$?
CmdMrgSty	style.c	?^CMD CmdMrgSty(hcab, fDoDlg)$?
CmdSave	save.c	?^CMD CmdSave(pcmb)$?
CmdSaveAll	save.c	?^CMD CmdSaveAll(pcmb)$?
CmdSaveAs	save.c	?^CMD CmdSaveAs(pcmb)$?
CmdSaveDot	save.c	?^CMD CmdSaveDot(pcmb)$?
CmdSearch	search.c	?^CMD CmdSearch(pcmb)$?
CmdSearchChar	search.c	?^CMD CmdSearchChar(pcmb)$?
CmdSearchPara	search.c	?^CMD CmdSearchPara(pcmb)$?
CmdSort	sort.c	?^CMD CmdSort(pcmb)$?
CmdSpellDoc	spell.c	?^CMD CmdSpellDoc(pcmb)$?
CmdSpelling	spell.c	?^CMD CmdSpelling(pcmb)$?
CmdSplit	splitter.c	?^CMD CmdSplit(pcmb)$?
CmdStyChar	style.c	?^CmdStyChar(pcmb)$?
CmdStyPara	style.c	?^CmdStyPara(pcmb)$?
CmdStyPos	style.c	?^CmdStyPos(pcmb)$?
CmdStyTabs	style.c	?^CmdStyTabs(pcmb)$?
CommRgb	style.c	?^CommRgb(pb, cb)$?
CopyFonts	stylesub.c	?^CopyFonts(docSrc, pcaDest)$?
CopyGrpfvisiToScc	splitter.c	?^CopyGrpfvisiToScc(ww)$?
CopyStyles1	stylesub.c	?^CopyStyles1(docSrcStsh, docDest, cpDest, dcp)$?
CopyStylesFonts	stylesub.c	?^CopyStylesFonts(docSrcStsh, docDest, cpDest, dcp)$?
CpSRBlockCpPsod	sort.c	?^CP CpSRBlockCpPsod(cpFirst, psod, pca, pbks)$?
CpSRNormalCpPsod	sort.c	?^CP CpSRNormalCpPsod(cpFirst, psod, pca, pcCellsReq?
CpSROutlineCpPsod	sort.c	?^CP CpSROutlineCpPsod(cpFirst, psod, pca, posrib)$?
CpSearchFb	srchfmt.c	?^CP CpSearchFb( pfb, cpFirst, cpLim )$?
CpSearchFbBackward	srchfmt.c	?^CP CpSearchFbBackward( pfb, cpFirst, cpLim )$?
CpSearchPap	srchfmt.c	?^NATIVE CP CpSearchPap( cpFirst, cpLim ) /* WINIGNO?
CpVisibleCp	srchfmt.c	?^NATIVE CP CpVisibleCp(cp) /* WINIGNORE - not used ?
CpcdForDoc	save.c	?^CpcdForDoc(doc)$?
CpheForDoc	save.c	?^CpheForDoc(doc)$?
CstcBasedOnOfStc	stylesub.c	?^CstcBasedOnOfStc(stc, pstsh, mpstccstc)$?
DisableDirForTemplate	save.c	?^DisableDirForTemplate(stUser)$?
DiscardSpeller	spell.c	?^DiscardSpeller()$?
DisconnectFromFti	screen2.c	?^DisconnectFromFti( pfti )$?
DisplayHelpPrompt	statline.c	?^DisplayHelpPrompt(fOn)$?
DisplaySRBanter	search.c	?^DisplaySRBanter(tmc, pchp, pchpGray, ppap, ppapGra?
DisplayStatL2	statline.c	?^DisplayStatL2 (pdc)$?
DisplayStatL3	statline.c	?^DisplayStatL3(pdc)$?
DisplayStatLinePrompt	statline.c	?^DisplayStatLinePrompt (pdc)$?
DoEmergSave	save.c	?^DoEmergSave(doc)$?
DoLooksRMark	srchfmt.c	?^DoLooksRMark ()$?
DoLooksStrike	srchfmt.c	?^DoLooksStrike ()$?
DoPostSaveDoc	save.c	?^DoPostSaveDoc(pcmb, fDirty)$?
DoSaveDoc	save.c	?^DoSaveDoc(doc, fPromptSI)$?
DocTranslate	save.c	?^int DocTranslate(docSrc)$?
DumpStsh	style.c	?^DumpStsh(pstsh, hsttbChpe, hsttbPape)$?
ElWUtilGetSpelling	spell.c	?^EL int ElWUtilGetSpelling(ad, hstWord, hstMainDict?
EmitSprmStc	stylesub.c	?^EmitSprmStc(stc)$?
EnsureFtcDefined	style.c	?^EnsureFtcDefined(stc)$?
EnumColor	srchfmt.c	?^EnumColor(fUp)$?
EnumColorDn	srchfmt.c	?^EnumColorDn()$?
EnumColorUp	srchfmt.c	?^EnumColorUp()$?
EnumFont	srchfmt.c	?^EnumFont(fUp)$?
EnumFontDown	srchfmt.c	?^EnumFontDown()$?
EnumFontUp	srchfmt.c	?^EnumFontUp()$?
EnumPtSize	srchfmt.c	?^EnumPtSize(fUp)$?
EnumPtSizeDn	srchfmt.c	?^EnumPtSizeDn()$?
EnumPtSizeUp	srchfmt.c	?^EnumPtSizeUp()$?
FApplyGrpprlForNewBasedOn	style.c	?^FApplyGrpprlForNewBasedOn(stcBaseNew, grpprl, cb, ?
FAssureHCb	screen2.c	?^FAssureHCb( ph, cb, pcbMac, pcbMax )$?
FAssureIrcds	screen2.c	?^BOOL FAssureIrcds(ircds)$?
FBackupStFile	save.c	?^FBackupStFile(stFile, fBackupOption, pbkinfo )$?
FCacheLine	statline.c	?^FCacheLine( ww, doc, cp, fEnd )$?
FChangeBN	style.c	?^FChangeBN(stStyle, stName, pstsh, hsttbChpe, hsttb?
FChangeBasedOn	style.c	?^FChangeBasedOn(stcNew, pfChange, pstsh, pestcp, hs?
FChangeDlgSaveAsPath	save.c	?^FChangeDlgSaveAsPath(doc, iFmt, stFile, stUser)$?
FCheckBasedOn	stylesub.c	?^FCheckBasedOn(pstsh, peid)$?
FCheckSaveCab	save.c	?^FCheckSaveCab(hcab, pcesa, stNorm)$?
FChngSizeHplf	sort.c	?^FChngSizeHplf(hplf, iMacNew)$?
FCopyGhdToSz	spelcore.c	?^FCopyGhdToSz( pghd, sz )$?
FCopySzToGhd	spelcore.c	?^NATIVE FCopySzToGhd( sz, pghd )$?
FCpNL_EOL	sort.c	?^NATIVE BOOL FCpNL_EOL(cp) /* WINIGNORE - ifdef BOG?
FCreateDict	spell.c	?^static FCreateDict( szFile )$?
FCreateSplit	splitter.c	?^FCreateSplit(doc, yp, wk)$?
FDefStyleFromDlg	style.c	?^FDefStyleFromDlg(pcesty, fFromOK, pstsh, hsttbChpe?
FDefineInTemplate	style.c	?^FDefineInTemplate(pstsh, hsttbChpe, hsttbPape, pid?
FDefineStyle	style.c	?^FDefineStyle(stName, fDot, pcesty, fClick)$?
FDlgApplyStyle	stylesub.c	?^BOOL FDlgApplyStyle(dlm, tmc, wNew, wOld, wParam)$?
FDlgCheckDicts	spell.c	?^FDlgCheckDicts()$?
FDlgDefineStyle	style.c	?^BOOL FDlgDefineStyle(dlm, tmc, wNew, wOld, wParam)?
FDlgMergeStyle	style.c	?^BOOL FDlgMergeStyle(dlm, tmc, wNew, wOld, wParam)$?
FDlgRenameStyle	style.c	?^BOOL FDlgRenameStyle(dlm, tmc, wNew, wOld, wParam)?
FDlgSaveAs	save.c	?^BOOL FDlgSaveAs(dlm, tmc, wNew, wOld, wParam)$?
FDlgSearchRepl	search.c	?^BOOL FDlgSearchRepl(dlm, tmc, wNew, wOld, wParam)$?
FDlgSort	sort.c	?^BOOL FDlgSort(dlm, tmc, wNew, wOld, wParam)$?
FDlgSpeller	spell.c	?^int FDlgSpeller(dlm, tmc, wNew, wOld, wParam)$?
FDlgSpellerMM	spelcore.c	?^int FDlgSpellerMM(dlm, tmc, wNew, wOld, wParam)$?
FEditSearchFound	search.c	?^FEditSearchFound()$?
FEnableMMChange	spelcore.c	?^FEnableMMChange()$?
FExpandPbmi	screen2.c	?^FExpandPbmi( pbmi, dxp, dyp )$?
FFetchSortKey	sort.c	?^NATIVE BOOL FFetchSortKey(szKey, cchMax, pca, chSe?
FFillArrayWithSugg	spelcore.c	?^FFillArrayWithSugg(ad)$?
FFillCabSave	save.c	?^FFillCabSave(pcmb, pcesa)$?
FFindNext	search.c	?^BOOL FFindNext(pbmib)$?
FFlushDoc	save.c	?^FFlushDoc(doc, stName, dff, fReport)$?
FFlushFile	save.c	?^FFlushFile(fn)$?
FFromProfile	syschg.c	?^FFromProfile(fDefault, ipst)$?
FGenChpxPapxChangedBasedOn	style.c	?^FGenChpxPapxChangedBasedOn(stcFromBase,stcToBase, ?
FGetNextWordFromDoc	spelcore.c	?^NATIVE FGetNextWordFromDoc()$?
FGetPrinterFromProfile	syschg.c	?^BOOL FGetPrinterFromProfile()$?
FGetSRFb	srchfmt.c	?^BOOL FGetSRFb(ppfb)$?
FGetStatLineState	statline.c	?^FGetStatLineState(psls,uso)$?
FInCaFEnd	statline.c	?^FInCaFEnd(doc, cp, pca, fEnd)$?
FInitSpell	spell.c	?^FInitSpell()$?
FInitVpscd	spell.c	?^FInitVpscd()$?
FInvalTCSort	sort.c	?^FInvalTCSort(itcKey, pcCellsReq)$?
FInvalidCharSetting	syschg.c	?^STATIC NEAR FInvalidCharSetting()$?
FIsDigitS	search.c	?^BOOL FIsDigitS(ch)$?
FLoadResourceIdrb	screen2.c	?^FLoadResourceIdrb( idrb )$?
FMatchChpCpCp	srchfmt.c	?^BOOL FMatchChpCpCp(cpFirst, cpLim)$?
FMatchDefinedAndStdStyles	stylesub.c	?^FMatchDefinedAndStdStyles(hsttb, cstcStd, stName, ?
FMatchPapCp	srchfmt.c	?^BOOL FMatchPapCp(cpFirst)$?
FMatchStdStyles	stylesub.c	?^FMatchStdStyles(stName, pstc)$?
FMatchWhiteSpace	search.c	?^HANDNATIVE BOOL FMatchWhiteSpace (ch)$?
FMyAddWordToCacheAux	spelcore.c	?^BOOL FMyAddWordToCacheAux(mode, ghszWord, ghszRepl?
FMyAddWordToDictAux	spelcore.c	?^BOOL FMyAddWordToDictAux(udc, ghszWord)$?
FMyDeleteWordFromDictAux	spelcore.c	?^BOOL FMyDeleteWordFromDictAux(udc, ghszWord)$?
FMySetDictAux	spelcore.c	?^BOOL FMySetDictAux(udc, ghszDictFileName)$?
FMySpellCleanUp	spell.c	?^BOOL FMySpellCleanUp()$?
FMySpellInit	spell.c	?^BOOL FMySpellInit(ghszPath)$?
FOurFillDirListTmc	save.c	?^FOurFillDirListTmc(stz, tmcLB, tmcPath, fdir)$?
FParseKeyAlphaNum	sort.c	?^BOOL FParseKeyAlphaNum(pca, psod)$?
FParseKeyDate	sort.c	?^BOOL FParseKeyDate(sz, psod)$?
FParseKeyNumeric	sort.c	?^BOOL FParseKeyNumeric(sz, psod)$?
FPickOneWord	spell.c	?^FPickOneWord(fIns)$?
FQuicksaveOk	save.c	?^FQuicksaveOk(doc)$?
FReadOnlySt	save.c	?^FReadOnlySt(st)$?
FRebuildSubdocPlcpcd	save.c	?^FRebuildSubdocPlcpcd(pdsr, ddsr, edcDrp)$?
FRedefineCanWork	stylesub.c	?^FRedefineCanWork()$?
FRefetchPfvb	sort.c	?^NATIVE BOOL FRefetchPfvb(pfvb, pich)$?
FRegenerateDoc	save.c	?^FRegenerateDoc (fn, pdsr, ppnFib)$?
FRenameFn	save.c	?^FRenameFn( fn, stFileNew )$?
FReviveTossedPrinterDC	screen2.c	?^EXPORT FReviveTossedPrinterDC( pfce )$?
FSaveFile	save.c	?^BOOL FSaveFile(stFile, doc, dff, fQuicksave, fBack?
FScanDoc	spelcore.c	?^FScanDoc()$?
FScanForPlgc	spell.c	?^FScanForPlgc(plgc)$?
FSearchStc	stylesub.c	?^FSearchStc(rgstc, stc, istcMac, pistc)$?
FSetMainDict	spell.c	?^FSetMainDict( ilb )$?
FSetStcBackup	stylesub.c	?^FSetStcBackup()$?
FSetUpForNextSearch	search.c	?^BOOL FSetUpForNextSearch(pbmib, fIgnoreMatch)$?
FSetUserDict	spell.c	?^FSetUserDict( szDict, fDialogs )$?
FSpellDllLoad	spell.c	?^FSpellDllLoad(lgc)$?
FSplitBoxMouse	splitter.c	?^FSplitBoxMouse(hwnd, msg, lParam)$?
FSplitMwd	splitter.c	?^FSplitMwd(hmwd, yp, wk)$?
FStylesEqual	style.c	?^FStylesEqual(stc2, pstsh, hsttbChpe, hsttbPape)$?
FTellDllAboutDicts	spell.c	?^FTellDllAboutDicts()$?
FTryDict	spell.c	?^static FTryDict( szFile, szAdjust, pfRO )$?
FUnderstoodDff	save.c	?^FUnderstoodDff (dff, fBinaryOnly)$?
FUpdateDictOK	spell.c	?^static BOOL FUpdateDictOK()$?
FUpdateSls	statline.c	?^FUpdateSls(psls,uso)$?
FUseSelProps	stylesub.c	?^FUseSelProps(stcp, fErrorMsg)$?
FUserDictOK	spell.c	?^static BOOL FUserDictOK(fDialogs)$?
FValidExtSYS	syschg.c	?^BOOL FValidExtSYS(szExt)$?
FValidSRText	search.c	?^BOOL FValidSRText(sz, pfb)$?
FValidateWord	spell.c	?^FValidateWord()$?
FVerifyBasedOnNext	style.c	?^FVerifyBasedOnNext(pstsh, hsttbChpe, hsttbPape, fR?
FWordCp	search.c	?^BOOL FWordCp(cp, dcp)$?
FWriteFnDsrs	save.c	?^int FWriteFnDsrs (fn, pdsr, pdsrGlsy, dff)$?
FZeroBit	search.c	?^BOOL FZeroBit(pw, cw)$?
FarSzToSt	stylesub.c	?^FarSzToSt(lpsz, st)$?
FcAppendHprgchToFn	savetext.c	?^FC FcAppendHprgchToFn(fn, hpch, cch)$?
FcBegOfExt	save.c	?^FC FcBegOfExt(fnDest, doc, pfib)$?
FetchCpForSearch	search.c	?^HANDNATIVE FetchCpForSearch(doc, cpRun, pccpFetch,?
FetchCpPccpVisibleBackward	search.c	?^HANDNATIVE FetchCpPccpVisibleBackward(doc, cpLimRu?
FillHsttbPaf	syschg.c	?^FillHsttbPaf(phsttbPaf)$?
FillSuggBox	spelcore.c	?^FillSuggBox(fSuggest)$?
FontNameEnum	syschg.c	?^EXPORT BOOL FAR PASCAL FontNameEnum( lplf, lptm, f?
FontSizeEnum	syschg.c	?^EXPORT BOOL FAR PASCAL FontSizeEnum( lplf, lptm, f?
FreeFontsPfti	screen2.c	?^FreeFontsPfti( pfti )$?
FreeGhd	spell.c	?^FreeGhd( pghd )$?
FreeHandlesOfPfce	screen2.c	?^EXPORT FreeHandlesOfPfce( pfce )$?
FreeHdcPrinter	screen2.c	?^FreeHdcPrinter()$?
FreeHplf	sort.c	?^FreeHplf(hplf)$?
FreeIrcds	screen2.c	?^FreeIrcds(ircds)$?
FreePbmi	screen2.c	?^FreePbmi( pbmi )$?
FtcChkDocFfn	screen2.c	?^FtcChkDocFfn(doc, pffn)$?
FtcFromDocIbst	screen2.c	?^FtcFromDocIbst(doc, ibst)$?
FtcMapDocMotherFtc	stylesub.c	?^FtcMapDocMotherFtc(docMotherSrc, docMotherDest, ft?
FtcValidateFont	screen2.c	?^int FtcValidateFont(pffn)$?
GenSRBanter	srchfmt.c	?^GenSRBanter( prl, cchPrl, sgc )$?
GenStyleBanter	stylesub.c	?^GenStyleBanter(st, cch, stc, pstsh, hsttbChpe, hst?
GetAMPMFromProfile	syschg.c	?^STATIC NEAR GetAMPMFromProfile(fForceDefault)$?
GetExtFromProfile	syschg.c	?^GetExtFromProfile(ipst, szExt, fForceDefault)$?
GetPlf	sort.c	?^GetPlf(hplf, i, pch)$?
GetPrintEnv	screen2.c	?^NATIVE GetPrintEnv()$?
GetPubCharInfo	screen2.c	?^GetPubCharInfo()$?
GetSzProfileIpst	syschg.c	?^int GetSzProfileIpst (ipst, sz, szDefault, cchMax,?
GhMySpellGetrgchCase	spelcore.c	?^HANDLE GhMySpellGetrgchCase()$?
HLoadRes1	screen2.c	?^HANDLE HLoadRes1(i)$?
HpInPlf	sort.c	?^NATIVE CHAR HUGE *HpInPlf(hplf, i)$?
HplfInit	sort.c	?^struct PLF **HplfInit(cb, iMax)$?
HszCreateSYS	syschg.c	?^CHAR (**HszCreateSYS())[];$?
IAppendToHplf	sort.c	?^IAppendToHplf(hplf, pch)$?
ILngFromCh1Ch2	spell.c	?^ILngFromCh1Ch2( ch1, ch2 )$?
IRefFromBcm	save.c	?^IRefFromBcm(bcm, piRefMinUser)$?
IbstFindInSttbPaf	syschg.c	?^IbstFindInSttbPaf( hsttbPaf, ibstFont )$?
IdApplyStyle	stylesub.c	?^IdApplyStyle(pstc, stStyle, fBanter, fApply, pfRed?
IdEngFromSzgSz	strtbl.c	?^IdEngFromSzgSz (szg, sz)$?
IdFromSzgSz	strtbl.c	?^IdFromSzgSz (szg, sz)$?
IdOverwriteForeign	save.c	?^IdOverwriteForeign (doc, stFile, iFmt)$?
IdSaveDirtyStyle	style.c	?^IdSaveDirtyStyle(stStyle, pstsh, hsttbChpe, hsttbP?
IlbLngFromSz	spell.c	?^IlbLngFromSz(sz)$?
InitSRChps	search.c	?^InitSRChps(fSearch)$?
InitSRPaps	search.c	?^InitSRPaps(fSearch)$?
InitScanDoc	spelcore.c	?^InitScanDoc(fPrompt)$?
InitSearchFormatting	search.c	?^InitSearchFormatting()$?
InitStatLine	statline.c	?^void InitStatLine( hdc )$?
InitStyleCabToStc	style.c	?^InitStyleCabToStc(pcmb, stc)$?
IstLbFromStcp	stylesub.c	?^IstLbFromStcp(stcp)$?
JcFromI	style.c	?^#define JcFromI(i)        (i)$?
KillSplit	splitter.c	?^KillSplit(hmwd, fLower, fAdjustWidth)$?
LMyLookUpWord	spelcore.c	?^NATIVE unsigned long LMyLookUpWord( ghszWord, ghsz?
LgcToStLex	spell.c	?^LgcToStLex( lgc, stLex )$?
Merge	sort.c	?^NATIVE Merge(hpintSrc, iFirst, iLast1, iLast2, hpi?
MergePropsPropGray	search.c	?^MergePropsPropGray(ppropResult, pprop, ppropGray, ?
MyGetAlternates	spelcore.c	?^void MyGetAlternates(ghszAlts)$?
MyResetRepeatWord	spell.c	?^NATIVE void MyResetRepeatWord()$?
NewShowNewDirTmc	save.c	?^NewShowNewDirTmc(tmcEdit, tmcList, szExt)$?
OpenStsh	stylesub.c	?^OpenStsh(docStshNew, fNuke, fFrom)$?
PaintSi	statline.c	?^PaintSi( hdc, isi )$?
PaintSi3	statline.c	?^PaintSi3( hdc, isi, prc )$?
ParseDeviceSz	syschg.c	?^int ParseDeviceSz(sz, ppchPort, ppchDriver)$?
PchAdjustDictFileName	spell.c	?^char *PchAdjustDictFileName(szFileName)$?
PchFnHasExt	save.c	?^PchFnHasExt(sz)$?
PchFnTermPrevCur	save.c	?^PchFnTermPrevCur(sz)$?
PchNormDict	spell.c	?^char *PchNormDict( szDict )$?
PrinterChanged	syschg.c	?^PrinterChanged()$?
PrinterMetrics	screen2.c	?^PrinterMetrics()$?
PutPlf	sort.c	?^PutPlf(hplf, i, pch)$?
ReadUserProfile	syschg.c	?^ReadUserProfile(fForceDefault)$?
RecordStyTmc	style.c	?^RecordStyTmc(tmc)$?
RedisplayComboBox	stylesub.c	?^RedisplayComboBox(tmcCb, istLb)$?
RefillDSDropDown	stylesub.c	?^RefillDSDropDown()$?
RemoveSubdocsDsrs	save.c	?^RemoveSubdocsDsrs (pdsr, pdsrGlsy)$?
ReplacePropsCa	srchfmt.c	?^ReplacePropsCa(prpp, pca)$?
ReplaceScanWord	spelcore.c	?^ReplaceScanWord( szReplaceWord )$?
ReportSavePercent	save.c	?^ReportSavePercent (cpMin, cpMac, cpNow, fQuicksave?
ResetDocFonts	screen2.c	?^ResetDocFonts(doc)$?
RestoreBasedOnEditControl	style.c	?^RestoreBasedOnEditControl(pstsh, stcBase)$?
SaveDotToo	save.c	?^SaveDotToo (pcmb, fDirty)$?
ScCmpAlphaAscIsod	sort.c	?^SC ScCmpAlphaAscIsod(isod1, isod2)$?
ScCmpAlphaCIAscIsod	sort.c	?^SC ScCmpAlphaCIAscIsod(isod1, isod2)$?
ScCmpAlphaCIDesIsod	sort.c	?^SC ScCmpAlphaCIDesIsod(isod1, isod2)$?
ScCmpAlphaDesIsod	sort.c	?^SC ScCmpAlphaDesIsod(isod1, isod2)$?
ScCmpDttmAscIsod	sort.c	?^SC ScCmpDttmAscIsod(isod1, isod2)$?
ScCmpDttmDesIsod	sort.c	?^SC ScCmpDttmDesIsod(isod1, isod2)$?
ScCompareNumAscIsod	sort.c	?^SC ScCompareNumAscIsod(isod1, isod2)$?
ScCompareNumDesIsod	sort.c	?^SC ScCompareNumDesIsod(isod1, isod2)$?
SeBuildSortRec	sort.c	?^SE SeBuildSortRec()$?
SeMergeSort	sort.c	?^SeMergeSort()$?
SeReorder	sort.c	?^SeReorder(hqrgIndex)$?
SearchAgain	search.c	?^SearchAgain()$?
Search_Last	search.c	?^Search_Last(){}$?
SetAllDcAttrib	syschg.c	?^SetAllDcAttrib( dcc )$?
SetDocLockFlag	save.c	?^SetDocLockFlag(doc)$?
SetFRefOfBsy	save.c	?^SetFRefOfBsy(bsy)$?
SetIbstFontDSFromStc	stylesub.c	?^SetIbstFontDSFromStc(stc)$?
SetRectIsi	statline.c	?^SetRectIsi(isi,prc)$?
SetRectIsi2	statline.c	?^SetRectIsi2(isi,prc)$?
SetRectIsi3	statline.c	?^SetRectIsi3(isi,prc)$?
SetSpecialMatch	search.c	?^SetSpecialMatch (pbmib)$?
SetTmcBanterFromTmcCb	stylesub.c	?^SetTmcBanterFromTmcCb(tmcBanter, tmcCb, pstsh, hst?
SetVstcSel	stylesub.c	?^SetVstcSel()$?
SetWindowColors	syschg.c	?^void SetWindowColors()$?
SetWordSearch	search.c	?^SetWordSearch(szSearch)$?
SetupMMWord	spelcore.c	?^SetupMMWord()$?
SivFromPslsIsi	statline.c	?^SivFromPslsIsi(psls, isi)$?
SpcCheckWord	spell.c	?^int SpcCheckWord()$?
SpcScanDocNextWord	spelcore.c	?^NATIVE SpcScanDocNextWord(fDialog, fNoDlgContAtBeg?
SpellDllFree	spell.c	?^static SpellDllFree()$?
SplChangeOnce	spelcore.c	?^SplChangeOnce()$?
SplIgnoreOnce	spelcore.c	?^SplIgnoreOnce()$?
SplTermOrScan	spelcore.c	?^SplTermOrScan()$?
SplitBarWndProc	splitter.c	?^EXPORT LONG FAR PASCAL SplitBarWndProc( hwnd, mess?
StToRgNum	style.c	?^StToRgNum(st, rg)$?
StartSaveReport	save.c	?^StartSaveReport(mst, stFile, doc)$?
StatLineWndProc	statline.c	?^EXPORT long FAR PASCAL StatLineWndProc(hwnd, messa?
StcUseStyle	style.c	?^StcUseStyle(stName, fTemplate)$?
TermScanDoc	spelcore.c	?^TermScanDoc(fNoError)$?
TlcFromI	style.c	?^#define TlcFromI(i)       (i)$?
TmcGosubSpellMM	spelcore.c	?^int TmcGosubSpellMM()$?
TmcVerifyBasedOnNext	style.c	?^TmcVerifyBasedOnNext(pstsh, hsttbChpe, hsttbPape, ?
ToggleShowStd	stylesub.c	?^void ToggleShowStd()$?
TrackSplitBar	splitter.c	?^TrackSplitBar(pt, wk)$?
TruncateAllSels	save.c	?^TruncateAllSels(doc, cpMac)$?
TruncateSels	save.c	?^TruncateSels(psels, cpMac)$?
UlmFromDrvWinIni	syschg.c	?^int UlmFromDrvWinIni()$?
UndirtyDoc	save.c	?^UndirtyDoc(doc)$?
UpdateCombos	style.c	?^UpdateCombos(pstsh, pcesty, stStyle)$?
UpdateStatusLine	statline.c	?^UpdateStatusLine(uso)$?
WComboSpellADict	spell.c	?^EXPORT WORD WComboSpellADict(tmm, sz, isz, filler,?
WComboSpellMM	spelcore.c	?^EXPORT WORD WComboSpellMM(tmm, sz, isz, filler, tm?
WCompEngSzIste	strtbl.c	?^NATIVE WCompEngSzIste (psz, iste)$?
WCompSzIste	strtbl.c	?^NATIVE WCompSzIste (psz, iste)$?
WDDLBoxSpellMDict	spell.c	?^EXPORT WORD WDDLBoxSpellMDict(tmm, sz, isz, filler?
WFetchCompKeys	sort.c	?^WFetchCompKeys(isod1, isod2, fCase)$?
WListSave	save.c	?^EXPORT WORD WListSave(tmm, sz, isz, filler, tmc, w?
WListStyles	stylesub.c	?^EXPORT WORD WListStyles(tmm, sz, isz, filler, tmc,?
WriteTextCommon	savetext.c	?^WriteTextCommon(dff, fn, doc)$?
if	syschg.c	?^else  if (tc & TC_RA_ABLE)$?
CchGenGrpprlTabs	tabs.c	?^CchGenGrpprlTabs(pcmb, grpprl)$?
CchPackSzPnum	token.c	?^CchPackSzPnum(sz, pnum)$?
ChFetchHqrgbIb	token.c	?^#define ChFetchHqrgbIb(hqrgb, ib) (*((char huge *)?
ChangeTabDlgState	tabs.c	?^ChangeTabDlgState(pcmb)$?
ClearAllTabs	tabs.c	?^ClearAllTabs()$?
CmdTOC	toc.c	?^CMD CmdTOC(pcmb)$?
CmdTabs	tabs.c	?^CMD CmdTabs(pcmb)$?
ElTestOptions	token.c	?^EL ElTestOptions(hst)$?
EltLookupSt	token.c	?^NATIVE ELT EltLookupSt(st)$?
FDigitCh	token.c	?^#define FDigitCh(ch) (mpchgrfsy[(ch)] == fsyDigit)?
FDlgTabs	tabs.c	?^BOOL FDlgTabs(dlm, tmc, wNew, wOld, wParam)$?
FDlgToc	toc.c	?^BOOL FDlgToc(dlm, tmc, wNew, wOld, wParam)$?
FEnterTocEntry	toc.c	?^BOOL FEnterTocEntry(doc, rgchEntry, cchEntry, iLev?
FExpandHqrgbToPca	token.c	?^BOOL FExpandHqrgbToPca(hqrgb, ibLim, pcaDest, imei?
FFindTocOutline	toc.c	?^BOOL FFindTocOutline(pca, pgn, nfc)$?
FFlush	token.c	?^BOOL FFlush(fn, pchTok, rgchBuf, cchAdd)$?
FGetChpPapForToc	toc.c	?^BOOL FGetChpPapForToc(doc, pchp, ppap, iLevel)$?
FInitTdsd	tabs.c	?^BOOL FInitTdsd(pcmb)$?
FInsertClListDxa	tabs.c	?^BOOL FInsertClListDxa(pcmb, dxa)$?
FOutputToc	toc.c	?^BOOL FOutputToc(doc, cpResult, cpField)$?
FParseLevRange	toc.c	?^BOOL FParseLevRange(sz, piMin, piLast)$?
FProcessTocEntry	toc.c	?^BOOL FProcessTocEntry(pffb, doc, pgn, nfc)$?
FReplacePcaWithHqrgb	token.c	?^BOOL FReplacePcaWithHqrgb(pca, hqrgb, ibLim)$?
FSetTab	tabs.c	?^FSetTab(pcmb, fAllowBlank)$?
FTocEntryError	toc.c	?^BOOL FTocEntryError(doc, pgn, istError, nfc)$?
FTokenizePca	token.c	?^BOOL FTokenizePca(pca, phqrgbTokens, pibLimTokens)?
FValidSymbolCh	token.c	?^#define FValidSymbolCh(ch, fFirst) \\$?
FWhiteCh	token.c	?^#define FWhiteCh(ch) (mpchgrfsy[(ch)] == fsyWhite)?
FcrCalcFltToc	toc.c	?^FcrCalcFltToc(doc, ifld, flt, cpInst, cpResult, pf?
FetchPcaToHqrgb	token.c	?^FetchPcaToHqrgb(pca, hqrgb)$?
IFromJc	tabs.c	?^#define IFromJc(jc)       (jc)$?
IFromTlc	tabs.c	?^#define IFromTlc(tlc)     (tlc)$?
JcFromI	tabs.c	?^#define JcFromI(i)        (i)$?
KillAllTabs	tabs.c	?^KillAllTabs(pcmb)$?
KillTab	tabs.c	?^KillTab(pcmb)$?
SetTdsd	tabs.c	?^SetTdsd(pcmb, fAllowBlank)$?
ShiftIMinus1	tabs.c	?^#define ShiftIMinus1(rg, i, iMac, type) \\$?
ShiftIPlus1	tabs.c	?^#define ShiftIPlus1(rg, i, iMac, type) \\$?
ShowNewClList	tabs.c	?^ShowNewClList(fClearAll, rgdxa, itbdMac)$?
ShowTabs	tabs.c	?^ShowTabs(pcmb)$?
TlcFromI	tabs.c	?^#define TlcFromI(i)       (i)$?
TmcGosubTabs	tabs.c	?^TmcGosubTabs()$?
TmcTabs	tabs.c	?^int TmcTabs(pcmb)$?
WFetchHqrgbIb	token.c	?^#define WFetchHqrgbIb(hqrgb, ib) \\$?
WListTabs	tabs.c	?^WORD WListTabs(tmm, str, isz, filler, tmc, wParam)?
WParseToc	toc.c	?^EXPORT WORD WParseToc(tmm, sz, ppv, bArg, tmc, wPa?
AssureCpAboveDyp	util2.c	?^AssureCpAboveDyp(cp, dyp, fEnd)$?
Beep	util2.c	?^Beep()$?
CMinutesFromDttms	util2.c	?^int CMinutesFromDttms(dttmFrom, dttmTo)$?
C_OrdCh	util2.c	?^C_OrdCh(ch, fCase, fScan)$?
C_WCompChCh	util2.c	?^HANDNATIVE C_WCompChCh (ch1, ch2)$?
C_WCompSzSrt	util2.c	?^HANDNATIVE C_WCompSzSrt(psz1,psz2,fCase)$?
CancelPmt	util2.c	?^void CancelPmt ()$?
CchIntToAsciiHex	util2.c	?^int CchIntToAsciiHex(n, ppch, cLevel)$?
CchUnsToPpchLevel	util2.c	?^int CchUnsToPpchLevel (n, ppch, cLevel)$?
CheckEnvPending	util2.c	?^CheckEnvPending()$?
CheckMpchord	util2.c	?^CheckMpchord(mp)$?
CkSortOrdinals	util2.c	?^CkSortOrdinals()$?
CommSzFast	util2.c	?^CommSzFast(sz)$?
CommSzNumFast	util2.c	?^CommSzNumFast(sz, w)$?
CommSzPnumFast	util2.c	?^ommSzPnumFast(sz, pnum)$?
CommSzSzFast	util2.c	?^CommSzSzFast(sz1, sz2)$?
DowFromDttm	util2.c	?^int DowFromDttm(dttm)$?
FAuthor	util2.c	?^FAuthor(doc)$?
FLeapYr	util2.c	?^BOOL FLeapYr(yr)$?
FPromptDialog	util2.c	?^FPromptDialog (szPrompt, szInput, cchMax)$?
FPtInRect	util2.c	?^FPtInRect( pt, prc )$?
FSpace	util2.c	?^FSpace(ch)$?
FValidDttm	util2.c	?^BOOL FValidDttm (dttm)$?
FValidExt	util2.c	?^BOOL FValidExt(szExt)$?
FreeUnusedPrcs	util2.c	?^FreeUnusedPrcs()$?
HbmpFromIBmp	util2.c	?^HANDLE HbmpFromIBmp(ibmp)$?
HbrsGetTmcHdc	util2.c	?^HANDLE HbrsGetTmcHdc(tmc, hdc)$?
IdMessageBoxMstRgwMb	util2.c	?^IdMessageBoxMstRgwMb (mst, rgw, mb)$?
IdOurFarMessageBox	util2.c	?^IdOurFarMessageBox(lpszText, lpszCaption, mb)$?
IdOurMessageBox	util2.c	?^IdOurMessageBox(szText, szCaption, mb)$?
IdPromptBoxSz	util2.c	?^IdPromptBoxSz(sz, mb)$?
LDaysFrom1900Dttm	util2.c	?^long LDaysFrom1900Dttm(dttm)$?
LDaysFromDttm	util2.c	?^long LDaysFromDttm(dttmFrom, dttmTo)$?
LbcCmpLbox	util2.c	?^HANDNATIVE LbcCmpLbox (wUser, pstz1, pstz2)$?
LcbUnusedEmm	util2.c	?^long LcbUnusedEmm()$?
OkPmt	util2.c	?^void OkPmt ()$?
PchSkipSpacesPch	util2.c	?^CHAR *PchSkipSpacesPch( pch )$?
PmtCmdKc	util2.c	?^void PmtCmdKc()$?
PrettyUpPath	util2.c	?^PrettyUpPath(stPath)$?
StSzAppend	util2.c	?^StSzAppend( st, sz )$?
SzSzAppend	util2.c	?^SzSzAppend( sz1, sz2 )$?
TmcInputPmtMst	util2.c	?^TmcInputPmtMst (mst, szInput, ichMax, bcmKc, mmo)$?
TmcInputPmtSt	util2.c	?^TmcInputPmtSt(stPrompt, szInput, ichMax, bcmKc, mm?
Util2_Last	util2.c	?^Util2_Last(){}$?
WCompSz	util2.c	?^WCompSz(psz1,psz2)$?
XlateCRJToCRLFSzCch	util2.c	?^XlateCRJToCRLFSzCch( sz, cchMax )$?
XlateCRLFToCRJSz	util2.c	?^XlateCRLFToCRJSz( sz )$?
XlateCRLFToLFSz	util2.c	?^XlateCRLFToLFSz( sz )$?
XlateLFToCRJSz	util2.c	?^XlateLFToCRJSz( sz )$?
ActivateWn	wwact.c	?^ActivateWn(hmwd, fActive)$?
AddAllKeysOfBcm	wwact.c	?^AddAllKeysOfBcm(hkmpSearch, hkmpAdd, bcmSrch, bcmA?
AddKeyPfn	wwact.c	?^AddKeyPfn(hkmp, kc, pfn)$?
AddKeyToKmp	wwact.c	?^AddKeyToKmp(hkmp, kc, bcm)$?
AddStFileToMru	wwchange.c	?^AddStFileToMru(st)$?
AdjustDocAreaPrc	wwchange.c	?^AdjustDocAreaPrc( hmwd, ddxp, ddyp )$?
AdjustMwdArea	wwchange.c	?^AdjustMwdArea(hmwd, ddxp, ddyp, fDocAreaFirst)$?
AdjustPane	wwchange.c	?^AdjustPane( hwwd, dyp )$?
AppWndProc	wproc.c	?^long EXPORT FAR PASCAL AppWndProc(hwnd, message, w?
AppWndProcAct	wwact.c	?^long AppWndProcAct(hwnd, message, wParam, lParam)$?
AssertHSzLn	wproc.c	?^AssertHSzLn( h, szFile, line )$?
BSBPwwd	wwact.c	?^static BSBPwwd( pwwd, fBlank )$?
BlankScrollBarsMwd	wwact.c	?^BlankScrollBarsMwd( hmwd, fBlank )$?
BuildRgmwForDoc	wwchange.c	?^BuildRgmwForDoc (doc, rgmw, pimwMac)$?
CchCurSzPath	wwchange.c	?^int CchCurSzPath(szPath, wDrive)$?
CchCurSzPathAs400	wwchange.c	?^int	CchCurSzPathAs400(szPath, wDrive)$?
ChFromKc	wproc.c	?^ChFromKc(kc)$?
CkFarHeaps	wproc.c	?^CkFarHeaps()$?
ClearAbortKeyState	wproc.c	?^ClearAbortKeyState()$?
CloseDocWin	wwchange.c	?^CloseDocWin(hwnd, ac)$?
CloseEveryFn	wproc.c	?^CloseEveryFn( fHardToo )$?
CloseMwPanes	wwchange.c	?^CloseMwPanes(mw)$?
CloseWw	wwchange.c	?^CloseWw(ww)$?
CopyChUpper	wwchange.c	?^NATIVE CopyChUpper( szSource, szDest, cch )$?
CoreNewest	wproc.c	?^CoreNewest(fLoad)$?
CorrectSystemMenu	wwact.c	?^CorrectSystemMenu()$?
DirtyOutline	wwact.c	?^DirtyOutline(doc)$?
DisablePreload	wproc.c	?^DisablePreload()$?
DisposeMwd	wwchange.c	?^DisposeMwd(mw)$?
DoZoom	wwchange.c	?^DoZoom(hwndMw)$?
DocFromSt	wwchange.c	?^DocFromSt(st)$?
Dummy	wproc.c	?^Dummy()$?
EnablePreload	wproc.c	?^EnablePreload(fn)$?
EnsureFocusInPane	wproc.c	?^EnsureFocusInPane()$?
FAbortNewestCmg	wproc.c	?^FAbortNewestCmg (cmg, fLoad, fAbortOk)$?
FCanSplit	wwchange.c	?^FCanSplit(hmwd, wk)$?
FCheckToggleKeyMessage	wproc.c	?^FCheckToggleKeyMessage(lpmsg)$?
FCloseMw	wwchange.c	?^FCloseMw(mw, ac)$?
FConfirmSaveDoc	wwchange.c	?^FConfirmSaveDoc( doc, fForce, ac )$?
FConfirmSaveOnCloseDoc	wwchange.c	?^BOOL FConfirmSaveOnCloseDoc(doc, ac)$?
FDislinkHkmp	wwact.c	?^BOOL FDislinkHkmp(hkmpRemove)$?
FDocBusy	wwact.c	?^FDocBusy(doc)$?
FExistsStFile	wwchange.c	?^FExistsStFile(stFile, fAnywhere)$?
FFailLmemOpus	wproc.c	?^EXPORT FFailLmemOpus (merr, sb, cbNew, cRetry)$?
FInitWinInfo	wproc.c	?^int FInitWinInfo( hInstance, hPrevInstance, lpszCm?
FInsertSystemMenu	wwact.c	?^FInsertSystemMenu(hwnd)$?
FIsKeyMessage	wproc.c	?^BOOL FIsKeyMessage(lpmsg)$?
FNormalizeStFile	wwchange.c	?^FNormalizeStFile( stFile, stFileNorm, nfo )$?
FNormalizeSzFile	wwchange.c	?^FNormalizeSzFile( szFile, szNormal, nfo )$?
FPathCh	wwchange.c	?^BOOL	FPathCh(ch)$?
FRareNULL	wproc.c	?^NATIVE FRareNULL(re,w) /* WINIGNORE - DEBUG only *?
FRareProc	wproc.c	?^NATIVE FRareProc(n) /* WINIGNORE - DEBUG only */$?
FRemoveSystemMenu	wwact.c	?^FRemoveSystemMenu()$?
FSetIdrMac	wwact.c	?^FSetIdrMac(hpldr, idrMac)$?
FSetMenu	wwact.c	?^BOOL FSetMenu(iMenu)$?
FStFileIsNormal	wwchange.c	?^FStFileIsNormal(st)$?
FStillDownReplay	wproc.c	?^FStillDownReplay( ppt, fRightButton )$?
FValidFilename	wwchange.c	?^FValidFilename (stFile, stNorm, szName, pfOnDisk, ?
FValidStFile	wwchange.c	?^FValidStFile( stFile )$?
FValidSubdir	wwchange.c	?^FValidSubdir(sz)$?
FWHKey	wproc.c	?^EXPORT long FAR PASCAL FWHKey(wCode, wParam, lpmsg?
FWindowHidden	wproc.c	?^FWindowHidden(ww)$?
FXpNearStyWndBorder	wproc.c	?^FXpNearStyWndBorder(xp, hwwd)$?
FillRgwsi	wwchange.c	?^FillRgwsi(ww, pwsi, piwsi, prcScrlBar, prcPgvUp, p?
FnFromOnlineSt	wwchange.c	?^int FnFromOnlineSt( st )$?
FntSz	wwchange.c	?^int FntSz(rgch, ichMax, pichError, nfo)$?
ForceCursorChange	wproc.c	?^ForceCursorChange(hwnd, ppt, fExact)$?
GetDocAreaChildRcs	wwchange.c	?^GetDocAreaChildRcs( hmwd, rcMwd, wk, ypSplit, prcT?
GetDocAreaPrc	wwchange.c	?^GetDocAreaPrc( pmwd, prc )$?
GetDocSt	wwchange.c	?^GetDocSt(doc, st, gdso)$?
GetHorzBarRcs	wwchange.c	?^GetHorzBarRcs( pmwd, rcDocArea, prcHorzScroll, prc?
GetMwPrc	wwchange.c	?^GetMwPrc(mw, prc)$?
GetNextHcd	wproc.c	?^GetNextHcd()$?
GetStWndForMw	wwchange.c	?^GetStWndForMw (doc, mw, st, rgmw, imwMac)$?
HidePromptWindow	wproc.c	?^HidePromptWindow()$?
HkmpCreate	wwact.c	?^KMP ** HkmpCreate(ckmeInit, kmf)$?
HkmpNew	wwact.c	?^KMP ** HkmpNew(ckmeInit, kmf)$?
HwndCreateWindowRc	wwchange.c	?^HwndCreateWindowRc( szCls, ws, rc, hwndParent )$?
IbstWndFindMw	wwchange.c	?^IbstWndFindMw (mw)$?
InhibitRecorder	wproc.c	?^InhibitRecorder(pwSav, fInhibit)$?
InitGalleyDr	wwact.c	?^InitGalleyDr(ww)$?
KcNextOfBcm	wwact.c	?^KcNextOfBcm(bcm) /* This is here because of the st?
LMenuChar	wproc.c	?^LONG LMenuChar(hwnd, wParam, lParam)$?
LinkHkmp	wwact.c	?^LinkHkmp(hkmp, kmf)$?
MovePane	wwchange.c	?^MovePane( ww, prc, mpd )$?
MoveWindowRc	wwchange.c	?^MoveWindowRc( hwnd, prc, fPaint )$?
MwFromIbstWnd	wwchange.c	?^MwFromIbstWnd (ibst)$?
MwdSize	wwchange.c	?^MwdSize(hwnd, dxpNew, dypNew)$?
MwdWndProc	wproc.c	?^long EXPORT FAR PASCAL MwdWndProc(hwnd, message, w?
MwdWndProcRare	wwchange.c	?^long MwdWndProcRare(hwnd, message, wParam, lParam)?
NatDummy	wproc.c	?^NATIVE NatDummy() /* WINIGNORE - DEBUG only */$?
NewCurWw	wwact.c	?^NewCurWw(ww, fDoNotSelect)$?
OldestCmg	wproc.c	?^OldestCmg (cmg)$?
OurSetCursor	wproc.c	?^EXPORT PASCAL OurSetCursor(hc)$?
OurSetSas	wproc.c	?^EXPORT OurSetSas(sas)$?
PcodeStartProfiler	wproc.c	?^PcodeStartProfiler()$?
PcodeStopProfiler	wproc.c	?^PcodeStopProfiler()$?
PfnsToStFile	wwchange.c	?^PfnsToStFile( pfns, stFile )$?
PickNewWw	wwact.c	?^PickNewWw()$?
PkmeAddKc	wwact.c	?^KME * PkmeAddKc(hkmp, kc)$?
RSBSetFBlank	wwact.c	?^RSBSetFBlank( hwnd, fBlank )$?
RareWwPaneWndProc	wwchange.c	?^long RareWwPaneWndProc(hwnd, message, wParam, lPar?
RemoveKmp	wwact.c	?^RemoveKmp(hkmpRemove)$?
RemoveWwDisp	wwact.c	?^RemoveWwDisp(doc, ww)$?
ReportFailCalls	wproc.c	?^ReportFailCalls()$?
ReportHeapSz	wproc.c	?^ReportHeapSz (sz, cbDiff)$?
RestorePrompt	wproc.c	?^RestorePrompt ()$?
SaveMenuHelpContext	wproc.c	?^SaveMenuHelpContext(wParam,lParam,cxt)$?
SbMgrError	wproc.c	?^SbMgrError(sberr, sb)$?
SetActiveMw	wwact.c	?^SetActiveMw(mw)$?
SetAppCaptionFromHwnd	wwchange.c	?^SetAppCaptionFromHwnd(hwnd)$?
SetOurKeyState	wproc.c	?^void SetOurKeyState()$?
SetPromptRestore	wproc.c	?^SetPromptRestore (pdc)$?
SetSccCurWw	wwact.c	?^SetSccCurWw(pscc, ww)$?
SetupMenu	wwact.c	?^SetupMenu(docDot)$?
SpecialSelModeEnd	wproc.c	?^SpecialSelModeEnd()$?
StFileAbsToStFileRel	wwchange.c	?^StFileAbsToStFileRel( stFileAbs, stFileRel )$?
StFileToPfns	wwchange.c	?^StFileToPfns( stFile, pfns )$?
StripSzFileName	wwchange.c	?^StripSzFileName(szPath)$?
SynchSccWw	wwact.c	?^SynchSccWw(pscc, ww)$?
SzShortFromStNormFile	wwchange.c	?^SzShortFromStNormFile (szShort, stNorm)$?
TopOfMainLoop	wproc.c	?^TopOfMainLoop()$?
UnZoomWnd	wwchange.c	?^UnZoomWnd(hwnd , prc)$?
UpdateInvalidWw	wproc.c	?^UpdateInvalidWw(ww)$?
UpdateStDOSPath	wwchange.c	?^UpdateStDOSPath()$?
UpdateTitles	wwchange.c	?^UpdateTitles()$?
UpdateTitlesForDoc	wwchange.c	?^UpdateTitlesForDoc(doc)$?
WinMain	wproc.c	?^EXPORT int PASCAL WinMain( hInstance, hPrevInstanc?
Wproc_Last	wproc.c	?^Wproc_Last(){}$?
WwAllocCommon	wwact.c	?^WwAllocCommon(doc, mw, psels, prcwDisp, prcePage, ?
WwPaneGetFocus	wwact.c	?^WwPaneGetFocus(hwnd, hwndPrevFocus)$?
WwPaneLoseFocus	wwact.c	?^WwPaneLoseFocus(hwnd, hwndNewFocus)$?
WwPaneMouse	wproc.c	?^void WwPaneMouse(ww, message, wParam, pt)$?
WwPaneWndProc	wproc.c	?^long EXPORT FAR PASCAL WwPaneWndProc(hwnd, message?
ZoomWnd	wwchange.c	?^ZoomWnd(hwnd)$?
AccumulateDcpEdit	autosave.h	?^#define AccumulateDcpEdit(dcp)  (asd.dcpEdit += (l?
TmrForMinMaxKdcp	autosave.h	?^#define TmrForMinMaxKdcp(mMin,mMax,kdcp) { (mMin)*?
AgtOfAgd	cmdtbl.h	?^#define AgtOfAgd(agd)           ((agd) & 7)$?
CabiFromPsy	cmdtbl.h	?^#define CabiFromPsy(psy)	(*((int *) (PstFromPsy(ps?
CmdExecUcm	cmb.h	?^#define CmdExecUcm(ucm, hcab) (CmdExecBcm((ucm), (?
FCmdAction	cmb.h	?^#define FCmdAction()	(pcmb->fAction)$?
FCmdDialog	cmb.h	?^#define FCmdDialog()	(pcmb->fDialog)$?
FCmdFillCab	cmb.h	?^#define FCmdFillCab()	(pcmb->fDefaults)$?
FElMct	cmdtbl.h	?^#define FElMct(mct)     ((mct) == mctEl)$?
FExecUcm	cmb.h	?^#define FExecUcm(ucm, chm, fExtend) (CmdExecBcmKc(?
FLHIlcd	cmdlook.h	?^#define FLHIlcd(ilcd)         ((ilcd) >= ilcdBold ?
FRulerIlcd	cmdlook.h	?^#define FRulerIlcd(ilcd)      ((ilcd) >= ilcdParaL?
IdLHFromIlcd	cmdlook.h	?^#define IdLHFromIlcd(ilcd)    ((ilcd) - ilcdBold +?
IdRulFromIlcd	cmdlook.h	?^#define IdRulFromIlcd(ilcd)   ((ilcd) - ilcdParaLe?
IeldiFromPsy	cmdtbl.h	?^#define IeldiFromPsy(psy)	(*((int *) (PstFromPsy(p?
IlcdFromIdLH	cmdlook.h	?^#define IlcdFromIdLH(idLH)    ((idLH) + ilcdBold -?
IlcdFromIdRul	cmdlook.h	?^#define IlcdFromIdRul(idRul)  ((idRul) + ilcdParaL?
PstFromPsy	cmdtbl.h	?^#define PstFromPsy(psy)         (&(psy)->stName[0]?
SetCmdMode	cmb.h	?^#define SetCmdMode(cmmNew)	(vcmb.cmm = (cmmNew))$?
AcquireCaAdjust	debug.h	?^#define AcquireCaAdjust() { extern int cCaAdjust; ?
AcquireCaAdjustL	debug.h	?^#define AcquireCaAdjustL() { extern int cCaAdjustL?
AddFontResource	debugwin.h	?^#define AddFontResource(P1) AddFontResourcePR((LPS?
AddRun	debug.h	?^#define AddRun(fn, fc, pch, cch, pfkpd, fPara, fAl?
AddVisiSpaces	debug.h	?^#define AddVisiSpaces(hdc, xpLine, ypLine, prcw) \\?
AdjustCp	debug.h	?^#define AdjustCp(pca, dcpIns) \\$?
AdjustHplcedlCps	debug.h	?^#define AdjustHplcedlCps(hplcedl, cp, dcp) \\$?
ApplyPrlSgc	debug.h	?^#define ApplyPrlSgc(hpprl, cch, prgbProps, sgc) \\$?
Assert	debug.h	?^#define Assert(f) ((f) ? 0 : AssertProc((CHAR *)sz?
AssertDo	debug.h	?^#define AssertDo(f) Assert(f)$?
AssertH	debug.h	?^#define AssertH(h) AssertHSzLn(h,(CHAR *)szAssertF?
AssertPenv	debug.h	?^#define AssertPenv(penv) \\$?
AssertSz	debug.h	?^#define AssertSz(f,sz) ((f) ? 0 : AssertSzProc(SzF?
AssertX	debug.h	?^#define AssertX(f) Assert(f)$?
BFromFc	debug.h	?^#define BFromFc(hpfkp, fc, pfcFirst, pfcLim, pifc)?
Batch	debug.h	?^#define Batch(e) e$?
BeginPaint	debugwin.h	?^#define BeginPaint(P1,P2) BeginPaintPR((HWND) (P1)?
BitBlt	debugwin.h	?^#define BitBlt(P1,P2,P3,P4,P5,P6,P7,P8,P9) BitBltF?
BringWindowToTop	debugwin.h	?^#define BringWindowToTop(P1) BringWindowToTopPR((H?
CachePara	debug.h	?^#define CachePara(doc,cp) \\$?
CacheParaL	debug.h	?^#define CacheParaL(doc, cp, fOutline) \\$?
CacheSectL	debug.h	?^#define CacheSectL(doc, cp, fOutline) \\$?
CallWindowProc	debugwin.h	?^#define CallWindowProc(P1,P2,P3,P4,P5) CallWindowP?
CbGenChpxFromChp	debug.h	?^#define CbGenChpxFromChp(pchpResult, pchp, pchpBas?
CbGenPapxFromPap	debug.h	?^#define CbGenPapxFromPap(ppapx, ppap, ppapBase, fW?
CbGenPrl	debug.h	?^#define CbGenPrl(pprop, ppropBase, sprm, rgb) \\$?
CbGrpprlProp	debug.h	?^#define CbGrpprlProp(f, p1, cb, p2, p3, cw, mpiwsp?
ChMapSpecChar	debug.h	?^#define ChMapSpecChar(ch, chs) \\$?
ChangeMenu	debugwin.h	?^#define ChangeMenu(P1,P2,P3,P4,P5) ChangeMenuFP((H?
CheckDlgButton	debugwin.h	?^#define CheckDlgButton(P1,P2,P3) CheckDlgButtonPR(?
CheckMenuItem	debugwin.h	?^#define CheckMenuItem(P1,P2,P3) CheckMenuItemPR((H?
CheckRadioButton	debugwin.h	?^#define CheckRadioButton(P1,P2,P3,P4) CheckRadioBu?
ClFormatLines	debug.h	?^#define ClFormatLines(plbs, cpLim, dylFill, dylMax?
CloseClipboard	debugwin.h	?^#define CloseClipboard() CloseClipboardPR()$?
CloseTns	debug.h	?^#define CloseTns(pxbc) \\$?
CombineRgn	debugwin.h	?^#define CombineRgn(P1,P2,P3,P4) CombineRgnFP((HRGN?
CopyHdtLrs	debug.h	?^#define CopyHdtLrs(ihdt, plbs, yl, plbsAbs) \\$?
CopyLbs	debug.h	?^#define CopyLbs(plbsFrom, plbsTo) \\$?
CopyLrs	debug.h	?^#define CopyLrs(hpllrFrom, plbsTo, ilrMac, yl, fCo?
CpFormatFrom	debug.h	?^#define CpFormatFrom(ww, doc, cp) \\$?
CpSearchSz	debug.h	?^#define CpSearchSz(pbmib, cpFirst, cpLim, pcpNextR?
CpSearchSzBackward	debug.h	?^#define CpSearchSzBackward(pbmib, cpFirst, cpLim) ?
CpVisibleBackCpField	debug.h	?^#define CpVisibleBackCpField(doc, cp, fvc) \\$?
CpVisibleCpField	debug.h	?^#define CpVisibleCpField(doc, cp, fvc, fIns) \\$?
CreateBitmap	debugwin.h	?^#define CreateBitmap(P1,P2,P3,P4,P5) CreateBitmapF?
CreateBitmapIndirect	debugwin.h	?^#define CreateBitmapIndirect(P1) CreateBMIndirectF?
CreateCaret	debugwin.h	?^#define CreateCaret(P1,P2,P3,P4) CreateCaretPR((HW?
CreateCompatibleBitmap	debugwin.h	?^#define CreateCompatibleBitmap(P1,P2,P3) CreateCom?
CreateCompatibleDC	debugwin.h	?^#define CreateCompatibleDC(P1) CreateCompatDCFP((H?
CreateDC	debugwin.h	?^#define CreateDC(P1,P2,P3,P4) CreateDCFP((LPSTR) (?
CreateFontIndirect	debugwin.h	?^#define CreateFontIndirect(P1) CreateFontIndirectF?
CreateIC	debugwin.h	?^#define CreateIC(P1,P2,P3,P4) CreateICFP((LPSTR) (?
CreateMenu	debugwin.h	?^#define CreateMenu() CreateMenuFP()$?
CreatePatternBrush	debugwin.h	?^#define CreatePatternBrush(P1) CreatePatternBrushF?
CreatePen	debugwin.h	?^#define CreatePen(P1,P2,P3) CreatePenFP((short) (P?
CreatePenIndirect	debugwin.h	?^#define CreatePenIndirect(P1) CreatePenIndirectFP(?
CreateRectRgn	debugwin.h	?^#define CreateRectRgn(P1,P2,P3,P4) CreateRRgnFP((i?
CreateRectRgnIndirect	debugwin.h	?^#define CreateRectRgnIndirect(P1) CreateRRgnIndire?
CreateSolidBrush	debugwin.h	?^#define CreateSolidBrush(P1) CreateSolidBrushFP((D?
CreateWindow	debugwin.h	?^#define CreateWindow(P1,P2,P3,P4,P5,P6,P7,P8,P9,P1?
DcpSkipFieldChPflcd	debug.h	?^#define DcpSkipFieldChPflcd(ch, pflcd, fShowResult?
DdeDbgCommAtom	dde.h	?^#define DdeDbgCommAtom(sz, dcl, atom) \\$?
DdeDbgCommInt	dde.h	?^#define DdeDbgCommInt(sz, w) \\$?
DdeDbgCommLong	dde.h	?^#define DdeDbgCommLong(sz, l) \\$?
DdeDbgCommMsg	dde.h	?^#define DdeDbgCommMsg(sz, dcl, message, wLow, wHig?
DdeDbgCommPost	dde.h	?^#define DdeDbgCommPost(dcl, message, wLow, wHigh) ?
DdeDbgCommSz	dde.h	?^#define DdeDbgCommSz(sz) \\$?
DdeRpt2	dde.h	?^#define DdeRpt2(e)  (vdbs.fCommDde2?(e):0)$?
Debug	debug.h	?^#define Debug(e) e$?
Debug0	debug.h	?^#define Debug0(e) e$?
DefWindowProc	debugwin.h	?^#define DefWindowProc(P1,P2,P3,P4) DefWinProcPR((H?
DeleteDC	debugwin.h	?^#define DeleteDC(P1) DeleteDCFP((HDC) (P1))$?
DeleteObject	debugwin.h	?^#define DeleteObject(P1) DeleteObjectPR((HANDLE) (?
DestroyCaret	debugwin.h	?^#define DestroyCaret() DestroyCaretPR()$?
DestroyMenu	debugwin.h	?^#define DestroyMenu(P1) DestroyMenuPR((HMENU) (P1)?
DestroyWindow	debugwin.h	?^#define DestroyWindow(P1) DestroyWindowPR((HWND) (?
DiskError	debug.h	?^#define DiskError(idpmt, fn, msg)       DiskErrorP?
DisplayFli	debug.h	?^#define DisplayFli( ww, hpldr, idr, dl, ypLine ) \\?
DisplayFliCore	debug.h	?^#define DisplayFliCore( ww, rcClip, xl, yl ) \\$?
DoPrmSgc	debug.h	?^#define DoPrmSgc(prm, prgbProps, sgc) \\$?
DrawInsertLine	debug.h	?^#define DrawInsertLine(psel) \\$?
DrawText	debugwin.h	?^#define DrawText(P1,P2,P3,P4,P5) DrawTextPR((HDC) ?
DxaFromDxp	debug.h	?^#define DxaFromDxp(pwwd, dxp) \\$?
DxpFromDxa	debug.h	?^#define DxpFromDxa(pwwd, dxa) \\$?
EmptyClipboard	debugwin.h	?^#define EmptyClipboard() EmptyClipboardFP()$?
EnableWindow	debugwin.h	?^#define EnableWindow(P1,P2) EnableWindowPR((HWND) ?
EndPaint	debugwin.h	?^#define EndPaint(P1,P2) EndPaintPR((HWND) (P1), (L?
EnterDebug	debug.h	?^#define EnterDebug()    (vfInDebug++)$?
Escape	debugwin.h	?^#define Escape(P1,P2,P3,P4,P5) EscapePR((HDC) (P1)?
ExcludeClipRect	debugwin.h	?^#define ExcludeClipRect(P1,P2,P3,P4,P5) ExcludeCli?
ExitDebug	debug.h	?^#define ExitDebug()     (vfInDebug--)$?
ExtTextOut	debugwin.h	?^#define ExtTextOut(P1,P2,P3,P4,P5,P6,P7,P8) ExtTex?
FAbortLayout	debug.h	?^#define FAbortLayout(fOutline) \\$?
FAddRun	debug.h	?^#define FAddRun(fn, fc, pch, cch, pfkpd, fPara, fA?
FAssignLr	debug.h	?^#define FAssignLr(plbs, dylFill, fEmptyOK) \\$?
FCpVisiInOutline	debug.h	?^#define FCpVisiInOutline(ww, doc, cp, ccp, pcpFirs?
FDoTns	debug.h	?^#define FDoTns(pxbc) \\$?
FFillRgwWithSeqLevs	debug.h	?^#define FFillRgwWithSeqLevs(doc, cp, ipad, ifld, h?
FGetFtnBreak	debug.h	?^#define FGetFtnBreak(plbs, ifrl, pfrl, fpc) \\$?
FGetParaState	debug.h	?^#define FGetParaState(fAll, fAbortOk) \\$?
FGraphicsFcidToPlf	debug.h	?^#define FGraphicsFcidToPlf(fcid, plf, fPrinterFont?
FInTableDocCp	debug.h	?^#define FInTableDocCp(doc, cp) \\$?
FInsertInPlc	debug.h	?^#define FInsertInPlc(hplc, i, cp, pch) \\$?
FInsertRgch	debug.h	?^#define FInsertRgch(doc, cp, rgch, cch, pchp, ppap?
FMarkLine	debug.h	?^#define FMarkLine(psel, hpldr, idr, pedl, cpFirstS?
FNewChpIns	debug.h	?^#define FNewChpIns(doc, cp, pchp, stc) \\$?
FOpenPlc	debug.h	?^#define FOpenPlc(hplc, i, di) \\$?
FRareF	debug.h	?^#define FRareF(n, f) ((f) && !FRareProc(n))$?
FRareT	debug.h	?^#define FRareT(n, f) ((f) || FRareProc(n))$?
FRepl1	debug.h	?^#define FRepl1(pca, fn, fc, dfc) \\$?
FReplace	debug.h	?^#define FReplace(pca, fn, fc, dfc) \\$?
FReplaceCps	debug.h	?^#define FReplaceCps(pcaDel, pcaIns) \\$?
FSearchRgrsym	debug.h	?^#define FSearchRgrsym(sz, pirsym) \\$?
FShowResultPflcdFvc	debug.h	?^#define FShowResultPflcdFvc(pflcd, fvc) \\$?
FStretchPlc	debug.h	?^#define FStretchPlc(hplc, di) \\$?
FUpdTableDr	debug.h	?^#define FUpdTableDr(ww, hpldr, idr) \\$?
FUpdateDr	debug.h	?^#define FUpdateDr(ww, hpldr, idr, rcwInval, fAbort?
FUpdateTable	debug.h	?^#define FUpdateTable(ww, doc, h1, idr, pcp, pyp, h?
FValidFile	doslib.h	?^#define FValidFile(_rgch, _ichMax, _pichError, _fP?
FVisibleCp	debug.h	?^#define FVisibleCp(ww, doc, cp) \\$?
FWidowControl	debug.h	?^#define FWidowControl(plbs, plbsNew, dylFill, fEmp?
FcAppendRgchToFn	debug.h	?^#define FcAppendRgchToFn(fn, pch, cch) \\$?
FetchCp	debug.h	?^#define FetchCp(doc,cp,fcm) \\$?
FetchCpPccpVisible	debug.h	?^#define FetchCpPccpVisible(doc, cp, pccp, fvc, fNe?
FetchVisibleRgch	debug.h	?^#define FetchVisibleRgch(pfvb, fvc, fProps, fNeste?
FfcFormatFieldPdcp	debug.h	?^#define FfcFormatFieldPdcp(pdcp, ww, doc, cp, ch) ?
FillIfldFlcd	debug.h	?^#define FillIfldFlcd(hplcfld, ifld, pflcd) \\$?
FillRect	debugwin.h	?^#define FillRect(P1,P2,P3) FillRectPR((HDC) (P1), ?
FillRgn	debugwin.h	?^#define FillRgn(P1,P2,P3) FillRgnPR((HDC) (P1), (H?
FillWindow	debugwin.h	?^#define FillWindow(P1,P2,P3,P4) FillWindowPR((HWND?
FormatLine	debug.h	?^#define FormatLine( ww, doc, cp ) \\$?
FormatLineDr	debug.h	?^#define FormatLineDr( ww, cp, pdr ) \\$?
FormatLineDxa	debug.h	?^#define FormatLineDxa(ww,doc,cp,dxa) \\$?
FrameEasyTable	debug.h	?^#define FrameEasyTable(ww, doc, cp, hpldr, prclDra?
FreePdrf	debug.h	?^#define FreePdrf(pdrf) \\$?
GetBitmapBits	debugwin.h	?^#define GetBitmapBits(P1,P2,P3) GetBitmapBitsFP((H?
GetClipboardData	debugwin.h	?^#define GetClipboardData(P1) GetClipboardDataPR((W?
GetCpFirstCpLimDisplayPara	debug.h	?^#define GetCpFirstCpLimDisplayPara(ww, doc, cp, pc?
GetDC	debugwin.h	?^#define GetDC(P1) GetDCFP((HWND) (P1))$?
GetEnvironment	debugwin.h	?^#define GetEnvironment(P1,P2,P3) GetEnvironmentPR(?
GetIfldFlcd	debug.h	?^#define GetIfldFlcd(doc, ifld, pflcd) \\$?
GetInputState	debugwin.h	?^#define GetInputState() GetInputStatePR()$?
GetMenu	debugwin.h	?^#define GetMenu(P1) GetMenuPR((HWND) (P1))$?
GetMenuItemCount	debugwin.h	?^#define GetMenuItemCount(P1) GetMenuItemCountPR((H?
GetMenuItemId	debugwin.h	?^#define GetMenuItemId(P1,P2) GetMenuItemIdPR((HMEN?
GetMenuState	debugwin.h	?^#define GetMenuState(P1,P2,P3) GetMenuStatePR((HME?
GetMenuString	debugwin.h	?^#define GetMenuString(P1,P2,P3,P4,P5) GetMenuStrin?
GetMessage	debugwin.h	?^#define GetMessage(P1,P2,P3,P4) GetMessagePR((LPMS?
GetProfileInt	debugwin.h	?^#define GetProfileInt(P1,P2,P3) GetProfileIntPR((L?
GetProfileString	debugwin.h	?^#define GetProfileString(P1,P2,P3,P4,P5) GetProfil?
GetStockObject	debugwin.h	?^#define GetStockObject(P1) GetStockObjectPR((short?
GetTempFileName	debugwin.h	?^#define GetTempFileName(P1,P2,P3,P4) GetTempFileNa?
GetTextExtent	debugwin.h	?^#define GetTextExtent(P1,P2,P3) GetTextExtentPR((H?
GetUpdateRect	debugwin.h	?^#define GetUpdateRect(P1,P2,P3) GetUpdateRectPR((H?
GetWindowDC	debugwin.h	?^#define GetWindowDC(P1) GetWindowDCFP((HWND) (P1))?
GlobalAddAtom	debugwin.h	?^#define GlobalAddAtom(P1) GlobalAddAtomFP((LPSTR) ?
GlobalAlloc	debugwin.h	?^#define GlobalAlloc(P1,P2) GlobalAllocFP((WORD) (P?
GlobalCompact	debugwin.h	?^#define GlobalCompact(P1) GlobalCompactPR((DWORD) ?
GlobalFree	debugwin.h	?^#define GlobalFree(P1) GlobalFreePR((HANDLE) (P1))?
GlobalLock	debugwin.h	?^#define GlobalLock(P1) GlobalLockPR((HANDLE) (P1))?
GlobalLockClip	debugwin.h	?^#define GlobalLockClip(P1) GlobalLockClipFP((HANDL?
GlobalReAlloc	debugwin.h	?^#define GlobalReAlloc(P1,P2,P3) GlobalReAllocFP((H?
GlobalSize	debugwin.h	?^#define GlobalSize(P1) GlobalSizePR((HANDLE) (P1))?
GlobalUnlock	debugwin.h	?^#define GlobalUnlock(P1) GlobalUnlockPR((HANDLE) (?
GlobalWire	debugwin.h	?^#define GlobalWire(P1) GlobalWirePR((HANDLE) (P1))?
GrayString	debugwin.h	?^#define GrayString(P1,P2,P3,P4,P5,P6,P7,P8,P9) Gra?
HideCaret	debugwin.h	?^#define HideCaret(P1) HideCaretPR((HWND) (P1))$?
HpchFromFc	debug.h	?^#define HpchFromFc(fn, fc) \\$?
HpchGetPn	debug.h	?^#define HpchGetPn(fn, pn) \\$?
IInPlc2Mult	debug.h	?^#define IInPlc2Mult(hplc, cp, iFirst) \\$?
IInPlcMult	debug.h	?^#define IInPlcMult(hplc, cp) \\$?
IbpCacheFilePage	debug.h	?^#define IbpCacheFilePage(fn, pn) \\$?
IbpLru	debug.h	?^#define IbpLru() \\$?
IbstFindSzFfn	debug.h	?^#define IbstFindSzFfn(hsttb, pffn) \\$?
IfldFromDocCp	debug.h	?^#define IfldFromDocCp(doc, cp, fMatch) \\$?
IfldInsertDocCp	debug.h	?^#define IfldInsertDocCp(doc, cp) \\$?
IfrdGatherFtnRef	debug.h	?^#define IfrdGatherFtnRef(plbs, plbsNew, ifrd, fNor?
IntersectClipRect	debugwin.h	?^#define IntersectClipRect(P1,P2,P3,P4,P5) Intersec?
InvalCaFierce	debug.h	?^#define InvalCaFierce() \\$?
InvalidateRect	debugwin.h	?^#define InvalidateRect(P1,P2,P3) InvalidateRectPR(?
InvertRect	debugwin.h	?^#define InvertRect(P1,P2) InvertRectPR((HDC) (P1),?
IpcdSplit	debug.h	?^#define IpcdSplit(hplcpcd, cp) \\$?
ItcGetTcx	debug.h	?^#define ItcGetTcx(ww, ptap, itc, ptcx) \\$?
ItcGetTcxCache	debug.h	?^#define ItcGetTcxCache(ww, doc, cp, ptap, itc, ptc?
LbcFormatPara	debug.h	?^#define LbcFormatPara(plbs, dylFill, clLim) \\$?
LineTo	debugwin.h	?^#define LineTo(P1,P2,P3) LineToPR((HDC) (P1), (sho?
LoadBitmap	debugwin.h	?^#define LoadBitmap(P1,P2) LoadBitmapFP((HANDLE) (P?
LoadCursor	debugwin.h	?^#define LoadCursor(P1,P2) LoadCursorFP((HANDLE) (P?
LoadFcidFull	debug.h	?^#define LoadFcidFull( fcid ) \\$?
LoadFont	debug.h	?^#define LoadFont(pchp, fWidth) \\$?
LoadLibrary	debugwin.h	?^#define LoadLibrary(P1) LoadLibraryFP((LPSTR) (P1)?
LoadMenu	debugwin.h	?^#define LoadMenu(P1,P2) LoadMenuFP((HANDLE) (P1), ?
LogGdiHandle	debug.h	?^#define LogGdiHandle(hGdi,wId) (vhgdis ? LogGdiHan?
MakeProcInstance	debugwin.h	?^#define MakeProcInstance(P1,P2) MakeProcInstanceFP?
MapStc	debug.h	?^#define MapStc(pdod, stc, pchp, ppap) \\$?
Mark	debug.h	?^#define Mark(e) MarkProc(e)$?
MessageBeep	debugwin.h	?^#define MessageBeep(P1) MsgBeepPR((WORD) (P1))$?
MessageBox	debugwin.h	?^#define MessageBox(P1,P2,P3,P4) MessageBoxFP((HWND?
MiscPlcLoops	debug.h	?^#define MiscPlcLoops(hplc, iFirst, iLim, pResult, ?
MoveTo	debugwin.h	?^#define MoveTo(P1,P2,P3) MoveToPR((HDC) (P1), (sho?
MoveWindow	debugwin.h	?^#define MoveWindow(P1,P2,P3,P4,P5,P6) MoveWindowPR?
OpenClipboard	debugwin.h	?^#define OpenClipboard(P1) OpenClipboardFP((HWND) (?
OpenFile	debugwin.h	?^#define OpenFile(P1,P2,P3) OpenFilePR((LPSTR) (P1)?
PatBlt	debugwin.h	?^#define PatBlt(P1,P2,P3,P4,P5,P6) PatBltFP((HDC) (?
PchSzRtfMove	debug.h	?^#define PchSzRtfMove(iszRtf, pch) \\$?
PdrFetch	debug.h	?^#define PdrFetch(hpldr, idr, pdrf) \\$?
PdrFetchAndFree	debug.h	?^#define PdrFetchAndFree(hpldr, idr, pdrf) \\$?
PdrFreeAndFetch	debug.h	?^#define PdrFreeAndFetch(hpldr, idr, pdrf) \\$?
PeekMessage	debugwin.h	?^#define PeekMessage(P1,P2,P3,P4,P5) PeekMsgPR((LPM?
PnFromPlcbteFc	debug.h	?^#define PnFromPlcbteFc(hplcbte, fc) \\$?
PopLbs	debug.h	?^#define PopLbs(plbsId, plbsTo) \\$?
PostMessage	debugwin.h	?^#define PostMessage(P1,P2,P3,P4) PostMsgFP((HWND) ?
PostTn	debug.h	?^#define PostTn(pxbc, tnt, h, c) \\$?
Profile	debug.h	?^#define Profile(x)      x$?
PtOrigin	debug.h	?^#define PtOrigin(hpldr, idr) \\$?
PushLbs	debug.h	?^#define PushLbs(plbsFrom, plbsTo) \\$?
PxsInit	debug.h	?^#define PxsInit(pxs, ixsMax, pxbc) \\$?
ReadHprgchFromFn	debug.h	?^#define ReadHprgchFromFn(fn, hpch, cch) \\$?
ReadRgchFromFn	debug.h	?^#define ReadRgchFromFn(fn, pch, cch) \\$?
RegisterClass	debugwin.h	?^#define RegisterClass(P1) RegisterClassFP((LPWNDCL?
ReleaseCaAdjust	debug.h	?^#define ReleaseCaAdjust() { extern int cCaAdjust; ?
ReleaseCaAdjustL	debug.h	?^#define ReleaseCaAdjustL() { extern int cCaAdjustL?
ReleaseCapture	debugwin.h	?^#define ReleaseCapture() ReleaseCapturePR()$?
ReleaseDC	debugwin.h	?^#define ReleaseDC(P1,P2) ReleaseDCFP((HWND) (P1), ?
ReleaseDocScratch	debug.h	?^#define ReleaseDocScratch() Assert (!(fDocScratchI?
ReplaceInPllr	debug.h	?^#define ReplaceInPllr(hpllr, ilr, plr) \\$?
ReportDdeError	dde.h	?^#define ReportDdeError(sz, dcl, message, n) \\$?
ReportF	debug.h	?^#define ReportF(f, id) ((f) ? 0 : ReportProc(id, (?
ReportSz	debug.h	?^#define ReportSz(sz) ( ReportSzProc(SzFrame(sz), (?
ResetFont	debug.h	?^#define ResetFont(fPrinterFont) \\$?
RestoreDC	debugwin.h	?^#define RestoreDC(P1,P2) RestoreDCFP((HDC) (P1), (?
RtfIn	debug.h	?^#define RtfIn(hribl, pch, cch) \\$?
SaveDC	debugwin.h	?^#define SaveDC(P1) SaveDCFP((HDC) (P1))$?
Scribble	debug.h	?^#define Scribble(a, b) (!vdbs.grpfScribble ? 0 : S?
ScrollDC	debugwin.h	?^#define ScrollDC(P1,P2,P3,P4,P5,P6,P7) ScrollDCFP(?
ScrollDrUp	debug.h	?^#define ScrollDrUp(ww, hpldr, idr, h2, dlFrom, dlT?
ScrollWindow	debugwin.h	?^#define ScrollWindow(P1,P2,P3,P4,P5) ScrollWindowP?
SelectClipRgn	debugwin.h	?^#define SelectClipRgn(P1,P2) SelectClipRgnPR((HDC)?
SelectObject	debugwin.h	?^#define SelectObject(P1,P2) SelectObjectFP((HDC) (?
SendMessage	debugwin.h	?^#define SendMessage(P1,P2,P3,P4) SendMsgPR((HWND) ?
SetActiveWindow	debugwin.h	?^#define SetActiveWindow(P1) SetActiveWindowPR((HWN?
SetBkColor	debugwin.h	?^#define SetBkColor(P1,P2) SetBkColorPR((HDC) (P1),?
SetBkMode	debugwin.h	?^#define SetBkMode(P1,P2) SetBkModePR((HDC) (P1), (?
SetCapture	debugwin.h	?^#define SetCapture(P1) SetCapturePR((HWND) (P1))$?
SetClipboardData	debugwin.h	?^#define SetClipboardData(P1,P2) SetClipboardDataPR?
SetCursor	debugwin.h	?^#define SetCursor(P1) SetCursorPR((HCURSOR) (P1))$?
SetErrorMat	debug.h	?^#define SetErrorMat(mat)		SetErrorMatProc(mat)$?
SetFlcdCh	debug.h	?^#define SetFlcdCh(doc, pflcd, ch) \\$?
SetFocus	debugwin.h	?^#define SetFocus(P1) SetFocusPR((HWND) (P1))$?
SetMapperFlags	debugwin.h	?^#define SetMapperFlags(P1,P2) SetMapperFlagsPR((HD?
SetMenu	debugwin.h	?^#define SetMenu(P1,P2) SetMenuFP((HWND) (P1), (HME?
SetTextColor	debugwin.h	?^#define SetTextColor(P1,P2) SetTextColorPR((HDC) (?
SetWindowPos	debugwin.h	?^#define SetWindowPos(P1,P2,P3,P4,P5,P6,P7) SetWind?
ShowCaret	debugwin.h	?^#define ShowCaret(P1) ShowCaretPR((HWND) (P1))$?
ShowCursor	debugwin.h	?^#define ShowCursor(P1) ShowCursorPR((BOOL) (P1))$?
ShowLbs	debug.h	?^#define ShowLbs(a, b) (!vdbs.fShowLbs ? 0 : ShowLb?
ShowWindow	debugwin.h	?^#define ShowWindow(P1,P2) ShowWindowPR((HWND) (P1)?
ShrinkPlc	debug.h	?^#define ShrinkPlc(hplc, iMaxNew, i, di) \\$?
StartProf	debug.h	?^#define StartProf(n) (PcodeStartProfiler(),StartPr?
StartProfiler	debug.h	?^#define StartProfiler(n,m)$?
StartUMeas	debug.h	?^#define StartUMeas(n)$?
StopProf	debug.h	?^#define StopProf()   (StopProfiler(),PcodeStopProf?
StretchBlt	debugwin.h	?^#define StretchBlt(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10,?
TextOut	debugwin.h	?^#define TextOut(P1,P2,P3,P4,P5) TextOutPR((HDC) (P?
TranslateMessage	debugwin.h	?^#define TranslateMessage(P1) TranslateMessagePR((L?
UnhookWindowsHook	debugwin.h	?^#define UnhookWindowsHook(P1,P2) UnhookWindowsHook?
UnlogGdiHandle	debug.h	?^#define UnlogGdiHandle(hGdi,wId) (vhgdis ? UnlogGd?
UpdateWindow	debugwin.h	?^#define UpdateWindow(P1) UpdateWindowPR((HWND) (P1?
ValFromPropSprm	debug.h	?^#define ValFromPropSprm(prgbProps, sprm) \\$?
ValidateRect	debugwin.h	?^#define ValidateRect(P1,P2) ValidateRectPR((HWND) ?
WCompChCh	debug.h	?^#define WCompChCh(ch1, ch2) \\$?
WCompRgchIndex	debug.h	?^#define WCompRgchIndex(hpch1, cch1, hpch2, cch2) \\?
WCompSzSrt	debug.h	?^#define WCompSzSrt(psz1,psz2,fCase) \\$?
WidthHeightFromBrc	debug.h	?^#define WidthHeightFromBrc(brc, grpf) \\$?
WriteHprgchToFn	debug.h	?^#define WriteHprgchToFn(fn, hpch, cch) \\$?
WriteProfileString	debugwin.h	?^#define WriteProfileString(P1,P2,P3) WriteProfileS?
WriteRgchToFn	debug.h	?^#define WriteRgchToFn(fn, pch, cch) \\$?
XDelFndSedPgdPad	debug.h	?^#define XDelFndSedPgdPad(fPlan, pxbc, pxsr) \\$?
XRepl1	debug.h	?^#define XRepl1(fPlan, pxbc, pxsr) \\$?
XReplace	debug.h	?^#define XReplace(fPlan, pxbc, pxsr) \\$?
XReplaceCps	debug.h	?^#define XReplaceCps(fPlan, pxbc, pxsr) \\$?
XpFromDcp	debug.h	?^#define XpFromDcp(dcp1, dcp2, pxpFirst, pich) \\$?
Yield	debugwin.h	?^#define Yield() YieldPR()$?
abs	debug.h	?^#define abs(x) N_abs(x)$?
CbElcr	el.h	?^#define CbElcr(rgchLastField)	((int)&((struct ELCR?
CbEldiOfCelfd	el.h	?^#define CbEldiOfCelfd(celfd)	(sizeof(ELDI) + (celf?
CbFromCdkt	el.h	?^#define CbFromCdkt(cdkt)	(cdkt)$?
CbFromElcc	el.h	?^#define CbFromElcc(elcc)	(mpelcccb[(elcc) - elccLi?
CbOfAhr	el.h	?^#define CbOfAhr(cas,cbData)	(sizeof(struct AHR) + ?
CbOfDkdIdktMac	el.h	?^#define CbOfDkdIdktMac(idktMac)	(sizeof (DKD) + Cb?
CchFromSd	el.h	?^#define CchFromSd(sd)	(*(WORD huge *)HpOfSbIb(sbSt?
EltFromElcc	el.h	?^#define EltFromElcc(elcc)	((elcc) - elccLineNolabe?
ElvFromIeldi	el.h	?^#define ElvFromIeldi(elx)	((elx) + elvFirstIeldi)$?
FApxEQ	el.h	?^#define FApxEQ(w)	((w) == 0)$?
FApxGE	el.h	?^#define FApxGE(w)	((w) >= 0)$?
FApxGT	el.h	?^#define FApxGT(w)	((w) > 0)$?
FApxLE	el.h	?^#define FApxLE(w)	((w) <= 0)$?
FApxLT	el.h	?^#define FApxLT(w)	((w) < 0)$?
FApxNE	el.h	?^#define FApxNE(w)	((w) != 0)$?
FIsElccCh	el.h	?^#define FIsElccCh(ch)	((ch) >= elccMin && (ch) < e?
FRecordElv	el.h	?^#define FRecordElv(elv)		((elv) >= elvNilRecord)$?
HeliNew	el.h	?^ELI **HeliNew(ELG, ELM, WORD (*)(), VOID (*)(), VO?
HpahrOfAd	el.h	?^#define HpahrOfAd(ad)		((struct AHR huge *)			\\$?
HpahrOfPahr	el.h	?^#define HpahrOfPahr(pahr)	((struct AHR huge *)HpOf?
HpchFromSd	el.h	?^#define HpchFromSd(sd)	((BYTE huge *)(&CchFromSd(s?
HpeldiFromHeldi	el.h	?^#define HpeldiFromHeldi(heldi)	((ELDI huge *)				\\?
HpeliOfHeli	el.h	?^#define HpeliOfHeli(heli)	((ELI huge *)HpOfSbIb(sb?
HpeliOfPeli	el.h	?^#define HpeliOfPeli(peli)	((ELI huge *)HpOfSbIb(sb?
Hs16FromSd	el.h	?^#define Hs16FromSd(sd)	((HS16)&CchFromSd(sd))$?
IeldiFromElv	el.h	?^#define IeldiFromElv(elv)	((elv) - elvFirstIeldi)$?
PahrOfAd	el.h	?^#define PahrOfAd(ad)		((struct AHR *)*HpOfSbIb(sbA?
PcabxOfHcab	el.h	?^#define PcabxOfHcab(hcab)	((CABX *)(*hcab))$?
PpvFromCab	el.h	?^#define PpvFromCab(hcab, iag)	((VOID **)(PcabxOfHc?
PvFromCab	el.h	?^#define PvFromCab(hcab, iag)	((VOID *)(&PcabxOfHca?
PvalOfPahr	el.h	?^#define PvalOfPahr(pahr,cas)	((char *)(pahr) + siz?
SetDebug	el.h	?^VOID SetDebug(ELG, ELM, VOID (*)());$?
WFromCab	el.h	?^#define WFromCab(hcab, iag)	((WORD)(PcabxOfHcab(hc?
AcceptLkAhd	fltexp.h	?^#define AcceptLkAhd(_pfeb, ichMin)     /* no actio?
BackTrackLkAhd	fltexp.h	?^#define BackTrackLkAhd(_pfeb, ich)                ?
CbFExp20	ff.h	?^#define CbFExp20(fExpr) ((unsigned)((fExpr)?8:4))$?
CbFedt	fedt.h	?^#define CbFedt(liMac) (sizeof(FEDT)-sizeof(int)+(l?
CbFfnFromCchSzFfn	fontwin.h	?^#define CbFfnFromCchSzFfn(cch) (offset(FFN,szFfn) ?
CbSzOfPffn	fontwin.h	?^#define CbSzOfPffn(pffn) ((pffn)->cbFfnM1 - offset?
ChsPffn	fontwin.h	?^#define ChsPffn(pffn)	(*((char *)(pffn)+(pffn)->cb?
DffISaveFmt	filecvt.h	?^#define DffISaveFmt(iFmt) ((iFmt)+dffSaveMin)$?
FAlphaFE	fltexp.h	?^#define FAlphaFE(ch)		(FAlpha((ch)) || ((ch) == '_?
FAlphaNumFE	fltexp.h	?^#define FAlphaNumFE(ch)		(FAlphaFE((ch)) || FDigit?
FBinOpTi	fltexp.h	?^#define FBinOpTi(_ti)   ((_ti) == tiPlus     || (_?
FEVUndefined	fltexp.h	?^#define FEVUndefined(_ev) ((_ev).iszErrMsg)$?
FiFromTfi	fltexp.h	?^#define FiFromTfi(_tfi)     ((_tfi) & 0x00FF)$?
HfedtFromHwnd	fedt.h	?^#define HfedtFromHwnd(hwnd) ((FEDT **)GetWindowWor?
HwndListBoxFromFedt	fedt.h	?^#define HwndListBoxFromFedt(hfedt)  ((HWND)GetWind?
ISaveFmtDff	filecvt.h	?^#define ISaveFmtDff(dff)  ((dff)-dffSaveMin)$?
IchMod	fltexp.h	?^#define IchMod(_ich)	((_ich) % ichLkAhdMax)$?
InitLkAhd	fltexp.h	?^#define InitLkAhd(_pfeb) ((_pfeb)->ichLkAhdMin = (?
InitPpes	fltexp.h	?^#define InitPpes(_ppes)	((_ppes)->iNest = (_ppes)-?
NullTerminateToken	fltexp.h	?^#define NullTerminateToken(_pfeb)                 ?
PchFromHsz	fedt.h	?^#define PchFromHsz(hsz) ((char *)(*(hsz)))$?
PlblFromPgrbit	ff.h	?^#define PlblFromPgrbit(pgrbit)  ((ELBL *)((unsigne?
PutChInTokenBuf	fltexp.h	?^#define PutChInTokenBuf(_ch, _pfeb)               ?
ResetTokenBuf	fltexp.h	?^#define ResetTokenBuf(_pfeb) ((_pfeb)->ichTokenMac?
ShrinkTokenBuf	fltexp.h	?^#define ShrinkTokenBuf(_pfeb) ((_pfeb)->ichTokenMa?
SkipWhiteSpaces	fltexp.h	?^#define SkipWhiteSpaces(_ch, _pfeb)               ?
StartLkAhd	fltexp.h	?^#define StartLkAhd(_pfeb, pich)						\\$?
Tfi	fltexp.h	?^#define Tfi(_fi, _ti)       ((((_ti) - tiNonCharMi?
TiFromTfi	fltexp.h	?^#define TiFromTfi(_tfi)     ((((_tfi) & 0xFF00) >>?
BFromStm	grstruct.h	?^#define BFromStm()	(BFromVfcStm())$?
BFromTIFF	grstruct.h	?^#define BFromTIFF()	(BFromVfcStm())$?
CheckGrAbort	grstruct.h	?^#define CheckGrAbort() (CheckGrAbortWin(hpc))$?
FreezeHeap	grstruct.h	?^#define FreezeHeap()			FreezeHp()$?
GraphicsError	grstruct.h	?^#define GraphicsError(hpc, idpmt) (EndGraphics(GRE?
MeltHeap	grstruct.h	?^#define MeltHeap()			MeltHp()$?
MultDivU	grstruct.h	?^#define	MultDivU(w, Numer, Denom) (UMultDiv(w, Num?
OutCh	grstruct.h	?^#define OutCh(ch)$?
OutInt	grstruct.h	?^#define OutInt(w1, w2) (CommSzNum (SzShared(""), w?
OutSz	grstruct.h	?^#define OutSz(sz) (CommSz (sz))$?
PsOfLp	grstruct.h	?^#define PsOfLp(lp) ((WORD)(((DWORD)lp >> 16) & 0xf?
ReadTIFFLine	grstruct.h	?^#define	ReadTIFFLine(hpc, hpPlane) (ReadTIFFLineNa?
RgbFromStm	grstruct.h	?^#define RgbFromStm(hprgb, cb) (HprgbFromVfcStm(hpr?
StmGlobalFc	grstruct.h	?^#define StmGlobalFc() (stmGlobal.fc)$?
WFromStm	grstruct.h	?^#define WFromStm()	(WFromVfcStm())$?
umod	grstruct.h	?^#define umod(a,b) (IntAssertProc(a) % IntAssertPro?
CbOfH	heap.h	?^#define CbOfH(h)    	    	(CbSizePpvSbCur(h))$?
CbOfHq	heap.h	?^#define CbOfHq(hq)  	(*((uns HUGE *)HpOfHq(hq)-1))?
CkHeap	heap.h	?^#define CkHeap()    	    	CheckHeap(sbDds)$?
CwOfPfgr	heap.h	?^#define CwOfPfgr(h)	    	((CbOfH(h)+3)>>1)$?
CxtFromIbc	help.h	?^#define CxtFromIbc(ibc) (cxtIconBars + ibc)$?
FChngSizeHCb	heap.h	?^#define FChngSizeHCb(h,cb,f) 	FChngSizeHCbProc(SzF?
FChngSizeHCw	heap.h	?^#define FChngSizeHCw(h,cw,f)  	FChngSizeHCb((h),(c?
FDlgAbout	help.h	?^BOOL FDlgAbout(dlm, tmc, wNew, wOld, wParam)$?
FreeH	heap.h	?^#define FreeH(h)    	    	FreePpv(sbDds,(h))$?
FreeHp	heap.h	?^#define FreeHp(hp)	FreeSb(SbOfHp(hp))$?
FreezeHp	heap.h	?^#define FreezeHp()          	(cHpFreeze++?0:LockHe?
HAllocateCb	heap.h	?^#define HAllocateCb(cb)     	HAllocateCbProc(SzFra?
HAllocateCw	heap.h	?^#define HAllocateCw(cw)     	HAllocateCb((cw)<<1)$?
HExpandHc	heap.h	?^#define HExpandHc(hc) ((uns)PpvMinSb(sbDds)+((uns)?
HcCompactH	heap.h	?^#define HcCompactH(h) (((uns)(h)-(uns)PpvMinSb(sbD?
HpFromPch	heap.h	?^#define HpFromPch(pch)	(HpOfSbIb(sbDds, pch))$?
HpOfHq	heap.h	?^#define HpOfHq(hq)  	(HpOfSbIb(SbOfHp(hq),*(HQ)(hq?
LpFromHp	heap.h	?^#define LpFromHp(hp)	LpConvHp(hp)$?
LpFromHq	heap.h	?^#define LpFromHq(hq)  	LpOfHp(HpOfHq(hq))$?
LpLockHq	heap.h	?^#define LpLockHq(hq)    LpLockHp(HpOfHq(hq))$?
MeltHp	heap.h	?^#define MeltHp()            	(--cHpFreeze?0:Unlock?
MeltHpToZero	heap.h	?^#define MeltHpToZero()          (cHpFreeze?(Unlock?
ReturnOnNoStack	heap.h	?^#define ReturnOnNoStack(cbNeeded, wRet, fReport)  ?
ShakeHeap	heap.h	?^#define ShakeHeap()	    	ShakeHeapSb(sbDds)$?
SmvFromIbc	help.h	?^#define SmvFromIbc(ibc)    (smvIBBase + ibc)$?
SmvFromImk	help.h	?^#define SmvFromImk(imk)    (smvRulerBase + imk)$?
UnlockHq	heap.h	?^#define UnlockHq(hq)    UnlockHp(HpOfHq(hq))$?
BltIbd	iconbar.h	?^#define BltIbd(ibdSrc,pibdDest) \\$?
HibsFromHwndIb	iconbar.h	?^#define HibsFromHwndIb(hwnd) ((HIBS)GetWindowWord(?
HpidbFromIhte	index.h	?^#define HpidbFromIhte(ihte)     ((*prghpIndex)[iht?
blank	insfield.h	?^string separated by a blank (and excluding '['$?
ibdHeader	ibdefs.h	?^ibdHeader(ibdHdr2, dyIconBar, fTrue, ibcHdr, fFals?
ibidCustomWnd	iconbar.h	?^#define ibidCustomWnd(x,y,dx,dy,sz,iibb) \\$?
ibidDialog	iconbar.h	?^#define ibidDialog(x,y,cabi,cbDlt,iibb) \\$?
ibidText	iconbar.h	?^#define ibidText(x,y,dx,dy,sz) \\$?
ibidTextIibb	iconbar.h	?^#define ibidTextIibb(x,y,dx,dy,sz,iibb) \\$?
ibidToggleBmp	iconbar.h	?^#define ibidToggleBmp(x,y,dx,dy,iibb,bcm, fLatch) ?
ibidToggleBmp2	iconbar.h	?^#define ibidToggleBmp2(x,y,dx,dy,iibb,bcm, fLatch,?
ibidToggleText	iconbar.h	?^#define ibidToggleText(x,y,dx,dy,sz,iibb,bcm) \\$?
FAltKc	keys.h	?^#define FAltKc(kc)      ((kc) & 0x400)$?
FCmdKc	keys.h	?^#define FCmdKc(kc) ((uns)((kc) - kcMinVisi) >= kcM?
FCtrlKc	keys.h	?^#define FCtrlKc(kc)     ((kc) & 0x100)$?
FShiftKc	keys.h	?^#define FShiftKc(kc)    ((kc) & 0x200)$?
KcAlt	keys.h	?^#define KcAlt(kc)       ((kc) | 0x400)$?
KcCtrl	keys.h	?^#define KcCtrl(kc)      ((kc) | 0x100)$?
KcShift	keys.h	?^#define KcShift(kc)     ((kc) | 0x200)$?
KcStrip	keys.h	?^#define KcStrip(kc)     ((kc) & 0xff)$?
StripCtrl	keys.h	?^#define StripCtrl(_kc) (0x00FF & (_kc))$?
FreeHmud	menu2.h	?^#define FreeHmud(hmud)	FreeH(hmud)$?
Mst	message.h	?^#define Mst(cxt,st)     ((MST)MakeLong((cxt),(st))?
PmeiCur	macrocmd.h	?^#define PmeiCur() 	PmeiImei((*vhmes)->imeiCur)$?
PmeiImei	macrocmd.h	?^#define PmeiImei(imei)	(&(*vhmes)->rgmei[(imei)])$?
E_CBLP	newexe.h	?^#define E_CBLP(x)       (x).e_cblp$?
E_CP	newexe.h	?^#define E_CP(x)         (x).e_cp$?
E_CPARHDR	newexe.h	?^#define E_CPARHDR(x)    (x).e_cparhdr$?
E_CRLC	newexe.h	?^#define E_CRLC(x)       (x).e_crlc$?
E_CS	newexe.h	?^#define E_CS(x)         (x).e_cs$?
E_CSUM	newexe.h	?^#define E_CSUM(x)       (x).e_csum$?
E_IP	newexe.h	?^#define E_IP(x)         (x).e_ip$?
E_LFANEW	newexe.h	?^#define E_LFANEW(x)     (x).e_lfanew$?
E_LFARLC	newexe.h	?^#define E_LFARLC(x)     (x).e_lfarlc$?
E_MAGIC	newexe.h	?^#define E_MAGIC(x)      (x).e_magic$?
E_MAXALLOC	newexe.h	?^#define E_MAXALLOC(x)   (x).e_maxalloc$?
E_MINALLOC	newexe.h	?^#define E_MINALLOC(x)   (x).e_minalloc$?
E_OVNO	newexe.h	?^#define E_OVNO(x)       (x).e_ovno$?
E_RES	newexe.h	?^#define E_RES(x)        (x).e_res$?
E_SP	newexe.h	?^#define E_SP(x)         (x).e_sp$?
E_SS	newexe.h	?^#define E_SS(x)         (x).e_ss$?
NE_ALIGN	newexe.h	?^#define NE_ALIGN(x)     (x).ne_align$?
NE_AUTODATA	newexe.h	?^#define NE_AUTODATA(x)  (x).ne_autodata$?
NE_CBENTTAB	newexe.h	?^#define NE_CBENTTAB(x)  (x).ne_cbenttab$?
NE_CBNRESTAB	newexe.h	?^#define NE_CBNRESTAB(x) (x).ne_cbnrestab$?
NE_CMOD	newexe.h	?^#define NE_CMOD(x)      (x).ne_cmod$?
NE_CMOVENT	newexe.h	?^#define NE_CMOVENT(x)   (x).ne_cmovent$?
NE_CRC	newexe.h	?^#define NE_CRC(x)       (x).ne_crc$?
NE_CSEG	newexe.h	?^#define NE_CSEG(x)      (x).ne_cseg$?
NE_CSIP	newexe.h	?^#define NE_CSIP(x)      (x).ne_csip$?
NE_ENTTAB	newexe.h	?^#define NE_ENTTAB(x)    (x).ne_enttab$?
NE_FLAGS	newexe.h	?^#define NE_FLAGS(x)     (x).ne_flags$?
NE_HEAP	newexe.h	?^#define NE_HEAP(x)      (x).ne_heap$?
NE_IMPTAB	newexe.h	?^#define NE_IMPTAB(x)    (x).ne_imptab$?
NE_MAGIC	newexe.h	?^#define NE_MAGIC(x)     (x).ne_magic$?
NE_MODTAB	newexe.h	?^#define NE_MODTAB(x)    (x).ne_modtab$?
NE_MTE	newexe.h	?^#define NE_MTE(x)   (x).ne_psegcsum /* DOS 5 MTE h?
NE_NRESTAB	newexe.h	?^#define NE_NRESTAB(x)   (x).ne_nrestab$?
NE_PAUTODATA	newexe.h	?^#define NE_PAUTODATA(x) (WORD)(x).ne_crc$?
NE_PFILEINFO	newexe.h	?^#define NE_PFILEINFO(x) (WORD)((DWORD)(x).ne_crc >?
NE_PNEXTEXE	newexe.h	?^#define NE_PNEXTEXE(x)  (WORD)(x).ne_cbenttab$?
NE_RES	newexe.h	?^#define NE_RES(x)       (x).ne_res$?
NE_RESTAB	newexe.h	?^#define NE_RESTAB(x)    (x).ne_restab$?
NE_REV	newexe.h	?^#define NE_REV(x)       (x).ne_rev$?
NE_RSRCTAB	newexe.h	?^#define NE_RSRCTAB(x)   (x).ne_rsrctab$?
NE_SEGTAB	newexe.h	?^#define NE_SEGTAB(x)    (x).ne_segtab$?
NE_SSSP	newexe.h	?^#define NE_SSSP(x)      (x).ne_sssp$?
NE_STACK	newexe.h	?^#define NE_STACK(x)     (x).ne_stack$?
NE_USAGE	newexe.h	?^#define NE_USAGE(x)     (WORD)*((WORD FAR *)(x)+1)?
NE_VER	newexe.h	?^#define NE_VER(x)       (x).ne_ver$?
NR_ENTRY	newexe.h	?^#define NR_ENTRY(x)     (x).nr_union.nr_intref.nr_?
NR_FLAGS	newexe.h	?^#define NR_FLAGS(x)     (x).nr_flags$?
NR_MOD	newexe.h	?^#define NR_MOD(x)       (x).nr_union.nr_import.nr_?
NR_PROC	newexe.h	?^#define NR_PROC(x)      (x).nr_union.nr_import.nr_?
NR_RES	newexe.h	?^#define NR_RES(x)       (x).nr_union.nr_intref.nr_?
NR_SEGNO	newexe.h	?^#define NR_SEGNO(x)     (x).nr_union.nr_intref.nr_?
NR_SOFF	newexe.h	?^#define NR_SOFF(x)      (x).nr_soff$?
NR_STYPE	newexe.h	?^#define NR_STYPE(x)     (x).nr_stype$?
NS_CBSEG	newexe.h	?^#define NS_CBSEG(x)     (x).ns_cbseg$?
NS_FLAGS	newexe.h	?^#define NS_FLAGS(x)     (x).ns_flags$?
NS_MINALLOC	newexe.h	?^#define NS_MINALLOC(x)  (x).ns_minalloc$?
NS_SECTOR	newexe.h	?^#define NS_SECTOR(x)    (x).ns_sector$?
RN_FLAGS	newexe.h	?^#define RN_FLAGS( x )  (x).rn_flags$?
RN_HANDLE	newexe.h	?^#define RN_HANDLE( x ) (x).rn_handle$?
RN_ID	newexe.h	?^#define RN_ID( x )     (x).rn_id$?
RN_LENGTH	newexe.h	?^#define RN_LENGTH( x ) (x).rn_length$?
RN_OFFSET	newexe.h	?^#define RN_OFFSET( x ) (x).rn_offset$?
RN_USAGE	newexe.h	?^#define RN_USAGE( x )  (x).rn_usage$?
RS_ALIGN	newexe.h	?^#define RS_ALIGN( x ) (x).rs_align$?
RS_LEN	newexe.h	?^#define RS_LEN( x )    (x).rs_len$?
RS_STRING	newexe.h	?^#define RS_STRING( x ) (x).rs_string$?
RT_ID	newexe.h	?^#define RT_ID( x )   (x).rt_id$?
RT_NRES	newexe.h	?^#define RT_NRES( x ) (x).rt_nres$?
RT_PROC	newexe.h	?^#define RT_PROC( x ) (x).rt_proc$?
FApxEQ	ourmath.h	?^#define FApxEQ(w)	((w) == 0)$?
FApxGE	ourmath.h	?^#define FApxGE(w)	((w) >= 0)$?
FApxGT	ourmath.h	?^#define FApxGT(w)	((w) > 0)$?
FApxLE	ourmath.h	?^#define FApxLE(w)	((w) <= 0)$?
FApxLT	ourmath.h	?^#define FApxLT(w)	((w) < 0)$?
FApxNE	ourmath.h	?^#define FApxNE(w)	((w) != 0)$?
FEqCmp	ourmath.h	?^#define FEqCmp(cnv) (cnv == 0)	/* almost always fa?
FGeCmp	ourmath.h	?^#define FGeCmp(cnv) (cnv >= 0)$?
FGtCmp	ourmath.h	?^#define FGtCmp(cnv) (cnv > 0)$?
FLeCmp	ourmath.h	?^#define FLeCmp(cnv) (cnv <= 0)$?
FLtCmp	ourmath.h	?^#define FLtCmp(cnv) (cnv < 0)$?
FNeCmp	ourmath.h	?^#define FNeCmp(cnv) (cnv != 0)$?
PopMPJmp	ourmath.h	?^#define PopMPJmp(_penvPrev) (penvMathError = (_pen?
PushMPJmpEnv	ourmath.h	?^#define PushMPJmpEnv(_env, _penv)		\\$?
FHorzIrcs	preview.h	?^#define FHorzIrcs(ircs) ((ircs) & 1)$?
FQueryAbortCheck	prompt.h	?^#define FQueryAbortCheck() (vpisPrompt==pisNormal??
FTopLeftIrcs	preview.h	?^#define FTopLeftIrcs(ircs)  ((ircs) < 2)$?
IhpsMacPpaf	print.h	?^#define IhpsMacPpaf(ppaf) ((ppaf)->cbPafM1 + (1-of?
IrcsOppIrcs	preview.h	?^#define IrcsOppIrcs(ircs) (((ircs) + 2) % 4)$?
MmoFromCmg	prompt.h	?^#define MmoFromCmg(cmg) ((cmg) & mmoNewestCmg)$?
TAreasOpposite	preview.h	?^#define TAreasOpposite(tAreas)	(3 - tAreas)$?
ZpFromRcIrcs	preview.h	?^#define ZpFromRcIrcs(rc,ircs) (*((int *)&rc + (irc?
maxww	preview.h	?^#define maxww(a,b)	((a) > (b) ? (a) : (b))$?
BrclFromIbrc	rtftbl.h	?^#define BrclFromIbrc(i)    ( ((unsigned) (i)) > ib?
FBkmksInRun	rtf.h	?^#define FBkmksInRun(cpFirst, cpLim)  ( (bkmkRtf.cp?
HrsdFromHwndRuler	ruler.h	?^#define HrsdFromHwndRuler(hwnd) ((struct RSD **)WR?
IifdFromRds	rtf.h	?^#define IifdFromRds(rds)  (rds - rdsTitle)$?
cof	rtf.h	?^#define cof(fld)        offset(CHP, fld)$?
dof	rtf.h	?^#define dof(fld)        offset(DOP, fld)$?
dtrof	rtf.h	?^#define dtrof(fld)      offset(DTR, fld)    /* dat?
picof	rtf.h	?^#define picof(fld)      offset(PIC, fld)$?
pof	rtf.h	?^#define pof(fld)        offset(PAP, fld)$?
rffldof	rtf.h	?^#define rffldof(fld)    offset(RFFLD, fld)  /* use?
riblof	rtf.h	?^#define riblof(fld)     offset(RIBL, fld)$?
sof	rtf.h	?^#define sof(fld)        offset(SEP, fld)$?
tapof	rtf.h	?^#define tapof(fld)      offset(TAP, fld)$?
tcof	rtf.h	?^#define tcof(fld)       offset(TC, fld)$?
BwSLS	status.h	?^#define BwSLS(field)  (offset(SLS, field) / sizeof?
DlToSc	sort.h	?^#define DlToSc(_dl)	  ((_dl) < 0L ? scLess :			\\$?
DxpLeftSE	sedit.h	?^#define DxpLeftSE(dxp)            ((dxp) >> 1)$?
EXOR	sedit.h	?^#define EXOR(a, b)              ( (a) ? !(b) : (b)?
FCHECKSTL	sedit.h	?^#define FCHECKSTL(l, m)      (((l) & (m)) != 0)$?
FChNL_EOL	sort.h	?^#define FChNL_EOL(_ch)  ((_ch) == chReturn || (_ch?
FGETSTL	sedit.h	?^#define FGETSTL(h, m)        (FCHECKSTL(GetWindowL?
FScLessEqual	sort.h	?^#define FScLessEqual(x)   ((x) <= 0)$?
FlmDisplayFromFlags	screen.h	?^#define FlmDisplayFromFlags(fDispAsPrint,fPageView?
ISesFromStl	sedit.h	?^#define ISesFromStl(stl)        ((((int) (stl)) & ?
PfnScFromSot	sort.h	?^#define PfnScFromSot(_sot)						\\$?
PfnSrFromSelPwwd	sort.h	?^#define PfnSrFromSelPwwd(_sel, _pwwd)					\\$?
ch	sorttbl.h	?^#define ch(_i)  ((CHAR) (_i))$?
ischlower	splshare.h	?^#define ischlower(c) loweronly(chCase[c])$?
ischupper	splshare.h	?^#define ischupper(c) upperonly(chCase[c])$?
islegal	splshare.h	?^#define islegal(c)  (chCase[c] & CASE_VALID)$?
loweronly	splshare.h	?^#define loweronly(c)    ((c & CASE_LOWER) && !(c &?
upperonly	splshare.h	?^#define upperonly(c)    ((c & CASE_UPPER) && !(c &?
ALLOCA	wordwin.h	?^#define ALLOCA(cb)  _SYS_PV(7, (unsigned) (cb))$?
AnimateLocalRect	wordwin.h	?^#define AnimateLocalRect(ww, prcBegin, prcAnim)	\\$?
BLTB	wordwin.h	?^#define BLTB(p1,p2,cb) _UOP_VOID(1,0xa6, (CHAR *) ?
BLTBCX	wordwin.h	?^#define BLTBCX(b,lpb,cb) _UOP_VOID(2,0xe6,0xd, (CH?
BLTBV	wordwin.h	?^#define BLTBV(p1,p2,cb) _UOP_PB(1,0xa3, (CHAR *) (?
BLTBX	wordwin.h	?^#define BLTBX(lp1,lp2,cb) _UOP_VOID(2,0xe6,0xf, (C?
BLTBXV	wordwin.h	?^#define BLTBXV(lp1,lp2,cb) _UOP_LPB(2,0xe6,0x24, (?
BLTCX	wordwin.h	?^#define BLTCX(w,lpw,cw) _UOP_VOID(2,0xe6,0xc, (int?
BcmOfSz	wordwin.h	?^#define BcmOfSz(sz)	BcmOfSt(StShared(sz))$?
CacheLlc	wordwin.h	?^#define CacheLlc(cp)$?
CacheSect	wordwin.h	?^#define CacheSect(doc,cp) (FInCa((doc),(cp),(&caSe?
CallCmd	wordwin.h	?^#define CallCmd(bcm)	    \\$?
CchExpZa	wordwin.h	?^#define CchExpZa(ppch, za, ut, cchMax, fUnit) (Cch?
CchIntToPpch	wordwin.h	?^#define CchIntToPpch(n,ppch) (CchLongToPpch((long)?
CchUnsToPpch	wordwin.h	?^#define CchUnsToPpch(n,ppch) (CchLongToPpch((long)?
ChLower	wordwin.h	?^#define ChLower(ch)	    ((CHAR)AnsiLower((LPSTR)(u?
ChainCmd	wordwin.h	?^#define ChainCmd(bcm)	    \\$?
ChainCmdCab	wordwin.h	?^#define ChainCmdCab(bcm)	\\$?
CopySt	wordwin.h	?^#define CopySt( stFrom, stTo )	bltbyte( (stFrom), ?
CxtFromEid	wordwin.h	?^#define CxtFromEid(eid)      ((eid) + 0x6000)$?
CxtFromHid	wordwin.h	?^#define CxtFromHid(hid)      (CxtFromIdd(hid))$?
CxtFromIdd	wordwin.h	?^#define CxtFromIdd(idd)      ((idd) + 0x5000)$?
DisableInval	wordwin.h	?^#define DisableInval() (vfNoInval++)$?
DttmOfMDY	wordwin.h	?^#define DttmOfMDY(m,d,y)    ((((y)&0x1ffL)<<20)+((?
DxaFromDxs	wordwin.h	?^#define DxaFromDxs(pwwd, dxs) NMultDiv((dxs), czaI?
DxpFromDxs	wordwin.h	?^#define DxpFromDxs(dxs) NMultDiv((dxs), cptInch, v?
DxsFromDxa	wordwin.h	?^#define DxsFromDxa(pwwd, dxa) NMultDiv((dxa), vfli?
DxsFromDxp	wordwin.h	?^#define DxsFromDxp(dxp) NMultDiv((dxp), vfli.dxsIn?
DxuFromDxa	wordwin.h	?^#define DxuFromDxa(dxa) NMultDiv((dxa), vfli.dxuIn?
DyaFromDys	wordwin.h	?^#define DyaFromDys(dys) NMultDiv((dys), czaInch, v?
DypFromDya	wordwin.h	?^#define DypFromDya(dya) NMultDiv((dya), vfti.dypIn?
DypFromDys	wordwin.h	?^#define DypFromDys(dys) NMultDiv((dys), cptInch, v?
DysFromDya	wordwin.h	?^#define DysFromDya(dya) NMultDiv((dya), vfli.dysIn?
DysFromDyp	wordwin.h	?^#define DysFromDyp(dyp) NMultDiv((dyp), vfli.dysIn?
DyuFromDya	wordwin.h	?^#define DyuFromDya(dya) NMultDiv((dya), vfli.dyuIn?
EnableInval	wordwin.h	?^#define EnableInval() (AssertDo(vfNoInval--))$?
EraseRc	wordwin.h	?^#define EraseRc(ww, _prc)	\\$?
FDrawPageDrsWw	wordwin.h	?^#define FDrawPageDrsWw(ww)   (PwwdWw(ww)->grpfvisi?
FDrawTableDrsWw	wordwin.h	?^#define FDrawTableDrsWw(ww)  (PwwdWw(ww)->grpfvisi?
FEqNcRgch	wordwin.h	?^#define FEqNcRgch(pch1,pch2,cch) (!FNeNcRgch(pch1,?
FEqNcSt	wordwin.h	?^#define FEqNcSt(st1,st2)        (!FNeNcSt(st1,st2)?
FEqNcSz	wordwin.h	?^#define FEqNcSz(sz1,sz2)        (!FNeNcSz(sz1,sz2)?
FEqualSt	wordwin.h	?^#define FEqualSt( st1, st2 )	FStSame( st1, st2 )$?
FInTableVPapFetch	wordwin.h	?^#define FInTableVPapFetch(doc, cp)  (vpapFetch.fIn?
FNinchForSprmType	wordwin.h	?^#define FNinchForSprmType(sprm)	fFalse$?
FNoHeap	wordwin.h	?^#define FNoHeap(h)		((int)(h) == hNil)$?
FPtInRect	wordwin.h	?^#define FPtInRect(pt, prc)	PtInRect((LPRECT)prc, p?
FStSame	wordwin.h	?^#define FStSame( st1, st2 )	!FNeRgch( (st1), (st2)?
GrowSwapArea	wordwin.h	?^#define GrowSwapArea()      if (!--vcShrinkSwapAre?
HIWORD	wordwin.h	?^#define HIWORD(l)	(__FNATIVE__ ? ((WORD)(((DWORD)(?
HighWord	wordwin.h	?^#define HighWord(l) _UOP_INT(1,0xda, (long) (l))$?
Intl	wordwin.h	?^#define Intl(value, token)  token$?
LOWORD	wordwin.h	?^#define LOWORD(l)	(__FNATIVE__ ? ((WORD)(l)) : Low?
LowWord	wordwin.h	?^#define LowWord(l) _UOP_INT(2,0xe0,0xda, (long) (l?
MAKELONG	wordwin.h	?^#define MAKELONG(lo,hi) (__FNATIVE__ ? ((long)(((u?
Mac	wordwin.h	?^#define Mac(f)$?
MakeLong	wordwin.h	?^#define MakeLong(lo,hi) _UOP_LONG(0, (int) (hi), (?
MwFromHwndMw	wordwin.h	?^#define MwFromHwndMw(hwnd) ((hwnd)==NULL ? mwNil :?
OurAllocA	wordwin.h	?^#define OurAllocA(cb)  ALLOCA(cb)$?
PcabFromHcab	wordwin.h	?^#define PcabFromHcab(hcab)	((AG *)&(*((HCAB)hcab))?
PenNormal	wordwin.h	?^#define PenNormal()$?
PoFromFc	wordwin.h	?^#define PoFromFc(fc)  0$?
PwwdSetWw	wordwin.h	?^#define	PwwdSetWw(ww, cptSame)	PwwdWw(ww)$?
QszLower	wordwin.h	?^#define QszLower(pch)	    (AnsiLower((LPSTR)pch))$?
SaveWds	wordwin.h	?^#define SaveWds(pwds)$?
SectRect	wordwin.h	?^#define SectRect(prcSrc1, prcSrc2, prcDest) (Inter?
SetCrs	wordwin.h	?^#define SetCrs(crs)		OurSetCursor(crs)$?
SetLlcPercentCp	wordwin.h	?^#define SetLlcPercentCp(cpFirst, cpCur, cpLim)$?
ShrinkSwapArea	wordwin.h	?^#define ShrinkSwapArea()    {vcShrinkSwapArea++; O?
Win	wordwin.h	?^#define Win(f)	f$?
WwFromHwnd	wordwin.h	?^#define WwFromHwnd(hwnd) (GetWindowWord((hwnd),IDW?
blt	wordwin.h	?^#define blt( pwFrom, pwTo, cw )    (int *)(__FNATI?
bltbcx	wordwin.h	?^#define bltbcx( bFill, lpbTo, cb )	 (__FNATIVE__ ??
bltbh	wordwin.h	?^#define bltbh( hpbFrom, hpbTo, cb )   (BLTBH( (CHA?
bltbx	wordwin.h	?^#define bltbx( lpbFrom, lpbTo, cb )    (__FNATIVE_?
bltbyte	wordwin.h	?^#define bltbyte( pbFrom, pbTo, cb )    (__FNATIVE_?
bltcx	wordwin.h	?^#define bltcx( wFill, lpwTo, cw )     (__FNATIVE__?
bltx	wordwin.h	?^#define bltx( lpwFrom, lpwTo, cw )  (int FAR *)(__?
xpStartFromcStagger	wordwin.h	?^#define xpStartFromcStagger(cStagger) vdxpStagger+?
ypStartFromcStagger	wordwin.h	?^#define ypStartFromcStagger(cStagger) vdypStagger+?
AddCbOfH	debug\debugcmd.c	?^void AddCbOfH(h, sz, pdhi)$?
AddCbOfHSttb	debug\debugcmd.c	?^void AddCbOfHSttb(hsttb, sz, pdhi)$?
AddCbOfHpl	debug\debugcmd.c	?^void AddCbOfHpl(hplFoo, sz, pdhi)$?
AddCbOfHplc	debug\debugcmd.c	?^void AddCbOfHplc(hplc, sz, pdhi)$?
AddSzLongToBuf	debug\debugcmd.c	?^void AddSzLongToBuf(sz, lnum, pdhi)$?
AddSzToBuf	debug\debugcmd.c	?^void AddSzToBuf(sz,pdhi)$?
AllocationError	debug\debugfn.c	?^AllocationError(ph, szMessage1, szMessage2)$?
AppendAndCheckForEoln	debug\debuginf.c	?^void AppendAndCheckForEoln (ppch, rgch, pchNew)$?
AppendCommaIfNeeded	debug\debuginf.c	?^void AppendCommaIfNeeded (pbAnyProps, ppch, rgch)$?
AssertForSdm	debug\debug.c	?^AssertForSdm(szFile, line)$?
AssertIn	debug\debugscc.c	?^AssertIn(x, xFirst, xLim)$?
AssertProcForNative	debug\debug.c	?^EXPORT AssertProcForNative( mid, lbl )$?
BitBltFP	debug\debugwin.c	?^EXPORT BitBltFP(P1,P2,P3,P4,P5,P6,P7,P8,P9)$?
BitBltTR	debug\debuggdi.c	?^BitBltTR( hdcDest, xpDest, ypDest, dxp, dyp, hdcSr?
BlankBackground	debug\debug2.c	?^NATIVE BlankBackground(hdc, prc)$?
CbDumpDocHandles	debug\debug2.c	?^int CbDumpDocHandles (doc, fDocToo)$?
CbHToPpch	debug\debug2.c	?^int CbHToPpch(pch, h, ppch)$?
CchIntToHexPpch	debug\debuggdi.c	?^int CchIntToHexPpch(n, ppch)$?
CchPchIntToPpch	debug\debug2.c	?^CchPchIntToPpch(pch, w, ppch)$?
CchReadHpch	debug\debugfn.c	?^CchReadHpch( osfn, hpch, cchRead )$?
CfLinkToClipTest	debug\debug2.c	?^CfLinkToClipTest()$?
ChCleanFromCh	debug\debug2.c	?^CHAR ChCleanFromCh(ch)$?
ChConcat	debug\debuginf.c	?^void ChConcat (w1, w2, ppch)$?
ChFHCommand	debug\debug2.c	?^ChFHCommand()$?
ChangeMenuFP	debug\debugwin.c	?^EXPORT ChangeMenuFP(P1,P2,P3,P4,P5)$?
CheckBuffer	debug\debug2.c	?^CheckBuffer(ppch, rgch)$?
CheckIag	debug\debugdlg.c	?^CheckIag( hcab, iag, pDlg )$?
CkBookmarks	debug\debugstr.c	?^CkBookmarks(hsttb, hplcbkf, hplcbkl, cpMac)$?
CkCharRun	debug\debugstr.c	?^CkCharRun (pfLastRunEndCR)$?
CkDlg	debug\debugdlg.c	?^CkDlg(hcab, ptm, itmMac)$?
CkDlgErr	debug\debugdlg.c	?^CkDlgErr(itm, fNeedsHandle)$?
CkDoc	debug\debugstr.c	?^CkDoc(doc)$?
CkDoc2	debug\debugstr.c	?^CkDoc2(doc, fAbortOK)$?
CkDocs	debug\debugstr.c	?^CkDocs(fAbortOK)$?
CkFFetchArgExtents	debug\debug2.c	?^CkFFetchArgExtents()$?
CkFFetchArgText	debug\debug2.c	?^CkFFetchArgText(fTruncate)$?
CkFSpecRun	debug\debugstr.c	?^CkFSpecRun()$?
CkFetchFunc	debug\debug2.c	?^CkFetchFunc (fArgument)$?
CkFib	debug\debugfn.c	?^CkFib(pfib, hfcb)$?
CkFileError	debug\debugfn.c	?^CkFileError(szMessage1, szMessage2, szMessage3)$?
CkFileStructures	debug\debugfn.c	?^CkFileStructures(pfib, fComplex)$?
CkFldIdle	debug\debugstr.c	?^CkFldIdle()$?
CkFn	debug\debugfn.c	?^CkFn(fn)$?
CkFn2	debug\debugfn.c	?^CkFn2(fn, fAbortOK)$?
CkFns	debug\debugfn.c	?^CkFns(fAbortOK)$?
CkGrpprl	debug\debugstr.c	?^CkGrpprl(cbGrpprl, pprl, fFkp)$?
CkHfcb	debug\debugfn.c	?^CkHfcb(hfcb, pfib, fScratch, fCkFileStructures, fA?
CkHhh	debug\debugstr.c	?^CkHhh(hhh, cbMinBlock)$?
CkHplFoo	debug\debugstr.c	?^CkHplFoo(hpl, cbEntry)$?
CkHplc	debug\debugstr.c	?^CkHplc(hplc, fiMacCk, fMult)$?
CkHplcFoo	debug\debugstr.c	?^CkHplcFoo(hplc, cbEntry, fiMacCk)$?
CkHplcMult	debug\debugstr.c	?^CkHplcMult (hplc, cbEntry, fiMacCk)$?
CkHplcbte	debug\debugfn.c	?^CkHplcbte(hplcbte, hfcb, fScratch, fComplex, fPara?
CkHsttb	debug\debugstr.c	?^CkHsttb(hsttb, cbMin)$?
CkMw	debug\debugstr.c	?^CkMw(mw)$?
CkMwds	debug\debugscc.c	?^CkMwds()$?
CkMws	debug\debugstr.c	?^CkMws()$?
CkPLFDE	debug\debugstr.c	?^CkPLFDE(pplfde)$?
CkPaph	debug\debugstr.c	?^CkPaph (doc, fAbortOK)$?
CkPbptb	debug\debugfn.c	?^CkPbptb(pbptb, fAbortOK)$?
CkPdop	debug\debugstr.c	?^CkPdop(pdop)$?
CkPlcfld	debug\debugstr.c	?^CkPlcfld (doc)$?
CkPlcpad	debug\debugstr.c	?^CkPlcpad(doc)$?
CkPrm	debug\debugstr.c	?^CkPrm(prm)$?
CkPstsh	debug\debugstr.c	?^CkPstsh(pstsh)$?
CkScc	debug\debugscc.c	?^CkScc(pscc)$?
CkSccs	debug\debugscc.c	?^CkSccs()$?
CkSprmTables	debug\debugstr.c	?^CkSprmTables()$?
CkText	debug\debugstr.c	?^CkText (fAbortOK)$?
CkTextDoc	debug\debugstr.c	?^CkTextDoc (doc, fAbortOK)$?
CkTlbx	debug\debugstr.c	?^NATIVE CkTlbx(fInitial)$?
CkVfli	debug\debugstr.c	?^NATIVE CkVfli()     /* makes CkVfli visible to han?
CkWw	debug\debugstr.c	?^CkWw(ww)$?
CkWws	debug\debugstr.c	?^CkWws()$?
CmdCkDiskFile	debug\debugfn.c	?^CMD CmdCkDiskFile(pcmb)$?
CmdDbgMemory	debug\debugcmd.c	?^CMD CmdDbgMemory(pcmb)$?
CmdDebug0	debug\debug1.c	?^CMD CmdDebug0 (pcmb)$?
CmdDebug1	debug\debug1.c	?^CMD CmdDebug1 (pcmb)$?
CmdDebug2	debug\debug1.c	?^CMD CmdDebug2 (pcmb)$?
CmdDebug3	debug\debug1.c	?^CMD CmdDebug3 (pcmb)$?
CmdDebug4	debug\debug1.c	?^CMD CmdDebug4 (pcmb)$?
CmdDebug5	debug\debug1.c	?^CMD CmdDebug5 (pcmb)$?
CmdDebug6	debug\debug1.c	?^CMD CmdDebug6 (pcmb)$?
CmdDebug7	debug\debug1.c	?^CMD CmdDebug7 (pcmb)$?
CmdDebug9	debug\debug1.c	?^CMD CmdDebug9 (pcmb)$?
CmdDebugFailures	debug\debugcmd.c	?^CMD CmdDebugFailures(pcmb)$?
CmdDebugPrefs	debug\debugcmd.c	?^CMD CmdDebugPrefs(pcmb)$?
CmdDoTests	debug\debugcmd.c	?^CMD CmdDoTests(pcmb)$?
CmdEatMemory	debug\debugcmd.c	?^CMD CmdEatMemory(pcmb)$?
CmdEnableTests	debug\debugcmd.c	?^CMD CmdEnableTests(pcmb)$?
CmdEnumAllFonts	debug\debugfnt.c	?^CmdEnumAllFonts(pcmb)$?
CmdFileCacheInfo	debug\debuginf.c	?^CMD CmdFileCacheInfo (pcmb)$?
CmdFliInfo	debug\debuginf.c	?^CMD CmdFliInfo(pcmb)$?
CmdFontInfo	debug\debuginf.c	?^CMD CmdFontInfo (pcmb)$?
CmdFreeMemory	debug\debugcmd.c	?^CMD CmdFreeMemory(pcmb)$?
CmdGlobalCompact	debug\debugcmd.c	?^CmdGlobalCompact()$?
CmdHeapInfo	debug\debugcmd.c	?^CMD CmdHeapInfo (pcmb)$?
CmdRareEvents	debug\debugcmd.c	?^CMD CmdRareEvents(pcmb)$?
CmdRefreshSpeed	debug\debugcmd.c	?^CMD CmdRefreshSpeed(pcmb)$?
CmdScanAlerts	debug\debugcmd.c	?^CmdScanAlerts()$?
CmdScanDialogs	debug\debugdlg.c	?^CMD CmdScanDialogs()$?
CmdScribble	debug\debugcmd.c	?^CMD CmdScribble(pcmb)$?
CmdSelectionInfo	debug\debuginf.c	?^CMD CmdSelectionInfo (pcmb)$?
CmdTestFunction	debug\debugcmd.c	?^CMD CmdTestFunction(pcmb)$?
CmdTestX	debug\debug1.c	?^CMD CmdTestX(pcmb)$?
CmdUseC1Versions	debug\debugcmd.c	?^CMD CmdUseC1Versions(pcmb)$?
CmdUseC2Versions	debug\debugcmd.c	?^CMD CmdUseC2Versions(pcmb)$?
CmdUseC3Versions	debug\debugcmd.c	?^CMD CmdUseC3Versions(pcmb)$?
CmdUseC4Versions	debug\debugcmd.c	?^CMD CmdUseC4Versions(pcmb)$?
CombineRgnFP	debug\debugwin.c	?^EXPORT CombineRgnFP(P1,P2,P3,P4)$?
CommHdr	debug\debug1.c	?^CommHdr(sz,ich)$?
CommMultiLineSz	debug\debug.c	?^CommMultiLineSz (sz)$?
CommNLFFontAttr	debug\debug1.c	?^CommNLFFontAttr(szHeader, fItalic, fStrikeOut,fUnd?
CommNumRgch	debug\debug.c	?^CommNumRgch(num, rgch, cchIn)$?
CommStNL	debug\debug2.c	?^CommStNL(st)$?
CommSz	debug\debug.c	?^CommSz(sz)$?
CommSzCrLf	debug\debug2.c	?^CommSzCrLf (sz)$?
CommSzLong	debug\debug.c	?^CommSzLong( sz, lval )$?
CommSzLrgNum	debug\debug.c	?^CommSzLrgNum( sz, lprgw, iwMax )     /* for far da?
CommSzNum	debug\debug.c	?^EXPORT CommSzNum( sz, num )$?
CommSzNumNoLF	debug\debug1.c	?^CommSzNumNoLF( sz, num )$?
CommSzNumSzNum	debug\debug2.c	?^CommSzNumSzNum(sz1, n1, sz2, n2)$?
CommSzPnum	debug\debug.c	?^CommSzPnum(sz, pnum)$?
CommSzRgCch	debug\debug.c	?^CommSzRgCch(sz, rgch, cchIn)$?
CommSzRgNum	debug\debug.c	?^CommSzRgNum( sz, rgw, iwMax )$?
CommSzRgbCb	debug\debug.c	?^CommSzRgbCb(sz, rgb, cbMax)$?
CommSzSt	debug\debug.c	?^CommSzSt(sz, st)$?
CommSzSz	debug\debug.c	?^EXPORT CommSzSz( sz1, sz2 )$?
CommSzSzAnsi	debug\debug.c	?^CommSzSzAnsi( sz, szAnsi )$?
ConcatNameAndEquals	debug\debuginf.c	?^void ConcatNameAndEquals (sz, ppch)$?
CprcReadFilePrcs	debug\debugfn.c	?^int CprcReadFilePrcs(fUseAssertions, cbClx)$?
CreateBMIndirectFP	debug\debugwin.c	?^EXPORT CreateBMIndirectFP(P1)$?
CreateBitmapFP	debug\debugwin.c	?^EXPORT CreateBitmapFP(P1,P2,P3,P4,P5)$?
CreateCompatBitmapFP	debug\debugwin.c	?^EXPORT CreateCompatBitmapFP(P1,P2,P3)$?
CreateCompatDCFP	debug\debugwin.c	?^EXPORT CreateCompatDCFP(P1)$?
CreateDCFP	debug\debugwin.c	?^EXPORT CreateDCFP(P1,P2,P3,P4)$?
CreateFontIndirectFP	debug\debugwin.c	?^EXPORT CreateFontIndirectFP(P1)$?
CreateICFP	debug\debugwin.c	?^EXPORT CreateICFP(P1,P2,P3,P4)$?
CreateMenuFP	debug\debugwin.c	?^EXPORT CreateMenuFP()$?
CreatePatternBrushFP	debug\debugwin.c	?^EXPORT CreatePatternBrushFP(P1)$?
CreatePenFP	debug\debugwin.c	?^EXPORT CreatePenFP(P1,P2,P3)$?
CreatePenIndirectFP	debug\debugwin.c	?^EXPORT CreatePenIndirectFP(P1)$?
CreateRRgnFP	debug\debugwin.c	?^EXPORT CreateRRgnFP(P1,P2,P3,P4)$?
CreateRRgnIndirectFP	debug\debugwin.c	?^EXPORT CreateRRgnIndirectFP(P1)$?
CreateSolidBrushFP	debug\debugwin.c	?^EXPORT CreateSolidBrushFP(P1)$?
CreateWindowFP	debug\debugwin.c	?^EXPORT CreateWindowFP(P1,P2,P3,P4,P5,P6,P7,P8,P9,P?
DdeDbgCommAtomProc	debug\debugdde.c	?^DdeDbgCommAtomProc (sz, dcl, atom)$?
DdeDbgCommIntProc	debug\debugdde.c	?^DdeDbgCommIntProc (sz, w)$?
DdeDbgCommLongProc	debug\debugdde.c	?^DdeDbgCommLongProc (sz, l)$?
DdeDbgCommMsgProc	debug\debugdde.c	?^DdeDbgCommMsgProc(sz, dcl, message, wLow, wHigh)$?
DdeDbgCommPostProc	debug\debugdde.c	?^DdeDbgCommPostProc (dcl, message, wLow, wHigh)$?
DdeDbgCommSzProc	debug\debugdde.c	?^DdeDbgCommSzProc(sz)$?
DeleteDCFP	debug\debugwin.c	?^EXPORT DeleteDCFP(P1)$?
DeleteDCTR	debug\debuggdi.c	?^DeleteDCTR(hdc)$?
DoFarHeapTest	debug\debug2.c	?^DoFarHeapTest()$?
DoJump	debug\debug1.c	?^DoJump(penv)$?
DumpDcl	debug\debugdde.c	?^DumpDcl (dcl)$?
DumpDde	debug\debugdde.c	?^DumpDde ()$?
DumpDdes	debug\debugdde.c	?^DumpDdes ()$?
DumpDocs	debug\debug2.c	?^DumpDocs()$?
DumpFarSbHeaps	debug\debug2.c	?^DumpFarSbHeaps()$?
DumpGrpchr	debug\debug1.c	?^DumpGrpchr()$?
DumpHeap	debug\debug2.c	?^DumpHeap(sb)$?
DumpHeapUsage	debug\debug2.c	?^DumpHeapUsage()$?
DumpIddliClient	debug\debugdde.c	?^DumpIddliClient (iddli)$?
DumpIddliServer	debug\debugdde.c	?^DumpIddliServer (iddli)$?
DumpMetaRec	debug\debug1.c	?^DumpMetaRec(lpMFR)$?
DumpOrgExt	debug\debug1.c	?^DumpOrgExt(hdc)$?
DumpPv	debug\debug2.c	?^DumpPv(pv, cb, rgch)$?
DumpQueue	debug\debugdde.c	?^DumpQueue (hque)$?
DumpState	debug\debug2.c	?^DumpState()$?
DumpVfli	debug\debug2.c	?^DumpVfli()$?
EatHeap	debug\debugcmd.c	?^EatHeap(cb, ph)$?
EmptyClipboardFP	debug\debugwin.c	?^EXPORT EmptyClipboardFP()$?
EnableWindowFP	debug\debugwin.c	?^EXPORT EnableWindowFP(P1,P2)$?
EndCommSz	debug\debugdde.c	?^EndCommSz (ppch, pch)$?
ExtTextOutFP	debug\debugwin.c	?^EXPORT ExtTextOutFP(P1,P2,P3,P4,P5,P6,P7,P8)$?
ExtTextOutTR	debug\debuggdi.c	?^ExtTextOutTR(hdc,xp,yp,eto,lprcOpaque,lpch, cch, l?
FCkFldForDelete	debug\debugstr.c	?^EXPORT FCkFldForDelete (doc, cpFirst, cpLim)$?
FDlgDbgFail	debug\debugcmd.c	?^BOOL	FDlgDbgFail(dlm, tmc, wNew, wOld, wParam)$?
FDlgDbgMemory	debug\debugcmd.c	?^BOOL	FDlgDbgMemory(dlm, tmc, wNew, wOld, wParam)$?
FDlgRareEvents	debug\debugcmd.c	?^BOOL	FDlgRareEvents(dlm, tmc, wNew, wOld, wParam)$?
FDlgTestFunction	debug\debugcmd.c	?^BOOL FDlgTestFunction(dlm, tmc, wNew, wOld, wParam?
FDlgUseC1Versions	debug\debugcmd.c	?^BOOL FDlgUseC1Versions(dlm, tmc, wNew, wOld, wPara?
FDlgUseC2Versions	debug\debugcmd.c	?^BOOL FDlgUseC2Versions(dlm, tmc, wNew, wOld, wPara?
FDlgUseC3Versions	debug\debugcmd.c	?^BOOL FDlgUseC3Versions(dlm, tmc, wNew, wOld, wPara?
FDlgUseC4Versions	debug\debugcmd.c	?^BOOL FDlgUseC4Versions(dlm, tmc, wNew, wOld, wPara?
FFailWinOp	debug\debugwin.c	?^BOOL FFailWinOp()$?
FGetPn	debug\debugfn.c	?^FGetPn(fScratch, pn, pchText)$?
FGetPnFromCache	debug\debugfn.c	?^int FGetPnFromCache(fn, pn, pchText)$?
FIsRealDoc	debug\debugstr.c	?^FIsRealDoc (doc)$?
FIsStockObj	debug\debugwin.c	?^BOOL FIsStockObj(h)$?
FReadFileRgch	debug\debugfn.c	?^int FReadFileRgch(hpch, cchRead, szMessage1, szMes?
FValidFn	debug\debugfn.c	?^FValidFn(fn)$?
FakeRtfClipboard	debug\debug1.c	?^FakeRtfClipboard()$?
FcCkFkp	debug\debugfn.c	?^FC FcCkFkp(hfcb, pfkp, fPara, fScratch)$?
FillHq	debug\debug2.c	?^FillHq(hq, ichMin, ichLim)$?
FindGrpprl	debug\debuginf.c	?^void FindGrpprl (prm, pcch, ppprl, grpprl)$?
FontNameDebugEnum	debug\debugfnt.c	?^EXPORT BOOL far PASCAL FontNameDebugEnum( lplf, lp?
FontSizeDebugEnum	debug\debugfnt.c	?^EXPORT BOOL far PASCAL FontSizeDebugEnum( lplf, lp?
GetBitmapBitsFP	debug\debugwin.c	?^EXPORT LONG GetBitmapBitsFP(P1,P2,P3)$?
GetDCFP	debug\debugwin.c	?^EXPORT GetDCFP(P1)$?
GetDCTR	debug\debuggdi.c	?^GetDCTR(hwnd)$?
GetStateInfo	debug\debug2.c	?^EXPORT GetStateInfo(rgch1, rgch2)$?
GetWindowDCFP	debug\debugwin.c	?^EXPORT GetWindowDCFP(P1)$?
GlobalAddAtomFP	debug\debugwin.c	?^EXPORT GlobalAddAtomFP(P1)$?
GlobalAllocFP	debug\debugwin.c	?^EXPORT GlobalAllocFP(P1,P2)$?
GlobalLockClipFP	debug\debugwin.c	?^EXPORT LPSTR GlobalLockClipFP(P1)$?
GlobalReAllocFP	debug\debugwin.c	?^EXPORT GlobalReAllocFP(P1,P2,P3)$?
HpOfHq	debug\debugfn.c	?^#define HpOfHq(hq)  	(HpOfSbIb(SbOfHp(hq),*(HQ)(hq?
HplReadFilePl	debug\debugfn.c	?^struct PL **HplReadFilePl(cbEntry, szName)$?
HplcReadFilePlc	debug\debugfn.c	?^struct PLC **HplcReadFilePlc(fcRead, cchRead, cbEn?
HsttbReadFileSttb	debug\debugfn.c	?^struct STTB **HsttbReadFileSttb(szName, fStyleRule?
IbstFromBst	debug\debugstr.c	?^IbstFromBst(hpbst, ibstMac, bstPrevPlus1, bst)$?
IhqCommand	debug\debug2.c	?^IhqCommand()$?
InsertBogusness	debug\debug2.c	?^InsertBogusness()$?
InsertFieldWithArgs	debug\debug2.c	?^InsertFieldWithArgs()$?
IntToPpch	debug\debuginf.c	?^void IntToPpch (ppch, w)$?
IntersectClipRectFP	debug\debugwin.c	?^EXPORT IntersectClipRectFP(P1,P2,P3,P4,P5)$?
LoadBitmapFP	debug\debugwin.c	?^EXPORT LoadBitmapFP(P1,P2)$?
LoadCursorFP	debug\debugwin.c	?^EXPORT LoadCursorFP(P1,P2)$?
LoadLibraryFP	debug\debugwin.c	?^EXPORT LoadLibraryFP(P1)$?
LoadMenuFP	debug\debugwin.c	?^EXPORT LoadMenuFP(P1,P2)$?
MakeProcInstanceFP	debug\debugwin.c	?^EXPORT FARPROC MakeProcInstanceFP(P1,P2)$?
MarkProc	debug\debug1.c	?^MarkProc(n)$?
MessageBoxFP	debug\debugwin.c	?^EXPORT MessageBoxFP(P1,P2,P3,P4)$?
OpenClipboardFP	debug\debugwin.c	?^EXPORT OpenClipboardFP(P1)$?
OutputBuf	debug\debugcmd.c	?^void OutputBuf(pdhi)$?
OutputChIfDiff	debug\debuginf.c	?^void OutputChIfDiff (sz, ch, chS, ppch, rgch, pbAn?
OutputCharacterProps	debug\debuginf.c	?^void OutputCharacterProps (pchp, pchpS, ppch, rgch?
OutputChpXInfo	debug\debuginf.c	?^void OutputChpXInfo (chpX, fcMin, fcMac, ppch, rgc?
OutputDocType	debug\debugcmd.c	?^void OutputDocType(doc, pdhi)$?
OutputFce	debug\debuginf.c	?^void OutputFce(sz, szVfti, pfce, ppch, rgch)$?
OutputFcid	debug\debuginf.c	?^void OutputFcid(sz, pfcid, ppch, rgch)$?
OutputGrpprlInfo	debug\debuginf.c	?^void OutputGrpprlInfo (sgc, cch, hpprl, ppch, rgch?
OutputIfOne	debug\debuginf.c	?^void OutputIfOne (sz, w, ppch, rgch, pbAnyProps)$?
OutputInt	debug\debuginf.c	?^void OutputInt(sz, w, ppch, rgch, pbAnyOutput)$?
OutputLongIfDiff	debug\debuginf.c	?^void OutputLongIfDiff (sz, l, lS, ppch, rgch, pbAn?
OutputParagraphProps	debug\debuginf.c	?^void OutputParagraphProps (ppap, ppapS, ppch, rgch?
OutputRgchDiffs	debug\debuginf.c	?^void OutputRgchDiffs (sz, i, rgch, rgchS, ppch, rg?
OutputRgtcDiffs	debug\debuginf.c	?^void OutputRgtcDiffs (sz, i, rgtc, rgtcS, ppch, rg?
OutputRgtcRgwDiffs	debug\debuginf.c	?^void OutputRgtcRgwDiffs (szrgtc, szrgw, irgw, rg, ?
OutputRgtcWIfDiff	debug\debuginf.c	?^void OutputRgtcWIfDiff (sz, szw, w, wS, ppch, rgch?
OutputRgwDiffs	debug\debuginf.c	?^void OutputRgwDiffs (sz, i, rgw, rgwS, ppch, rgch,?
OutputSelFlags	debug\debuginf.c	?^void OutputSelFlags (ppch, rgch)$?
OutputSzNearFar	debug\debugcmd.c	?^void OutputSzNearFar(sz,cbNear,lcbFar, pdhi)$?
OutputTextMetrics	debug\debuginf.c	?^void OutputTextMetrics (ptm, ppch, rgch)$?
OutputUnsIfDiff	debug\debuginf.c	?^void OutputUnsIfDiff (sz, u, uS, ppch, rgch, pbAny?
OutputVftiInfo	debug\debuginf.c	?^void OutputVftiInfo(sz, pvfti, ppch, rgch)$?
OutputWIfDiff	debug\debuginf.c	?^void OutputWIfDiff (sz, w, wS, ppch, rgch, pbAnyPr?
PBytesToHexPpch	debug\debuginf.c	?^void PBytesToHexPpch (pBytes, ppch, cBytes) $?
PCJDbg1	debug\debug2.c	?^PCJDbg1()$?
PCJDbg2	debug\debug2.c	?^PCJDbg2()$?
PCJDbg3	debug\debug2.c	?^PCJDbg3()$?
PatBltFP	debug\debugwin.c	?^EXPORT PatBltFP(P1,P2,P3,P4,P5,P6)$?
PatBltTR	debug\debuggdi.c	?^PatBltTR( hdcDest, xpDest, ypDest, dxp, dyp, rop )?
PchToPpch	debug\debuginf.c	?^void PchToPpch (pchFrom, ppchTo)$?
PostMsgFP	debug\debugwin.c	?^EXPORT PostMsgFP(P1,P2,P3,P4)$?
PutAtomInCommSz	debug\debugdde.c	?^PutAtomInCommSz (atom, cch, ppch)$?
PutBoolInCommSz	debug\debugdde.c	?^PutBoolInCommSz (f, cch, ppch)$?
PutIntInCommSz	debug\debugdde.c	?^PutIntInCommSz (w, cDigit, cch, ppch)$?
PutMessageInCommSz	debug\debugdde.c	?^PutMessageInCommSz (dcl, message, wLow, wHigh, ppc?
PutStInCommSz	debug\debugdde.c	?^PutStInCommSz (st, cch, ppch)$?
PutSzInCommSz	debug\debugdde.c	?^PutSzInCommSz (sz, cch, ppch)$?
ReadDebugStateInfo	debug\debugcmd.c	?^ReadDebugStateInfo()$?
RegisterClassFP	debug\debugwin.c	?^EXPORT RegisterClassFP(P1)$?
ReleaseDCFP	debug\debugwin.c	?^EXPORT ReleaseDCFP(P1,P2)$?
ReleaseDCTR	debug\debuggdi.c	?^ReleaseDCTR(hwnd, hdc)$?
ReportDdeErrorProc	debug\debugdde.c	?^ReportDdeErrorProc (sz, dcl, message, n)$?
RestoreDCFP	debug\debugwin.c	?^EXPORT RestoreDCFP(P1,P2)$?
RestoreDCTR	debug\debuggdi.c	?^RestoreDCTR(hdc,ilevel)$?
SaveDCFP	debug\debugwin.c	?^EXPORT SaveDCFP(P1)$?
SaveDCTR	debug\debuggdi.c	?^SaveDCTR(hdc)$?
ScrapCRLF	debug\debugfnt.c	?^ScrapCRLF()$?
ScrapNum	debug\debugfnt.c	?^ScrapNum(num)$?
ScrapSz	debug\debugfnt.c	?^ScrapSz(sz)$?
ScrapSzNum	debug\debugfnt.c	?^ScrapSzNum(sz,num)$?
ScribbleDirty	debug\debug2.c	?^ScribbleDirty(doc)$?
ScribbleForTest	debug\debugrep.c	?^ScribbleForTest(ch)$?
ScribbleSz	debug\debug2.c	?^ScribbleSz(sz)$?
ScrollDCFP	debug\debugwin.c	?^EXPORT ScrollDCFP(P1,P2,P3,P4,P5,P6,P7)$?
ScrollDCTR	debug\debuggdi.c	?^ScrollDCTR(hdc,dxp,dyp,lprcT,lprcClip,hrgnUpdate,l?
SelectObjectFP	debug\debugwin.c	?^EXPORT SelectObjectFP(P1,P2)$?
SelectObjectTR	debug\debuggdi.c	?^SelectObjectTR(hdc,h)$?
SendBuffer	debug\debug2.c	?^SendBuffer(ppch, rgch)$?
SetHDebugSize	debug\debugcmd.c	?^SetHDebugSize(cb, ph)$?
SetHeapSize	debug\debugcmd.c	?^SetHeapSize(cb,ph)$?
SetMenuFP	debug\debugwin.c	?^EXPORT SetMenuFP(P1,P2)$?
ShowChp	debug\debug2.c	?^ShowChp(doc, cp, pchp)$?
ShowChpSelCur	debug\debug2.c	?^ShowChpSelCur()$?
ShowDisplayPara	debug\debug2.c	?^ShowDisplayPara()$?
ShowFetch	debug\debug2.c	?^ShowFetch(doc)$?
ShowFetchVisible	debug\debug2.c	?^ShowFetchVisible()$?
ShowFfbFlags	debug\debug2.c	?^ShowFfbFlags (pffb)$?
ShowFfbSwitches	debug\debug2.c	?^ShowFfbSwitches (pffb, fSys)$?
ShowFieldInfo	debug\debug2.c	?^ShowFieldInfo ()$?
ShowHq	debug\debug2.c	?^ShowHq(ihq, phq, pcb)$?
ShowPatBlts	debug\debug2.c	?^ShowPatBlts()$?
ShowRgcr	debug\debug2.c	?^ShowRgcr (pcr, ccr)$?
SprmToPpch	debug\debuginf.c	?^void SprmToPpch(sprm, ppch)$?
StCS	debug\debug.c	?^#define StCS(s) StMap(s, 1)$?
StretchBltFP	debug\debugwin.c	?^EXPORT StretchBltFP(P1,P2,P3,P4,P5,P6,P7,P8,P9,P10?
StretchBltTR	debug\debuggdi.c	?^StretchBltTR( hdcDest, xpDest, ypDest, dxp, dyp,$?
SubTotalDhi	debug\debugcmd.c	?^void SubTotalDhi(pdhi)$?
TestA	debug\debugcmd.c	?^TestA()$?
TestB	debug\debugcmd.c	?^TestB()$?
TestC	debug\debugcmd.c	?^TestC()$?
TestDdeMisc	debug\debugdde.c	?^TestDdeMisc ()$?
TestDequeue	debug\debugdde.c	?^TestDequeue ()$?
TestEnqueue	debug\debugdde.c	?^TestEnqueue ()$?
TestExternalPlcs	debug\debug2.c	?^TestExternalPlcs()$?
TestFieldFetchFuncs	debug\debug2.c	?^TestFieldFetchFuncs ()$?
TestFieldsDisplay	debug\debug2.c	?^TestFieldsDisplay()$?
TestFormat	debug\debug.c	?^TestFormat()$?
TestPl	debug\debugstr.c	?^TestPl()$?
TestPlc	debug\debugstr.c	?^TestPlc()$?
TestPushQueue	debug\debugdde.c	?^TestPushQueue ()$?
TestPutCps	debug\debug2.c	?^TestPutCps()$?
TestReplaceCps	debug\debugrep.c	?^TestReplaceCps()$?
TestRmField	debug\debug2.c	?^TestRmField()$?
TestScanFnForBytes	debug\debug2.c	?^TestScanFnForBytes()$?
TestScc	debug\debugscc.c	?^TestScc()$?
TestSttb	debug\debugstr.c	?^TestSttb()$?
TestUpdateRuler	debug\debug2.c	?^TestUpdateRuler()$?
TraceFunc	debug\debuggdi.c	?^TraceFunc(szFunc)$?
TraceFuncRgw	debug\debuggdi.c	?^TraceFuncRgw(szFunc,rgw,cw)$?
TraceFuncW	debug\debuggdi.c	?^TraceFuncW(szFunc,szParm1,wParm1)$?
TraceFuncWW	debug\debuggdi.c	?^TraceFuncWW(szFunc,szParm1,wParm1,szParm2,wParm2)$?
TraceRet	debug\debuggdi.c	?^TraceRet(szFunc,wRet)$?
TrashFieldInfo	debug\debug2.c	?^TrashFieldInfo()$?
UnhookWindowsHookFP	debug\debugwin.c	?^EXPORT UnhookWindowsHookFP(P1,P2)$?
WToHexDigit	debug\debuginf.c	?^char WToHexDigit(w)			/* w must be less than 16, g?
WriteDebugStateInfo	debug\debugcmd.c	?^WriteDebugStateInfo()$?
dbgWait	debug\debug.c	?^dbgWait()$?
fnTest	debug\debug.c	?^fnTest()$?
AdCreate	interp\elcore.c	?^AD AdCreate(cbElement, cas, rgas)$?
AppendSdToSd	interp\elcore.c	?^AppendSdToSd(sd1, sd2)$?
AppendStToSd	interp\elcore.c	?^AppendStToSd(st, sd)$?
ApplyIntElt	interp\exp.c	?^ApplyIntElt(elt)$?
ApplyNumElt	interp\exp.c	?^ApplyNumElt(elt)$?
ApplySdElt	interp\exp.c	?^ApplySdElt(elt)$?
AssertStacksEmpty	interp\exp.c	?^#define AssertStacksEmpty()						\\$?
BeginPproc	interp\sym.c	?^VOID BeginPproc(pproc)$?
CallCmd	interp\elcore.c	?^CallCmd(cmm)$?
CbOfSsb	interp\elinit.c	?^#define CbOfSsb(cbStack)	(sizeof(struct SSB) + (cb?
CbOfSsbPenv	interp\elinit.c	?^unsigned CbOfSsbPenv(penv)$?
CbValFromElv	interp\exp.c	?^#define CbValFromElv(elv)	(FRecordElv(elv) ? sizeo?
CbVarFromElv	interp\sym.c	?^#define CbVarFromElv(elv)	(FRecordElv(elv) ? cbRec?
CevParseList	interp\elcore.c	?^int CevParseList(peviFirst, plibTerminator)$?
CleanupEl	interp\elinit.c	?^VOID CleanupEl()$?
ClearExp	interp\exp.c	?^ClearExp()$?
ClearTestOptions	interp\to.c	?^ClearTestOptions()$?
ClearUsrDlgVars	interp\sym.c	?^ClearUsrDlgVars()$?
Debug	interp\elcore.c	?^#define Debug(e) (e)$?
DeclDkd	interp\main.c	?^DeclDkd(psy, szLib, szAlias, dktRet, idktMacParam,?
DefLabel	interp\elcore.c	?^DefLabel(psy, ln, lib)$?
DefProcedure	interp\main.c	?^DefProcedure()$?
DktFromElt	interp\main.c	?^DktFromElt(elt)$?
DoElBeginDlg	interp\main.c	?^DoElBeginDlg()$?
DoElCheckBox	interp\main.c	?^DoElCheckBox()$?
DoElClose	interp\main.c	?^DoElClose()$?
DoElDeclare	interp\main.c	?^DoElDeclare()$?
DoElEditText	interp\main.c	?^DoElEditText()$?
DoElInput	interp\main.c	?^DoElInput(fLine, elt)$?
DoElListBox	interp\main.c	?^DoElListBox(elt)$?
DoElName	interp\main.c	?^DoElName()$?
DoElOpen	interp\main.c	?^DoElOpen()$?
DoElOptionGroup	interp\main.c	?^DoElOptionGroup()$?
DoElPrint	interp\main.c	?^DoElPrint(elt)$?
DpbExitCoroutine	interp\elinit.c	?^int DpbExitCoroutine(penv, wReturn, hpssb)$?
DumpApply	interp\exptest.c	?^DumpApply(elt)$?
DumpAuxEvi	interp\exptest.c	?^DumpAuxEvi(evi)$?
DumpEvi	interp\exptest.c	?^DumpEvi(evi)$?
DumpFrame	interp\symtest.c	?^DumpFrame()$?
DumpIcsr	interp\exectest.c	?^DumpIcsr(icsrIn, fPush)$?
DumpNtab	interp\symtest.c	?^DumpNtab()$?
DumpOpr	interp\exptest.c	?^DumpOpr(elt)$?
DumpSymbols	interp\symtest.c	?^DumpSymbols()$?
ElMathError	interp\elinit.c	?^ElMathError(merr)$?
ElSyntaxError	interp\main.c	?^ElSyntaxError(w)$?
EldExecutePproc	interp\elcore.c	?^ELD EldExecutePproc(pproc, cevArgs, eviFirstArg, h?
EltGetCur	interp\elcore.c	?^ELT EltGetCur()$?
EltParseComma	interp\main.c	?^EltParseComma()$?
ElvCallElx	interp\elcore.c	?^ELV ElvCallElx(elx, cevArgs, eviFirstArg, hpvalRet?
ElvEnumerateVar	interp\sym.c	?^ELV ElvEnumerateVar(iFrame, iLocal, st, pelg, pelm?
ElvFromDkt	interp\main.c	?^ElvFromDkt(dkt)$?
ElvFromIeldiElk	interp\exp.c	?^ELV ElvFromIeldiElk(ieldi, elk, pielfd, prps)$?
ElvOfRl	interp\exp.c	?^ELV ElvOfRl(rl)$?
ElvReadItemFromRl	interp\exp.c	?^ELV ElvReadItemFromRl(rl, rps, elv, hpval, heldi)$?
EndAllProcedures	interp\sym.c	?^VOID EndAllProcedures()$?
EndProcedure	interp\sym.c	?^VOID EndProcedure()$?
EndTemps	interp\sym.c	?^VOID EndTemps(pvarSaved)$?
EviParse	interp\exp.c	?^EviParse(fLhs, fStopAtComma, fCall)$?
EviPop	interp\exp.c	?^EVI EviPop()$?
EviPush	interp\exp.c	?^EVI EviPush()$?
EviTop	interp\exp.c	?^EVI EviTop()$?
ExecDim	interp\elcore.c	?^ExecDim(fRedim)$?
ExecEndProc	interp\elcore.c	?^ExecEndProc()$?
ExecGets	interp\elcore.c	?^ExecGets(pvar, eviValue)$?
Exp_Last	interp\exp.c	?^Exp_Last(){}$?
ExpectHeldi	interp\elinit.c	?^VOID ExpectHeldi(heldi)$?
FDoSubscript	interp\exp.c	?^FDoSubscript()$?
FExecOnError	interp\main.c	?^BOOL FExecOnError(pplab)$?
FExpIn	interp\exp.c	?^BOOL FExpIn(eltNew)$?
FExpInPev	interp\exp.c	?^BOOL FExpInPev(pev)$?
FInitAdsd	interp\elinit.c	?^FInitAdsd()$?
FInitExecTds	interp\elinit.c	?^FInitExecTds()$?
FInitExpTds	interp\exp.c	?^FInitExpTds()$?
FInitSym	interp\sym.c	?^BOOL FInitSym()$?
FLineElt	interp\elcore.c	?^#define FLineElt(elt)	(eltLineNolabel <= (elt) && ?
FOnlyHeli	interp\elinit.c	?^FOnlyHeli(heli)$?
FParseRect	interp\main.c	?^FParseRect(px, py, pdx, pdy, fPointOK)$?
FReallocSd	interp\elcore.c	?^FReallocSd(sd, cchNew)$?
FRecordPsy	interp\sym.c	?^BOOL FRecordPsy(psy, fArray)$?
FRunningElgElm	interp\elinit.c	?^FRunningElgElm(elg, elm)$?
FSaveElHcab	interp\elinit.c	?^BOOL FSaveElHcab(hcab, hid, tmc)$?
FSetErrRerr	interp\elinit.c	?^BOOL FSetErrRerr(rerr)$?
FSkipToLine	interp\elcore.c	?^BOOL FSkipToLine(eltObject, plab)$?
FTdsInUse	interp\main.c	?^FTdsInUse()$?
FTermElt	interp\elcore.c	?^FTermElt(elt, fElseOK)$?
FTouchElgElm	interp\sym.c	?^FTouchElgElm(elg, elm)$?
FreeAd	interp\elcore.c	?^FreeAd(ad)$?
FreeExpEvi	interp\exp.c	?^VOID FreeExpEvi(evi)$?
FreeHeli	interp\elinit.c	?^VOID FreeHeli(heliFree)$?
FreeNtab	interp\sym.c	?^FreeNtab(sbNtab)$?
FreeRek	interp\exp.c	?^VOID FreeRek(rek)$?
FreeSd	interp\elcore.c	?^FreeSd(sd)$?
FreeStringsAd	interp\elcore.c	?^FreeStringsAd(ad)$?
FreeSymbolTables	interp\sym.c	?^FreeSymbolTables()$?
GrowSb	interp\sym.c	?^GrowSb(sb)$?
HeldiFromIeldi	interp\elinit.c	?^ELDI **HeldiFromIeldi(ieldi)$?
HeliNew	interp\elinit.c	?^ELI **HeliNew(elg, elm, pfnCchReadSource, pfnDebug?
HpevParseExp	interp\main.c	?^struct EV huge * HpevParseExp()$?
HprekOfRl	interp\exp.c	?^REK huge *HprekOfRl(rl)$?
HstzOfSd	interp\elcore.c	?^HstzOfSd(sd)$?
HszOfSd	interp\elcore.c	?^char ** HszOfSd(sd)$?
IbRefArray	interp\exp.c	?^unsigned IbRefArray(ad, cevArgs, eviFirstArg)$?
IcsrPop	interp\elcore.c	?^IcsrPop(cstExpected)$?
IcsrPushCst	interp\elcore.c	?^int IcsrPushCst(cst, libStart)$?
IeldiFromElx	interp\exp.c	?^WORD IeldiFromElx(elx)$?
IelfdFrTmc	interp\exp.c	?^WORD IelfdFrTmc(tmc, heldi)$?
IelfdFromIag	interp\exp.c	?^IelfdFromIag(hpeldi, iag)$?
InitEldiCache	interp\elinit.c	?^InitEldiCache()$?
InitExecGlobals	interp\elinit.c	?^InitExecGlobals()$?
InitExp	interp\exp.c	?^InitExp(heliPrev)$?
InitHprek	interp\exp.c	?^VOID InitHprek(hprek, elv)$?
LibCur	interp\elcore.c	?^#define LibCur()	(Global(libBufStart) + Global(ibB?
MakeRecordPvar	interp\exp.c	?^MakeRecordPvar(pvar, heldi, pele, cevArgs, eviFirs?
OutElt	interp\exectest.c	?^OutElt(elt, lib)$?
OutExecCall	interp\exectest.c	?^OutExecCall()$?
OutExecGets	interp\exectest.c	?^OutExecGets(pvar, elvValue, hpval)$?
OutHpnum	interp\to.c	?^OutHpnum(hpnum)$?
OutPlab	interp\symtest.c	?^OutPlab(plab, psy)$?
OutPvar	interp\symtest.c	?^OutPvar(pvar)$?
ParseStm	interp\main.c	?^ParseStm(pstm)$?
ParseValue	interp\exp.c	?^ParseValue(elv, hpval, eltStopParse)$?
PchRefillBuf	interp\elcore.c	?^char *PchRefillBuf(pchBufStart)$?
PdkdFromPsy	interp\sym.c	?^DKD * PdkdFromPsy(psy, idktMacParam, hLib, dktRet,?
PelcrGet	interp\elcore.c	?^NATIVE PelcrGet(pchBufStart, pibBufCur, pchBufLim)?
PenvGetCur	interp\sym.c	?^ENV *PenvGetCur(fCreate)$?
PlabFromPsy	interp\sym.c	?^struct LAB *PlabFromPsy(psy, ln, pproc)$?
PopToIev	interp\exp.c	?^PopToIev(ievDest)$?
PprocFindPsy	interp\elcore.c	?^struct PROC *PprocFindPsy(psy)$?
PprocFromPsy	interp\sym.c	?^struct PROC *PprocFromPsy(psy, carg)$?
PqfNextPqf	interp\elinit.c	?^#define PqfNextPqf(pqf)	       ((struct QF *)(((st?
PrintCst	interp\exectest.c	?^PrintCst(cst)$?
PrintElk	interp\exptest.c	?^PrintElk(elk)$?
PrintElt	interp\exectest.c	?^PrintElt(elt)$?
PrintElv	interp\exptest.c	?^PrintElv(elv)$?
PrintHp	interp\to.c	?^PrintHp(hpb)$?
PrintHs16	interp\to.c	?^PrintHs16(hs16)$?
PrintHst	interp\to.c	?^PrintHst(hst)$?
PrintSyt	interp\symtest.c	?^PrintSyt(syt)$?
PrintTLsz	interp\to.c	?^PrintTLsz(lsz, wArg)$?
PrintTSd	interp\elcore.c	?^PrintTSd(sd)$?
PrintTSz	interp\to.c	?^PrintTSz(sz, val)$?
PsyLookupSt	interp\sym.c	?^struct SY *PsyLookupSt(st, fLabel)$?
PushExistingIcsr	interp\elcore.c	?^PushExistingIcsr(icsr)$?
PvarBeginTemps	interp\sym.c	?^struct VAR *PvarBeginTemps()$?
PvarFromPsy	interp\sym.c	?^struct VAR *PvarFromPsy(psy, elv, fArray)$?
PvarFromPsyElx	interp\sym.c	?^struct VAR * PvarFromPsyElx(psy, elv, fArray, elx)?
ReadGlobalDims	interp\elinit.c	?^ReadGlobalDims()$?
ReallocSd	interp\elcore.c	?^ReallocSd(sd, cchNew)$?
RerrActivateHeli	interp\elinit.c	?^RerrActivateHeli(heli)$?
RerrRunHeli	interp\elinit.c	?^RERR RerrRunHeli(heli)$?
ResolveEvi	interp\exp.c	?^ResolveEvi(evi, elv, hpvalRet)$?
RestoreExp	interp\exp.c	?^RestoreExp(pesb)$?
ResumeCoroutine	interp\elinit.c	?^int ResumeCoroutine(hpssb)$?
RpsFromIelfd	interp\exp.c	?^RPS RpsFromIelfd(ielfd, heldi)$?
RtError	interp\elinit.c	?^VOID RtError(rerr)$?
SaveExp	interp\exp.c	?^SaveExp(pesb)$?
SbFindNtab	interp\sym.c	?^SB SbFindNtab(elg, elm, fOkCreate)$?
SdConcat	interp\elcore.c	?^SD SdConcat(sd1, sd2)$?
SdCopyLpchCch	interp\elcore.c	?^SD SdCopyLpchCch(lpch, cch)$?
SdCopySt	interp\elcore.c	?^SD SdCopySt(st)$?
SdCopySz	interp\elcore.c	?^SD SdCopySz(sz)$?
SdDupSd	interp\elcore.c	?^SD SdDupSd(sd)$?
SdFromCch	interp\elcore.c	?^SD SdFromCch(cch)$?
SetCurLib	interp\elcore.c	?^SetCurLib(lib)$?
SetDebug	interp\elinit.c	?^VOID SetDebug(elg, elm, pfnDebug)$?
SetElTestOptions	interp\to.c	?^SetElTestOptions(sz)$?
SetTestOptions	interp\elinit.c	?^SetTestOptions(sz)$?
SetupCall	interp\elcore.c	?^SetupCall(psy, cevArgs, eviFirstArg, libReturn)$?
SkipSingleIf	interp\elcore.c	?^SkipSingleIf(fSeekElse)$?
SkipToElt	interp\elcore.c	?^SkipToElt(eltWanted)$?
StopHeli	interp\elinit.c	?^VOID StopHeli(heli, rerr)$?
StoreItemToRl	interp\exp.c	?^VOID StoreItemToRl(rl, rps, elv, hpval, heldi)$?
ToPsy	interp\symtest.c	?^ToPsy(psy)$?
TrappableError	interp\main.c	?^TrappableError(rerr)$?
UnpackPnumPch	interp\to.c	?^UnpackPnumPch(pnum, pch)$?
VerifyNext	interp\elcore.c	?^VerifyNext(pvar)$?
WCmpSdSd	interp\elcore.c	?^WCmpSdSd(sd1, sd2)$?
WCompChCh	interp\elcore.c	?^#define WCompChCh(ch1, ch2) \\$?
WDoElSpell	interp\main.c	?^WDoElSpell(fFunc)$?
WDoElThes	interp\main.c	?^WDoElThes(fFunc)$?
AllocFrame	lib\_sym.h	?^#define AllocFrame(cbWanted)						\\$?
AllocNtab	lib\_sym.h	?^#define AllocNtab(cbWanted)						\\$?
Assert	lib\priv.h	?^#define Assert(f)	((f) ? 0 : AssertProc(SzCode(__F?
AssertSz	lib\priv.h	?^#define AssertSz(f,sz)  ((f) ? 0 : AssertSzProc(Sz?
BLTB	lib\uops.h	?^#define BLTB(p1,p2,cb) _UOP_VOID(2,0xe6,0xe, (char?
BLTBCX	lib\uops.h	?^#define BLTBCX(b,lpb,cb) _UOP_VOID(2,0xe6,0xd, (ch?
BLTBH	lib\sbmgr.h	?^#define BLTBH(hp1,hp2,cb) (__FNATIVE__?_BLTBH((HP)?
BLTBV	lib\uops.h	?^#define BLTBV(p1,p2,cb) _UOP_PB(2,0xe6,0x20, (char?
BLTBX	lib\uops.h	?^#define BLTBX(lp1,lp2,cb) _UOP_VOID(2,0xe6,0xf, (c?
BLTBXV	lib\uops.h	?^#define BLTBXV(lp1,lp2,cb) _UOP_LPB(2,0xe6,0x24, (?
BLTCX	lib\uops.h	?^#define BLTCX(w,lpw,cw) _UOP_VOID(2,0xe6,0xc, (int?
BOOL	lib\lmem.h	?^extern BOOL (FAR PASCAL *lpfnFailLmemFilter)(WORD,?
BltDlt	lib\sdmdefs.h	?^#define BltDlt(dltSrc, pdltDest) \\$?
CallOtherStack	lib\crmgr.h	?^#define	CallOtherStack(lpfn, hstack, rgw, cw)	\\$?
CbOfElgdCev	lib\priv.h	?^#define CbOfElgdCev(cev)	(sizeof(struct ELGD) +			?
CbOfProcCarg	lib\sym.h	?^#define CbOfProcCarg(carg)	(sizeof(struct PROC) +	?
CbOfSy	lib\sym.h	?^#define CbOfSy(cch)	(sizeof(struct SY) + (cch) + 1?
CbRuntimeCtm	lib\sdm.h	?^#define CbRuntimeCtm(ctm)						\\$?
CbSizePpvSbCur	lib\lmem.h	?^#define	CbSizePpvSbCur(ppv) 	(*((*(WORD **)(ppv))-?
CbStackAvailable	lib\priv.h	?^#define CbStackAvailable(pbFrame)	((WORD)pbFrame -?
ChangeColors	lib\sdmproc.h	?^#define	ChangeColors()			AssertSz(fFalse, "Not yet?
ClearFdlg	lib\sdm.h	?^#define ClearFdlg(fdlg, fdlgClear)	((fdlg) &= ~(fd?
CwOfCb	lib\priv.h	?^#define CwOfCb(cb)	(((cb) + sizeof(int) - 1)/sizeo?
DWORD	lib\crmgr.h	?^typedef DWORD (FAR PASCAL *PFN_CRMGR)();$?
DisarmLmemError	lib\lmem.h	?^#define	DisarmLmemError()	(cfailLmemError++)$?
DoJmp	lib\qsetjmp.h	?^#define DoJmp(penv,rv) VSYS_SETJMP(6, (ENV *) penv?
DosQCurDir	lib\sdm.h	?^// Couldn't DosSelectDisk().$?
ETPrintT	lib\priv.h	?^#define ETPrintT(sz,arg)	ETPrintTLsz(LszCode(sz), ?
ElGlobal	lib\priv.h	?^#define ElGlobal(var)	(((struct ELGD huge *)HpOfSb?
ElvcOfElvElv	lib\_exp.h	?^#define ElvcOfElvElv(elvFrom, elvTo)	((elvFrom) * ?
EnableReports	lib\sdmproc.h	?^#define			EnableReports(f)$?
Error	lib\priv.h	?^#define Error(sz,arg)	ErrorLsz(LszCode(sz), (arg))?
EviOfIev	lib\priv.h	?^#define EviOfIev(iev)	((iev) * sizeof(struct EV))$?
FAutoOpt	lib\sdmparse.h	?^#define FAutoOpt(opt)	((opt) & optAuto)$?
FEqCmp	lib\mathapi.h	?^#define FEqCmp(cnv) (cnv == 0)	/* almost always fa?
FGeCmp	lib\mathapi.h	?^#define FGeCmp(cnv) (cnv >= 0)$?
FGtCmp	lib\mathapi.h	?^#define FGtCmp(cnv) (cnv > 0)$?
FInEmmSb	lib\sbmgr.h	?^#define	FInEmmSb(sb)		(FsbTypeSb(sb) == fsbEmm)$?
FIntOpt	lib\sdmparse.h	?^#define FIntOpt(opt)	((opt) & optAnyInt)$?
FLeCmp	lib\mathapi.h	?^#define FLeCmp(cnv) (cnv <= 0)$?
FLineOpt	lib\sdmparse.h	?^#define FLineOpt(opt)	((opt) & optLineUnit)$?
FLtCmp	lib\mathapi.h	?^#define FLtCmp(cnv) (cnv < 0)$?
FNZPosOpt	lib\sdmparse.h	?^#define FNZPosOpt(opt)	((opt) & optNZPos)$?
FNeCmp	lib\mathapi.h	?^#define FNeCmp(cnv) (cnv != 0)$?
FNonNegOpt	lib\sdmparse.h	?^#define FNonNegOpt(opt)	((opt) & optPosNZPos)$?
FPosOpt	lib\sdmparse.h	?^#define FPosOpt(opt)	((opt) & optPos)$?
FSetDlgSab	lib\sdmproc.h	?^#define FSetDlgSab(sab)			AssertSz(fFalse, "Not ye?
FTestFdlg	lib\sdm.h	?^#define FTestFdlg(fdlg, fdlgTest)	(((fdlg) & (fdlg?
FUnitOpt	lib\sdmparse.h	?^#define FUnitOpt(opt)	((opt) & optAnyUnit)$?
FlbfFillDirListTmc	lib\sdm.h	?^// Return values from FlbfFillDirListTmc()$?
FlipFdlg	lib\sdm.h	?^#define	FlipFdlg(fdlg, fdlgFlip)	((fdlg) ^= (fdlgF?
FrameVar	lib\_sym.h	?^#define FrameVar(var)	(((struct VARS *)0)->var)$?
FtmeIsSdmMessage	lib\sdm.h	?^// FtmeIsSdmMessage() return values.					     $?
GetBValue	lib\qwindows.h	?^#define GetBValue(rgb) ((BYTE)((rgb)>>16))$?
GetGValue	lib\qwindows.h	?^#define GetGValue(rgb) ((BYTE)(((WORD)(rgb)) >> 8)?
GetRValue	lib\qwindows.h	?^#define GetRValue(rgb) ((BYTE)(rgb))$?
Global	lib\priv.h	?^#define Global(var)	(pelldGlobal->var)$?
GlobalDiscard	lib\qwindows.h	?^#define GlobalDiscard( h ) GlobalReAlloc( h, 0L, G?
HIBYTE	lib\qwindows.h	?^#define HIBYTE(w)	(((WORD)(w) >> 8) & 0xff)$?
HIWORD	lib\qwindows.h	?^#define HIWORD(l) (__FNATIVE__?HIWORDX(l):WUOP_QWI?
HIWORDX	lib\qwindows.h	?^#define HIWORDX(l)	 ((WORD)(((DWORD)(l) >> 16) & 0?
HcabDlgCur	lib\sdm.h	?^#define	HcabDlgCur()	hcabDlgCur$?
HdlgFromHwnd	lib\sdmproc.h	?^#define	HdlgFromHwnd(hwnd)	AssertSz(fFalse, "Not y?
HdlgOfWNewWOld	lib\sdm.h	?^#define	HdlgOfWNewWOld(wNew, wOld)	MAKELONG((wNew)?
HemmGetSb	lib\sbmgr.h	?^#define HemmGetSb() (pid16Emm)$?
HighWord	lib\uops.h	?^#define HighWord(l) _UOP_INT(1,0xda, (long) (l))$?
HpConvEs	lib\sbmgr.h	?^#define HpConvEs(pv)	HpOfSbIb(sbCur, (IB)pv)$?
HpFrame	lib\_sym.h	?^#define HpFrame(var)	((int huge *)HpOfSbIb(sbFrame?
HpLoadHp	lib\sbmgr.h	?^#define HpLoadHp(hp) ((LpLoadHp(hp)), (hp))$?
HpNtab	lib\sym.h	?^#define HpNtab(var)	((int huge *)HpOfSbIb(Global(s?
HpOfSbIb	lib\sbmgr.h	?^#define HpOfSbIb(sb,ib) HPUOP_HUGE(0, (SB) (sb), (?
HpOfSbIbConst	lib\sbmgr.h	?^#define HpOfSbIbConst(sb,ib) ((HP)((long)(((unsign?
HpReloadHp	lib\sbmgr.h	?^#define HpReloadHp(hp) ((LpReloadHp(hp)),(hp))$?
HpcsrOfIcsr	lib\_exec.h	?^#define HpcsrOfIcsr(icsr)						\\$?
HpcsrOfPcsr	lib\_exec.h	?^#define HpcsrOfPcsr(pcsr)	((struct CSR huge *)HpOf?
HpeliFirst	lib\priv.h	?^#define HpeliFirst()	HpeliOfHeli(ElGlobal(heliFirs?
HpeliOfHeli	lib\priv.h	?^#define HpeliOfHeli(heli)	((ELI huge *)HpOfSbIb(sb?
HpevOfEvi	lib\priv.h	?^#define HpevOfEvi(evi)	((struct EV huge *)				\\$?
HpfhFromPfh	lib\_sym.h	?^#define HpfhFromPfh(pfh)	((struct FH huge *)HpOfSb?
HpprocOfPproc	lib\sym.h	?^#define HpprocOfPproc(pproc)	((struct PROC huge *)?
HpsyOfPsy	lib\sym.h	?^#define HpsyOfPsy(psy)	((struct SY huge *)HpOfSbIb?
HpvarOfPvar	lib\sym.h	?^#define HpvarOfPvar(pvar)	((struct VAR huge *)HpOf?
HwndFromDlg	lib\sdmproc.h	?^#define HwndFromDlg(hdlg)	AssertSZ(fFalse, "Not ye?
HwndSwapSdmParent	lib\sdmproc.h	?^#define	HwndSwapSdmParent(hwnd)	AssertSz(fFalse, "?
IbOfHp	lib\sbmgr.h	?^#define IbOfHp(hp) (__FNATIVE__?HIWORDX((long)(hp)?
IchFirstOfTxs	lib\sdm.h	?^#define IchFirstOfTxs(txs)	LOWORD(txs)$?
IchLimOfTxs	lib\sdm.h	?^#define IchLimOfTxs(txs)	HIWORD(txs)$?
IdDoMsgBox	lib\sdmproc.h	?^#define	IdDoMsgBox(lszText, lszCaption, mb)	\\$?
IeltStackPtr	lib\_exp.h	?^#define IeltStackPtr()	ElGlobal(ieltStackPtr)$?
IevOfEvi	lib\priv.h	?^#define IevOfEvi(evi)	((evi) / sizeof(struct EV))$?
InvalidateEnv	lib\qsetjmp.h	?^#define InvalidateEnv(penv)	(*(int *)(penv)=0)$?
LDI3HS	lib\sbmgr.h	?^#define LDI3HS(hp,off) HPUOP_HUGE(2,0xf6,off, (HP)?
LOBYTE	lib\qwindows.h	?^#define LOBYTE(w)	((BYTE)(w) & 0xff)$?
LOWORD	lib\qwindows.h	?^#define LOWORD(l) (__FNATIVE__?LOWORDX(l):WUOP_QWI?
LOWORDX	lib\qwindows.h	?^#define LOWORDX(l)	 ((WORD)(l))$?
LocalDiscard	lib\qwindows.h	?^#define LocalDiscard( h ) LocalReAlloc( h, 0, LMEM?
LocalFreeze	lib\qwindows.h	?^#define LocalFreeze( dummy ) ( *(pLocalHeap+1) += ?
LocalHandleDelta	lib\qwindows.h	?^#define LocalHandleDelta( delta ) ( (delta) ? (*(p?
LocalMelt	lib\qwindows.h	?^#define LocalMelt( dummy )   ( *(pLocalHeap+1) -= ?
LockData	lib\qwindows.h	?^#define LockData( dummy )   LockSegment( 0xFFFF )$?
LowWord	lib\uops.h	?^#define LowWord(l) _UOP_INT(2,0xe0,0xda, (long) (l?
LpConvEs	lib\sbmgr.h	?^#define LpConvEs(pv)	LPUOP_HUGE(1, 0xea, (VOID NEA?
LpConvHp	lib\sbmgr.h	?^#define LpConvHp(hp) LPUOP_HUGE(2,0xe6,0x2b, (HP) ?
LpConvSbIb	lib\sbmgr.h	?^#define LpConvSbIb(sb,ib) ((VOID FAR *)(((long)mps?
LpLoadHp	lib\sbmgr.h	?^#define LpLoadHp(hp) ((mpsbps[SbOfHp(hp)]&1) ? LpC?
LpLoadSbIb	lib\sbmgr.h	?^#define LpLoadSbIb(sb,ib) ((mpsbps[sb]&1) ? LpConv?
LpLockSbIb	lib\sbmgr.h	?^#define LpLockSbIb(sb,ib) LpLockHp(HpOfSbIb(sb,ib)?
LpOfHp	lib\sbmgr.h	?^#define LpOfHp(hp)	LpConvHp(hp)$?
LstCode	lib\priv.h	?^#define LstCode(sz)	LpchString((sz), 1, 1)$?
LszCode	lib\priv.h	?^#define LszCode(sz)	LpchString((sz), 0, 1)$?
MAKEINTATOM	lib\qwindows.h	?^#define MAKEINTATOM(i)	(LPSTR)((DWORD)((WORD)(i)))?
MAKEINTRESOURCE	lib\qwindows.h	?^#define MAKEINTRESOURCE(i)  (LPSTR)((DWORD)((WORD)?
MAKELONG	lib\qwindows.h	?^#define MAKELONG(lo,hi) (__FNATIVE__?MAKELONGX(lo,?
MAKELONGX	lib\qwindows.h	?^#define MAKELONGX(a, b)  ((long)(((unsigned)(a)) |?
MAKEPOINT	lib\qwindows.h	?^#define MAKEPOINT(l)	(*((POINT *)&(l)))$?
MakeLong	lib\uops.h	?^#define MakeLong(lo,hi) _UOP_LONG(0, (int) (hi), (?
NtabVar	lib\sym.h	?^#define NtabVar(var)	(((struct NTAB *)0)->var)$?
NumFromStack	lib\_exec.h	?^#define NumFromStack()	NumUop(0)$?
PACKH	lib\sbmgr.h	?^#define PACKH(hpPh,pUh) (__FNATIVE__?_PACKH((HP)(h?
PcabFromHcab	lib\sdmdefs.h	?^#define PcabFromHcab(hcab)	(*(hcab))$?
PcmbDlgCur	lib\sdmdefs.h	?^#define PcmbDlgCur()	((CMB *) WRefDlgCur())$?
PelcrCur	lib\priv.h	?^#define PelcrCur()	((struct ELCR *)(Global(rgchBuf?
PevOfEvi	lib\priv.h	?^#define PevOfEvi(evi)	((struct EV *)IbOfHp((char h?
PresetEs	lib\sbmgr.h	?^#define PresetEs()	VSYS_HUGE(258)$?
PresetSbCur	lib\sbmgr.h	?^#define PresetSbCur()	PresetEs()$?
PrintT	lib\priv.h	?^#define PrintT(sz,arg)		PrintTLsz(LszCode(sz), (ar?
RGB	lib\qwindows.h	?^#define RGB(r,g,b)          ((DWORD)(((BYTE)(r)|((?
RearmLmemError	lib\lmem.h	?^#define	RearmLmemError()	(cfailLmemError--)$?
ResetEs	lib\sbmgr.h	?^#define ResetEs()	VSYS_HUGE(256)$?
ResetSbCur	lib\sbmgr.h	?^#define ResetSbCur()	ResetEs()$?
ResetSbCur2	lib\sbmgr.h	?^#define ResetSbCur2()	SetEs2(sbDds)$?
RgeltStack	lib\_exp.h	?^#define RgeltStack()	((ELT huge *)					\\$?
RgevStack	lib\_exp.h	?^#define RgevStack()	(ElGlobal(rgev))$?
STD_API	lib\lmem.h	?^#define	STD_API(ret)	NATIVE ret$?
STI3HS	lib\sbmgr.h	?^#define STI3HS(hpDest,off,hp) VUOP_HUGE(3,0xe6,0x1?
SbCur	lib\sbmgr.h	?^#define	SbCur()		sbCur$?
SbCur2	lib\sbmgr.h	?^#define	SbCur2()	sbCur2$?
SbDlgOfHdlg	lib\sdm.h	?^#define SbDlgOfHdlg(hdlg)		SbOfHp(hdlg)$?
SbOfHp	lib\sbmgr.h	?^#define SbOfHp(hp) (__FNATIVE__?LOWORDX((HP)(hp)):?
SetEs	lib\sbmgr.h	?^#define SetEs(sb)	VSYS_HUGE(257, (SB) (sb))$?
SetFdlg	lib\sdm.h	?^#define SetFdlg(fdlg, fdlgSet)		((fdlg) |= (fdlgSe?
SetHemmSb	lib\sbmgr.h	?^#define SetHemmSb(hemm) (pid16Emm = (hemm))$?
SetJmp	lib\qsetjmp.h	?^#define SetJmp(penv) WSYS_SETJMP(3, (ENV *) penv)$?
SetPpvBToW	lib\sdmparse.h	?^#define SetPpvBToW(ppv, b, w) *((int *) PvParseArg?
SetSbCur	lib\sbmgr.h	?^#define SetSbCur(sb)	SetEs(sb)$?
SetSbCur2	lib\sbmgr.h	?^#define SetSbCur2(sb)	SetEs2(sb)$?
StCode	lib\priv.h	?^#define StCode(sz)	PchString((sz), 1, 2)$?
StData	lib\priv.h	?^#define StData(sz)	PchString((sz), 1)$?
StackL	lib\_exec.h	?^#define StackL(l)	VoidUop(0, (l))$?
StackNum	lib\_exec.h	?^#define StackNum(num)	VoidUop(0, (num))$?
StackW	lib\_exec.h	?^#define	StackW(w)	VoidUop(0, (w))$?
String	lib\sdm.h	?^typedef char *	STR;			// String (SZ or STZ). $?
SzCode	lib\priv.h	?^#define SzCode(sz)	PchString((sz), 0, 2)$?
SzFrame	lib\priv.h	?^#define SzFrame(sz)     PchString((sz), 0, 1)$?
TdsVar	lib\priv.h	?^#define TdsVar(var)	((*helgdGlobal)->var)$?
TxsAll	lib\sdm.h	?^#define TxsAll()		TxsOfFirstLim(0, ichLimLast)$?
TxsOfFirstLim	lib\sdm.h	?^#define TxsOfFirstLim(f, l)	((TXS)MAKELONG((f), (l?
UNPACKH	lib\sbmgr.h	?^#define UNPACKH(pUh,hpPh) (__FNATIVE__?_UNPACKH((U?
UnlockData	lib\qwindows.h	?^#define UnlockData( dummy ) UnlockSegment( 0xFFFF ?
UnlockSb	lib\sbmgr.h	?^#define UnlockSb(sb) UnlockHp((HP)(((unsigned long?
VOID	lib\sdm.h	?^typedef VOID (SDM_CALLBACK * PFN_SAVECAB)(HCAB, WO?
WCallOtherStack	lib\crmgr.h	?^#define	WCallOtherStack(lpfn, hstack, rgw, cw)	\\$?
WFromPpvB	lib\sdmparse.h	?^il - not > 128 for elsubs table limit */$?
WORD	lib\sdm.h	?^typedef WORD (SDM_CALLBACK * PFN_CTRL)(TMM, VOID *?
WRefDlgCur	lib\sdm.h	?^#define	WRefDlgCur()	wRefDlgCur$?
WordFromStack	lib\_exec.h	?^#define WordFromStack()	WordUop(0)$?
codes	lib\sdm.h	?^// Standard item codes (tmc). $?
int	lib\qwindows.h	?^typedef int (FAR PASCAL *FARPROC)();$?
max	lib\qwindows.h	?^#define max(a,b)	((a) > (b) ? (a) : (b))$?
min	lib\qwindows.h	?^#define min(a,b)	((a) < (b) ? (a) : (b))$?
templates	lib\sdm.h	?^// Procedure templates (for callbacks).					     $?
AppendBaseNameToText	wordtech\banter.c	?^AppendBaseNameToText(hsttbName, cstcStd, stcpBase,?
AppendLabelToText	wordtech\banter.c	?^AppendLabelToText(iLabel, ptad)$?
AppendLpszToText	wordtech\banter.c	?^AppendLpszToText(lpch, ptad)$?
BlockSelBegin	wordtech\block.c	?^BlockSelBegin(psel)$?
CchFillStWithBanter	wordtech\banter.c	?^int CchFillStWithBanter(st, cchMax, pchp, pchpBase?
ClBlockSelToScrap	wordtech\block.c	?^ClBlockSelToScrap()$?
CmdCutBlock	wordtech\block.c	?^CmdCutBlock(fScrap)$?
CmdPasteBlock	wordtech\block.c	?^CmdPasteBlock()$?
CpFirstBlock	wordtech\block.c	?^CP CpFirstBlock()$?
CpFirstDlFromWwCpNS	wordtech\block.c	?^CP CpFirstDlFromWwCpNS(ww, doc, cp) /* NS - No Scr?
CpLimBlock	wordtech\block.c	?^CP CpLimBlock()$?
CursBlockLeftRight	wordtech\block.c	?^CursBlockLeftRight(sty, dSty, fDrag)$?
CursBlockUpDown	wordtech\block.c	?^CursBlockUpDown(sty, dSty, fDrag)$?
DoContentHitBlock	wordtech\block.c	?^DoContentHitBlock(psel, pt)$?
FGetBlockLine	wordtech\block.c	?^int FGetBlockLine(pcpFirst, pdcp, pbks)$?
FGetCell	wordtech\block.c	?^FGetCell(pcpFirst, pdcp, pbks)$?
FParasUpToCpNotTable	wordtech\block.c	?^FParasUpToCpNotTable(pcaNotTable, cp, pfBefore)$?
FSelectBlockTo	wordtech\block.c	?^FSelectBlockTo(psel, pt, pcaNotTable, fNormTableBo?
InitBlock1	wordtech\block.c	?^InitBlock1(pbks, psel)$?
InitBlockStat	wordtech\block.c	?^InitBlockStat(pbks)$?
IstFromBrc	wordtech\banter.c	?^IstFromBrc(brc)$?
MarkSelsBlock	wordtech\block.c	?^MarkSelsBlock(ww, psels)$?
TurnOffBlock	wordtech\block.c	?^TurnOffBlock(psel)$?
WriteAbsPosToBanter	wordtech\banter.c	?^void WriteAbsPosToBanter(val, sprm, iszLabel, ptad?
WriteBrcToBanter	wordtech\banter.c	?^void WriteBrcToBanter(val, sprm, iszLabel, ptad)$?
WriteBrcpToBanter	wordtech\banter.c	?^void WriteBrcpToBanter(val, sprm, iszLabel, ptad)$?
WriteCFlagToBanter	wordtech\banter.c	?^void WriteCFlagToBanter(val, sprm, iszLabel, ptad)?
WriteDxaAbsToBanter	wordtech\banter.c	?^void WriteDxaAbsToBanter(val, sprm, iszLabel, ptad?
WriteDyaAbsToBanter	wordtech\banter.c	?^void WriteDyaAbsToBanter(val, sprm, iszLabel, ptad?
WriteFlagToBanter	wordtech\banter.c	?^void WriteFlagToBanter(val, sprm, iszLabel, ptad)$?
WriteFtcToBanter	wordtech\banter.c	?^void WriteFtcToBanter(val, sprm, iszLabel, ptad)$?
WriteHeaderToBanter	wordtech\banter.c	?^void WriteHeaderToBanter(val, sprm, iszLabel, ptad?
WriteHpsToBanter	wordtech\banter.c	?^void WriteHpsToBanter(val, sprm, iszLabel, ptad)$?
WriteIbstToBanter	wordtech\banter.c	?^void WriteIbstToBanter(ibst, sprm, iszLabel, ptad)?
WritePcToBanter	wordtech\banter.c	?^void WritePcToBanter(val, sprm, iszLabel, ptad)$?
WritePosSpacingToBanter	wordtech\banter.c	?^void WritePosSpacingToBanter(val, sprm, iszLabel, ?
WriteRadioButtonToBanter	wordtech\banter.c	?^void WriteRadioButtonToBanter(val, sprm, iszLabel,?
WriteTabsToBanter	wordtech\banter.c	?^void WriteTabsToBanter(val, sprm, iszLabel, ptad)$?
WriteZaToBanter	wordtech\banter.c	?^void WriteZaToBanter(val, sprm, iszLabel, ptad)$?
CFreeCls	wordtech\clsplc.c	?^int CFreeCls(cls, pcfooLastFree)$?
C_FInsertInPlc	wordtech\clsplc.c	?^HANDNATIVE C_FInsertInPlc(hplc, i, cp, pch)$?
C_FOpenPlc	wordtech\clsplc.c	?^HANDNATIVE C_FOpenPlc(hplc, i, di)$?
C_FStretchPlc	wordtech\clsplc.c	?^HANDNATIVE C_FStretchPlc(hplc, di)$?
C_ShrinkPlc	wordtech\clsplc.c	?^HANDNATIVE C_ShrinkPlc(hplc, iMaxNew, i, di)$?
CloseUpPlc	wordtech\clsplc.c	?^HANDNATIVE CloseUpPlc(hplc)$?
Clsplc_Last	wordtech\clsplc.c	?^Clsplc_Last(){}$?
CmdDrCurs1	wordtech\curskeys.c	?^CmdDrCurs1(ucm, fExtend, fLastDlCp)$?
CmdDrCurskeys	wordtech\curskeys.c	?^CmdDrCurskeys(pcmb)$?
CmdPrevInsert	wordtech\curskeys.c	?^CmdPrevInsert(pcmb)$?
CmdScrollUpDown	wordtech\curskeys.c	?^CmdScrollUpDown(pcmb)$?
CmdSelectAll	wordtech\curskeys.c	?^CmdSelectAll(pcmb)$?
CpBackOverInvisible	wordtech\curskeys.c	?^CP CpBackOverInvisible(ww, doc, cp)$?
CursUpDown	wordtech\curskeys.c	?^CursUpDown(sty, dSty, fDrag)$?
DeleteFromPl	wordtech\clsplc.c	?^EXPORT DeleteFromPl(hpl, i)$?
DlPartial	wordtech\curskeys.c	?^DlPartial(hpldr, idr, pdys)$?
DrclToRclOuter	wordtech\curskeys.c	?^DrclToRclOuter(hpldr, pdrcl, prcl)$?
DylMacForTableDr	wordtech\curskeys.c	?^DylMacForTableDr(cp, hpldr)$?
EnsureDrComplete	wordtech\curskeys.c	?^EnsureDrComplete(hpldr, idr)$?
FChngSizePhqLcb	wordtech\clsplc.c	?^FChngSizePhqLcb(phq, lcb)$?
FInitHplcedl	wordtech\clsplc.c	?^EXPORT struct PLC **FInitHplcedl(ifooMaxInit, cpLi?
FInsertInPl	wordtech\clsplc.c	?^EXPORT FInsertInPl(hpl, i, pch)$?
FInsertInPlc	wordtech\clsplc.c	?^EXPORT FInsertInPlc(hplc, i, cp, pch) /* WINIGNORE?
FOpenPlc	wordtech\clsplc.c	?^NATIVE FOpenPlc(hplc, i, di) /* WINIGNORE - MAC on?
FStretchPlc	wordtech\clsplc.c	?^EXPORT FStretchPlc(hplc, di) /* WINIGNORE - MAC on?
FStretchPlc2	wordtech\clsplc.c	?^FStretchPlc2(hplc, di)$?
FreeCls	wordtech\clsplc.c	?^FreeCls(cls, foo)$?
FreeHpl	wordtech\clsplc.c	?^EXPORT FreeHpl(hpl)$?
FreeHplc	wordtech\clsplc.c	?^FreeHplc(hplc)$?
FreePhpl	wordtech\clsplc.c	?^FreePhpl(phpl)$?
FreePhplc	wordtech\clsplc.c	?^FreePhplc(phplc)$?
HCopyHeapBlock	wordtech\clsplc.c	?^uns **HCopyHeapBlock(hOld, strc)$?
HplInit	wordtech\clsplc.c	?^EXPORT struct PL **HplInit(cbPl, ifooMaxInit)$?
HplInit2	wordtech\clsplc.c	?^EXPORT struct PL **HplInit2(cbPl, cbHead, ifooMaxI?
HplcCreateEdc	wordtech\clsplc.c	?^struct PLC *HplcCreateEdc(hdod, edc)$?
HplcInit	wordtech\clsplc.c	?^struct PLC **HplcInit(cbPlc, ifooMaxInit, cpLim, f?
IAllocCls	wordtech\clsplc.c	?^int IAllocCls(cls, cwFood)$?
IAllocClsH	wordtech\clsplc.c	?^int IAllocClsH(cls, h, cwFood)$?
LeftRightSel	wordtech\curskeys.c	?^LeftRightSel(psel, sty, fRound, fExtend, fFwdKey)$?
NextPrevHpldrIdr	wordtech\curskeys.c	?^NextPrevHpldrIdr(phpldr, pidr, fNext)$?
ShrinkPlc	wordtech\clsplc.c	?^ShrinkPlc(hplc, iMaxNew, i, di)$?
WwCouldDisp	wordtech\curskeys.c	?^WwCouldDisp(doc)$?
YwScrollForCursor	wordtech\curskeys.c	?^int YwScrollForCursor(sty, fUp, cSty, pfScrolled,y?
BrcDrawOneBottomBorder	wordtech\disptbl.c	?^BrcDrawOneBottomBorder(ww,rcw,ptcx,brcPrev,fLastCo?
BrkFromBrc	wordtech\disptbl.c	?^BrkFromBrc ( brc, pbrk, fFrameLines, fReverse )$?
C_FUpdTableDr	wordtech\disptbl.c	?^HANDNATIVE C_FUpdTableDr(ww, hpldr, idr)$?
C_FUpdateDr	wordtech\disp2.c	?^HANDNATIVE int C_FUpdateDr(ww, hpldr, idr, rcwInva?
C_FUpdateTable	wordtech\disptbl.c	?^HANDNATIVE C_FUpdateTable ( ww, doc, hpldr, idr, p?
C_FrameEasyTable	wordtech\disptbl.c	?^HANDNATIVE C_FrameEasyTable(ww, doc, cp, hpldr, pr?
C_ScrollDrUp	wordtech\disp2.c	?^HANDNATIVE C_ScrollDrUp(ww, hpldr, idr, hplcedl, d?
C_WidthHeightFromBrc	wordtech\disptbl.c	?^HANDNATIVE C_WidthHeightFromBrc(brc, grpf)$?
CbrcMatch	wordtech\disptbl.c	?^CbrcMatch(rgbrc,fFrameLines,pbrcMatch,prgbitMatch)?
CheckPldr	wordtech\disp3.c	?^CheckPldr(hpldr)$?
ClearRclInParentDr	wordtech\disptbl.c	?^ClearRclInParentDr(ww,hpldr,rcl,prcwClip)$?
ClearSccAbove	wordtech\disp3.c	?^ClearSccAbove()$?
ClearSccs	wordtech\disp3.c	?^ClearSccs()$?
CpActiveCur	wordtech\disp3.c	?^CP CpActiveCur()$?
CreateEdlsTillCp	wordtech\disp3.c	?^CreateEdlsTillCp(ww, idr, cp, pdl)$?
Disp2_Last	wordtech\disp2.c	?^Disp2_Last(){}$?
Disp3_Last	wordtech\disp3.c	?^Disp3_Last(){}$?
Disptbl_Last	wordtech\disptbl.c	?^Disptbl_Last(){}$?
DlFromCpCheck	wordtech\disp3.c	?^DlFromCpCheck(hpldr, idr, cp, fEnd )$?
DlWhereDocCp	wordtech\disp3.c	?^DlWhereDocCp(ww, doc, cp, fEnd, phpldr, pidr, pcpF?
DlWherePt	wordtech\disp3.c	?^int DlWherePt(ww, ppt, phpldr, pidr, pspt, fInner,?
DlkFromVfli	wordtech\disp3.c	?^NATIVE DlkFromVfli(hplcedl, dl)$?
DqRatio	wordtech\disp3.c	?^private int DqRatio(cp, dqLim, cpLim)$?
DrawBlankPage	wordtech\disp3.c	?^DrawBlankPage(ww, prcInval)$?
DrawBrc	wordtech\disptbl.c	?^DrawBrc ( ww, rgbrc, rcw, dbmod, fFrameLines )$?
DrawTableRevBar	wordtech\disptbl.c	?^export DrawTableRevBar(ww, idr, dl)$?
DxyFromBrc	wordtech\disptbl.c	?^DxyFromBrc(brc, fFrameLines, fWidth)$?
DxyOfLineFromBrc	wordtech\disptbl.c	?^DxyOfLineFromBrc(brc, fFrameLines, fWidth)$?
DylDrawTableTop	wordtech\disptbl.c	?^DylDrawTableTop(ww,hpldr,prclDrawn,fFrameLines,fDr?
DylDrawTblTop1	wordtech\disptbl.c	?^DylDrawTblTop1(ww,fFirstRow,fLastRow,fFrameLines,d?
DypHeightTable	wordtech\disptbl.c	?^DypHeightTable ( ww, doc, cp, fForceTop, fForceBot?
DypHeightTc	wordtech\disptbl.c	?^NATIVE DypHeightTc ( ww, doc, cp )$?
DysHeightTable	wordtech\disptbl.c	?^EXPORT DysHeightTable ( ww, doc, cp, fForceTop, fF?
EnsureMarginsInRange	wordtech\disp3.c	?^EnsureMarginsInRange(pdop)$?
FCaVisible	wordtech\disp3.c	?^FCaVisible(ww, pca)$?
FCpVisible	wordtech\disp3.c	?^FCpVisible(ww, doc, cp, fEnd, fHoriz, fAnyVisible)?
FNearRect	wordtech\disp3.c	?^FNearRect(rc1, rc2)$?
FNormHoriz	wordtech\disp3.c	?^BOOL FNormHoriz(ww)$?
FOutlineEmpty	wordtech\disp3.c	?^FOutlineEmpty(ww, fBeep)$?
FSelectableDr	wordtech\disp3.c	?^int FSelectableDr(pdr)$?
FSmallPage	wordtech\disp3.c	?^FSmallPage(ww, pdxw, pdyw)$?
FTableHeight	wordtech\disptbl.c	?^FTableHeight ( ww, doc, cp, fAbortOK, fForceTop, f?
FUpdTableDr	wordtech\disptbl.c	?^NATIVE FUpdTableDr(ww, hpldr, idr) /* WINIGNORE - ?
FUpdateDr	wordtech\disp2.c	?^NATIVE int FUpdateDr(ww, hpldr, idr, rcwInval, fAb?
FUpdateTable	wordtech\disptbl.c	?^NATIVE FUpdateTable ( ww, doc, hpldr, idr, pcp, py?
FYwInWw	wordtech\disp3.c	?^FYwInWw(pwwd, ywBottom, ywTop, fAnyVisible)$?
FrameDrLine	wordtech\disp2.c	?^FrameDrLine(ww, hpldr, idr, ywTop, ywBottom, fFat,?
FrameEasyTable	wordtech\disptbl.c	?^NATIVE FrameEasyTable(ww, doc, cp, hpldr, prclDraw?
FrameTable	wordtech\disptbl.c	?^FrameTable ( ww, doc, cp, hpldr, pedl, fFirstRow, ?
FreeDrs	wordtech\disp3.c	?^NATIVE FreeDrs(hpldr, idr)$?
FreeEdl	wordtech\disp3.c	?^NATIVE FreeEdl(hplcedl, dl)$?
FreeEdls	wordtech\disp3.c	?^NATIVE FreeEdls(hplcedl, dlFirst, dlLim)$?
FullDlBoundsDr	wordtech\disp3.c	?^FullDlBoundsDr(ww, hpldr, idr, pdlFirst, pcpFirst,?
HplcedlWw	wordtech\disp3.c	?^struct PLC **HplcedlWw(ww, idr)$?
IdrFirstForDoc	wordtech\disp3.c	?^IdrFirstForDoc(ww, doc)$?
IdrFromHpldrDocCp	wordtech\disp3.c	?^IdrFromHpldrDocCp(hpldr /* hwwd */, ww, doc, cp, f?
IdrLastForDoc	wordtech\disp3.c	?^IdrLastForDoc(ww, doc)$?
InvalBand	wordtech\disp3.c	?^InvalBand(ww, ywFirst, ywLim)$?
InvalWwRc	wordtech\disp3.c	?^InvalWwRc(ww, prcwInval)$?
IpgdCurrentWw	wordtech\disp3.c	?^IpgdCurrentWw(ww)$?
IpgdNextWw	wordtech\disp3.c	?^IpgdNextWw(ww, fRepag)$?
IpgdPrevWw	wordtech\disp3.c	?^IpgdPrevWw(ww)$?
LpInitDisp2	wordtech\disp2.c	?^native long LpInitDisp2(lpmh4) /* WINIGNORE - MAC ?
NormCp	wordtech\disp3.c	?^NormCp(ww, doc, cp, ncp, dyw, fEnd)$?
PdrGalley	wordtech\disp3.c	?^struct DR *PdrGalley(pwwd)$?
PenPatGray	wordtech\disp2.c	?^NATIVE PenPatGray(ww) /* WINIGNORE - MAC only */$?
PrintTableBorders	wordtech\disptbl.c	?^PrintTableBorders(ww, xlLeft, ylTop, dylText, dylA?
RcwPgvTableClip	wordtech\disptbl.c	?^RcwPgvTableClip(ww, hpldr, idr, prcwClip)$?
ReallocBmpScc	wordtech\disp3.c	?^ReallocBmpScc(pscc)$?
ScanTableRow	wordtech\disptbl.c	?^ScanTableRow ( ww, doc, cp, pfn, p1, p2 )$?
SccCpFirst	wordtech\disp3.c	?^SccCpFirst(hwwd)$?
ScrollDrDown	wordtech\disp3.c	?^NATIVE ScrollDrDown(ww, hpldr, idr, hplcedl, dlFro?
ScrollDrUp	wordtech\disp2.c	?^NATIVE ScrollDrUp(ww, hpldr, idr, hplcedl, dlFrom,?
SeeSel	wordtech\disp3.c	?^SeeSel() { $?
SeeSel1	wordtech\disp3.c	?^SeeSel1(fAlways)$?
SetElevWw	wordtech\disp3.c	?^EXPORT SetElevWw(ww)$?
SetPenForBrc	wordtech\disptbl.c	?^NATIVE SetPenForBrc(ww, brc, fHoriz, fFrameLines) ?
ShowInsertLine	wordtech\disp3.c	?^ShowInsertLine(psel)$?
SyncSbHor	wordtech\disp3.c	?^SyncSbHor(ww)$?
TranslateRc	wordtech\disptbl.c	?^TranslateRc(prcSrc,prcDst,dx,dy)$?
TrashAllWws	wordtech\disp3.c	?^TrashAllWws()$?
TrashSccFli	wordtech\disp3.c	?^TrashSccFli()$?
TrashWw	wordtech\disp3.c	?^TrashWw(ww)$?
TrashWwsForDoc	wordtech\disp3.c	?^TrashWwsForDoc(doc)$?
UnionRc	wordtech\disp3.c	?^UnionRc(prc1, prc2, prcDest)$?
UpdateAllWws	wordtech\disp3.c	?^UpdateAllWws( fAbortOK )$?
UpdateInvalidWw	wordtech\disp3.c	?^UpdateInvalidWw(ww, prcInval)$?
UpdateWw	wordtech\disp3.c	?^UpdateWw(ww, fAbortOK)$?
WidthHeightFromBrc	wordtech\disptbl.c	?^WidthHeightFromBrc(brc, fFrameLines, fWidth, fLine?
WwScrollWkTest	wordtech\disp3.c	?^WwScrollWkTest(ww)$?
XeLeftPage	wordtech\disp3.c	?^int XeLeftPage(ww)$?
XwFromWwCp	wordtech\disp3.c	?^int XwFromWwCp(ww, hpldr, idr, doc, cp, cpFirst)$?
YeBottomPage	wordtech\disp3.c	?^int YeBottomPage(ww)$?
YePage	wordtech\disp3.c	?^YePage(ww, fTop)$?
YeTopPage	wordtech\disp3.c	?^int YeTopPage(ww)$?
YwTopForDl	wordtech\disp3.c	?^YwTopForDl(hpldr, idr, dl, pywBottom)$?
AdjustCa	wordtech\editspec.c	?^AdjustCa(pca, doc, cpFirst, dcp)$?
AdjustCp	wordtech\editspec.c	?^NATIVE AdjustCp(pca, dcpIns) /* WINIGNORE - MAC on?
AdjustIpgds	wordtech\editspec.c	?^AdjustIpgds(doc, ipgdFirst, cpgd, fDel)$?
AdjustSels	wordtech\editspec.c	?^AdjustSels(psels, cpFirst, cpLim, dcpAdj)$?
ApplyTableProps	wordtech\editspec.c	?^ApplyTableProps(pca, fInTable)$?
AssureNestedPropsCorrect	wordtech\editspec.c	?^AssureNestedPropsCorrect(pca, fTable)$?
BkmkCpsFromIbkf	wordtech\editsub.c	?^BkmkCpsFromIbkf (doc, ibkf, pcpFirst, pcpLim)$?
CBTMemError	wordtech\error.c	?^CBTMemError(eid)$?
C_AdjustCp	wordtech\editspec.c	?^HANDNATIVE C_AdjustCp(pca, dcpIns)$?
C_InvalCaFierce	wordtech\editspec.c	?^HANDNATIVE C_InvalCaFierce()$?
CaFromIhddFirstLim	wordtech\editsub.c	?^CaFromIhddFirstLim(doc, ihddFirst, ihddLim,  pca)$?
CheckCollapseBlock	wordtech\editspec.c	?^CheckCollapseBlock()$?
CheckInvalCpFirst	wordtech\editspec.c	?^CheckInvalCpFirst (pca)$?
CkEids	wordtech\error.c	?^CkEids()$?
CmdAutoDelete	wordtech\editspec.c	?^CmdAutoDelete(pcaRM)$?
CmdDeleteSelCur	wordtech\editspec.c	?^CmdDeleteSelCur(fScrap, fRM, pcaRM, rpk)$?
CmdInsertSect	wordtech\editsub.c	?^CmdInsertSect(pcmb)$?
CmdInsertSect1	wordtech\editsub.c	?^CmdInsertSect1(pca, psep, pchp, ppap, fSepNext, fR?
CmdScanErrors	wordtech\error.c	?^CMD  CmdScanErrors (pcmb)$?
CorrectDodPlcs	wordtech\editspec.c	?^EXPORT CorrectDodPlcs(doc, cpMacCorrect)$?
CorrectPlcCpMac	wordtech\editspec.c	?^CorrectPlcCpMac(hplc, cpMacCorrect)$?
CpMacDocHeader	wordtech\editspec.c	?^CpMacDocHeader(doc)$?
CpTail	wordtech\editspec.c	?^CP CpTail(doc)$?
DeleteRM	wordtech\editsub.c	?^DeleteRM(pca) /* no longer used by Opus */$?
DirtyDoc	wordtech\editsub.c	?^DirtyDoc (doc)$?
DirtyEdl	wordtech\editspec.c	?^DirtyEdl(hplcedl, dl)$?
Editspec_Last	wordtech\editspec.c	?^Editspec_Last(){}$?
ErrorEidProc	wordtech\error.c	?^EXPORT ErrorEidProc(eid, szFunc)$?
ErrorEidRgwProc	wordtech\error.c	?^ErrorEidRgwProc(eid, rgw, szFunc)$?
ErrorEidStartup	wordtech\error.c	?^ErrorEidStartup(eid)$?
ErrorEidSzProc	wordtech\error.c	?^ErrorEidSzProc(eid, sz, szFunc)$?
ErrorEidWProc	wordtech\error.c	?^ErrorEidWProc(eid, w, szFunc)$?
ErrorIemdSzIIcon	wordtech\error.c	?^ErrorIemdSzIIcon(iemd, sz, iIcon)$?
ErrorNoMemory	wordtech\error.c	?^EXPORT ErrorNoMemory(eid)$?
FBkmkCpsIbkmkSpecial	wordtech\editsub.c	?^FBkmkCpsIbkmkSpecial(doc, ibkmk, pcpFirst, pcpLim)?
FBogusTblSel	wordtech\editspec.c	?^int FBogusTblSel(psel)$?
FCheckRefDoc	wordtech\editspec.c	?^FCheckRefDoc(doc, cpFirst, cpLim, fReportErr)$?
FContinueScan	wordtech\error.c	?^FContinueScan (iemd) /*Prompts user to continue ev?
FDeadFieldSplitByTable	wordtech\editspec.c	?^FDeadFieldSplitByTable(doc, cp, pcpFirst)$?
FDelCkBlockOk	wordtech\editspec.c	?^BOOL FDelCkBlockOk(rpk, pcaIns)$?
FDelCkBlockPsel	wordtech\editspec.c	?^BOOL FDelCkBlockPsel(psel, rpk, pcaIns, fReportErr?
FDelete	wordtech\editsub.c	?^FDelete(pca) /* in new edit.c */$?
FDeleteCheck	wordtech\editspec.c	?^int FDeleteCheck(fPaste, rpk, pcaIns)$?
FDeleteRM	wordtech\editsub.c	?^FDeleteRM(pca)$?
FDeleteableEop	wordtech\editspec.c	?^FDeleteableEop(pcaDel, rpk, pcaIns)$?
FFieldsInPca	wordtech\editspec.c	?^BOOL FFieldsInPca(pca)$?
FFormatDisplayPara	wordtech\editsub.c	?^FFormatDisplayPara (ww, doc, cp, cpLim, hplc)$?
FInsertIhdd	wordtech\editsub.c	?^FInsertIhdd(doc, ihdd)$?
FInvalSub	wordtech\editspec.c	?^FInvalSub(pcaMom, pcaSub, edc)$?
FLegalBkmkName	wordtech\editsub.c	?^FLegalBkmkName (st)$?
FMoveOkForTable	wordtech\editspec.c	?^FMoveOkForTable(doc, cp, pca)$?
FReplaceCpsRM	wordtech\editsub.c	?^FReplaceCpsRM(pcaDel, pcaIns) /* in new edit.c */$?
FReplaceFail	wordtech\editspec.c	?^FReplaceFail()$?
FReplaceRM	wordtech\editsub.c	?^FReplaceRM(pca, fn, fc, dfc)$?
FRulerUp	wordtech\editsub.c	?^#define FRulerUp(ww)    (PmwdWw(ww)->wwRuler == ww?
FSearchBookmark	wordtech\editsub.c	?^FSearchBookmark (doc, st, pcpFirst, pcpLim, pibkmk?
FSearchSttbUnsorted	wordtech\editsub.c	?^FSearchSttbUnsorted(hsttb, st, pibkf)$?
FSectLimAtCp	wordtech\editspec.c	?^EXPORT FSectLimAtCp(doc, cp)$?
FSetUndoB1	wordtech\editspec.c	?^FSetUndoB1(ucm, ucc, pca)$?
FSetUndoBefore	wordtech\editspec.c	?^FSetUndoBefore(ucm, ucc)$?
FSetUndoDelAdd	wordtech\editspec.c	?^FSetUndoDelAdd(pca, fAppend)$?
FSetUndoDelete	wordtech\editspec.c	?^FSetUndoDelete(pca, fScrap)$?
FTableMismatch	wordtech\editspec.c	?^FTableMismatch(pca)$?
FetchRgch	wordtech\editsub.c	?^FetchRgch(pcch, pch, doc, cp, cpLim, cchMax)$?
FlushPendingAlerts	wordtech\error.c	?^FlushPendingAlerts()$?
GetPl	wordtech\editsub.c	?^GetPl( hpl, ifoo, pfoo )$?
IGetStart	wordtech\error.c	?^IGetStart () /* Prompts user for starting iemd val?
IdrPrevFlow	wordtech\editspec.c	?^IdrPrevFlow(hpldr, idr)$?
IemdFromEid	wordtech\error.c	?^NATIVE IemdFromEid(eid)$?
IemdMax	wordtech\error.c	?^IemdMax () /*Computes total number of Iemd*/$?
InvalAutoReferences	wordtech\editspec.c	?^InvalAutoReferences(doc, iRef, edcDrp)$?
InvalCa	wordtech\editspec.c	?^InvalCa(pca, doc, cpFirst, dcp)$?
InvalCaFierce	wordtech\editspec.c	?^NATIVE InvalCaFierce() /* WINIGNORE - MAC only */$?
InvalCp	wordtech\editspec.c	?^InvalCp(pca)$?
InvalCp1	wordtech\editspec.c	?^EXPORT InvalCp1(pca)$?
InvalCp1Sub	wordtech\editspec.c	?^EXPORT InvalCp1Sub(pca)$?
InvalCp2	wordtech\editspec.c	?^InvalCp2(doc, cpFirst, dcp, fSetPlcUnk)$?
InvalCp2A	wordtech\editspec.c	?^InvalCp2A(doc, cpFirst, dcp, fSetPlcUnk)$?
InvalCp3	wordtech\editspec.c	?^InvalCp3(hpldr, doc, cpFirst, dcp, fDrDirty)$?
InvalDde	wordtech\editspec.c	?^InvalDde (pca)$?
InvalDoc	wordtech\editsub.c	?^InvalDoc(doc)$?
InvalFld	wordtech\editspec.c	?^InvalFld (pca, fEdit)$?
InvalFtn	wordtech\editspec.c	?^InvalFtn(doc, cp)$?
InvalHpldrCpFirst	wordtech\editspec.c	?^InvalHpldrCpFirst(hpldr, doc, pca)$?
InvalPageView	wordtech\editsub.c	?^InvalPageView(doc)$?
InvalParaSect	wordtech\editspec.c	?^EXPORT InvalParaSect(pcaDest, pcaSrc, fSame)$?
InvalSeqLevFields	wordtech\editspec.c	?^InvalSeqLevFields ()$?
InvalTableProps	wordtech\editspec.c	?^InvalTableProps(doc,cpFirst,dcp,fFierce)$?
InvalText	wordtech\editspec.c	?^EXPORT InvalText (pca, fEdit)$?
PutPl	wordtech\editsub.c	?^PutPl( hpl, ifoo, pfoo )$?
ReplaceIhdd	wordtech\editsub.c	?^ReplaceIhdd(doc, ihdd, pca)$?
ReplaceRM	wordtech\editsub.c	?^ReplaceRM(pca, fn, fc, dfc) /* no longer used by O?
ReplicateCps	wordtech\editsub.c	?^ReplicateCps(doc, cp, ccp)$?
ReportPendingAlerts	wordtech\error.c	?^ReportPendingAlerts()$?
ResetUndo	wordtech\editspec.c	?^ResetUndo()$?
ScratchBkmks	wordtech\editsub.c	?^ScratchBkmks (pca)$?
SelectPostDelete	wordtech\editspec.c	?^SelectPostDelete(cp)$?
SetErrorMatProc	wordtech\error.c	?^EXPORT SetErrorMatProc(mat)$?
SetPlcUnk	wordtech\editspec.c	?^SetPlcUnk(hplcfoo, cpFirst, cpLim)$?
SetUndoAfter	wordtech\editspec.c	?^SetUndoAfter(pca)$?
SetUndoN1	wordtech\editspec.c	?^SetUndoN1()$?
SetUndoNil	wordtech\editspec.c	?^SetUndoNil()$?
SetWholeDoc	wordtech\editspec.c	?^SetWholeDoc(docDest, pca)$?
SzSzAppend	wordtech\error.c	?^SzSzAppend(szTo, szFrom)$?
TrashFltg	wordtech\editspec.c	?^TrashFltg (fltg)$?
TrashFltgDoc	wordtech\editspec.c	?^TrashFltgDoc(doc, fltg)$?
ZeroDocTables	wordtech\editspec.c	?^ZeroDocTables(doc)$?
ApplyChpxTransforms	wordtech\fetch.c	?^#define ApplyChpxTransforms(pchp) \\$?
ApplyPrlSgc	wordtech\fetch.c	?^#define ApplyPrlSgc(pprl, cch, prgbProps, sgc, fWo?
BFromFc	wordtech\fetch.c	?^#define BFromFc(hpfkp, fc, pfcFirst, pfcLim, pifc,?
C_FGetParaState	wordtech\fetch2.c	?^HANDNATIVE C_FGetParaState(fAll, fAbortOk)$?
C_FInTableDocCp	wordtech\fetch.c	?^HANDNATIVE BOOL C_FInTableDocCp(doc, cp)$?
C_FSetRgchDiff	wordtech\fetch2.c	?^C_FSetRgchDiff(pchBase,pchNew,pchDiff,cch)$?
C_FSetRgwDiff	wordtech\fetch2.c	?^C_FSetRgwDiff(pwBase,pwNew,pwDiff,cw)$?
C_FormatDrLine	wordtech\format.c	?^HANDNATIVE C_FormatDrLine(ww, cp, pdr)$?
C_FormatLine	wordtech\format.c	?^HANDNATIVE C_FormatLine(ww, doc, cp)$?
C_FormatLineDxa	wordtech\format.c	?^HANDNATIVE C_FormatLineDxa(ww, doc, cp, dxa)$?
C_IbpLru	wordtech\fetch.c	?^HANDNATIVE C_IbpLru()$?
C_ItcGetTcx	wordtech\fetchtb.c	?^HANDNATIVE C_ItcGetTcx(ww, ptap, itc, ptcx)$?
C_ItcGetTcxCache	wordtech\fetchtb.c	?^HANDNATIVE C_ItcGetTcxCache(ww, doc, cp, ptap, itc?
CachePage	wordtech\fetch1.c	?^EXPORT CachePage(doc, cp)$?
CachePara	wordtech\fetch.c	?^#define CachePara(doc,cp) \\$?
CacheParaCa	wordtech\fetch.c	?^HANDNATIVE CacheParaCa(pca)$?
CacheSectCa	wordtech\fetch1.c	?^CacheSectCa(pca)$?
CacheSectProc	wordtech\fetch1.c	?^EXPORT CacheSectProc(doc, cp)$?
CacheSectSedMac	wordtech\fetch1.c	?^CacheSectSedMac(doc, cp)$?
CacheTap	wordtech\fetchtb.c	?^NATIVE CacheTap(doc, cp)$?
CacheTap1	wordtech\fetchtb.c	?^NATIVE CacheTap1(doc, cp, fOutline)$?
CacheTc	wordtech\fetchtb.c	?^NATIVE CacheTc(ww, doc, cp, fForceFirst, fForceLas?
CalcHorizTableBorders	wordtech\fetchtb.c	?^NATIVE CalcHorizTableBorders(ww,ptapCur,ptapPrev,f?
CchFetchFtnRef	wordtech\footnote.c	?^CchFetchFtnRef(doc, cpFirst, rgch)$?
CchIntToRgchNfc	wordtech\fetch1.c	?^int CchIntToRgchNfc(n, pch, nfc, cchMax)$?
CchUnsToPpch	wordtech\fetch1.c	?^int CchUnsToPpch(n, ppch)$?
ChFetch	wordtech\fetch.c	?^HANDNATIVE ChFetch(doc, cp, fcm)$?
ChLower	wordtech\fetch.c	?^ChLower(ch)$?
ChUpper	wordtech\fetch.c	?^ChUpper(ch)$?
CheckFlmState	wordtech\fetch1.c	?^EXPORT CheckFlmState()$?
CmdFootnote1	wordtech\footnote.c	?^CmdFootnote1(cpRefNew, fAuto, stRefDia)$?
CmdTitlePage	wordtech\fetch1.c	?^CmdTitlePage(pcmb)$?
CpFirstRef	wordtech\fetch1.c	?^EXPORT CP CpFirstRef(doc, cp, pcpRef, edcDrp)$?
CpFirstTap	wordtech\fetchtb.c	?^EXPORT CP CpFirstTap(doc,cpFirst)$?
CpFirstTap1	wordtech\fetchtb.c	?^NATIVE CP CpFirstTap1(doc, cpFirst, fOutline)$?
CpFromCpCl	wordtech\fetch1.c	?^CP CpFromCpCl(plbs, fCritical)$?
CpFromIpgd	wordtech\fetch1.c	?^CP CpFromIpgd(doc, ww, ipgd)$?
CpLimFtnCp	wordtech\footnote.c	?^EXPORT CP CpLimFtnCp(docSub, cp)$?
CpLimTableCell	wordtech\fetchtb.c	?^NATIVE CP CpLimTableCell(doc, cp) /* WINIGNORE - N?
CpRefFromCpSub	wordtech\fetch1.c	?^EXPORT CP CpRefFromCpSub(docSub, cp, edcDrp)$?
DiDirtyDoc	wordtech\fetch2.c	?^int DiDirtyDoc(doc)$?
DoPrmSgc	wordtech\fetch.c	?^#define DoPrmSgc(prm, prgbProps, sgc) \\$?
DxtLeftOfTabStop	wordtech\fetch2.c	?^EXPORT int DxtLeftOfTabStop(ichTab, ichLim, pftiDx?
FAbsPap	wordtech\fetch.c	?^HANDNATIVE int FAbsPap(doc, ppap)$?
FAddStdStcsToStsh	wordtech\fetch1.c	?^FAddStdStcsToStsh(doc, stc, pcstcStd)$?
FBorderPap	wordtech\fetch1.c	?^FBorderPap(ppap)$?
FCheckLargeEditFtn	wordtech\footnote.c	?^FCheckLargeEditFtn(pca, pfAllowUndo)$?
FEasyBorders	wordtech\fetchtb.c	?^NATIVE BOOL FEasyBorders(fFirstRow, fLastRow, rgbr?
FEasyBrc	wordtech\fetchtb.c	?^NATIVE FEasyBrc(brc)$?
FEnsureStcDefined	wordtech\fetch1.c	?^FEnsureStcDefined(doc, stc, pcstcStd)$?
FExpandGrpchr	wordtech\fetch1.c	?^EXPORT FExpandGrpchr(cbChr)$?
FGetCharState	wordtech\fetch2.c	?^FGetCharState(fAll, fAbortOk)$?
FInTableDocCp	wordtech\fetch.c	?^NATIVE BOOL FInTableDocCp(doc, cp) /* WINIGNORE - ?
FLower	wordtech\fetch.c	?^NATIVE int FLower(ch) /* WINIGNORE - MAC version, ?
FMultipleSect	wordtech\fetch1.c	?^int FMultipleSect(doc, phplcsed)$?
FNoBackSpaceRef	wordtech\footnote.c	?^FNoBackSpaceRef(hdod, cp)$?
FRareProc	wordtech\fetch1.c	?^NATIVE int FRareProc(n) /* WINIGNORE - MAC only */?
FUpdateHplcpad	wordtech\fetch1.c	?^EXPORT BOOL FUpdateHplcpad(doc)$?
FUpper	wordtech\fetch.c	?^NATIVE int FUpper(ch) /* WINIGNORE - MAC version, ?
FcFromPn	wordtech\fetch.c	?^HANDNATIVE FC FcFromPn(pn)$?
FcFromPo	wordtech\fetch.c	?^NATIVE FC FcFromPo(po) /* WINIGNORE - unused in WI?
Fetch1_Last	wordtech\fetch1.c	?^Fetch1_Last(){}$?
Fetch2_Last	wordtech\fetch2.c	?^Fetch2_Last(){}$?
FetchCp	wordtech\fetch.c	?^#define FetchCp(doc,cp,fcm) \\$?
FetchCpAndPara	wordtech\fetch.c	?^HANDNATIVE FetchCpAndPara( doc, cp, fcm )$?
FetchCpAndParaCa	wordtech\fetch.c	?^HANDNATIVE FetchCpAndParaCa( pca, fcm )$?
FetchCpVisible	wordtech\fetch1.c	?^FetchCpVisible(doc, cp, cpLim)$?
Fetchtb_Last	wordtech\fetchtb.c	?^Fetchtb_Last(){}$?
FormatLine	wordtech\format.c	?^NATIVE FormatLine(ww, doc, cp) /* WINIGNORE - "C_"?
FormatLineDr	wordtech\format.c	?^NATIVE FormatLineDr(ww, cp, pdr) /* WINIGNORE - "C?
FormatLineDxa	wordtech\format.c	?^NATIVE FormatLineDxa(ww, doc, cp, dxa) /* WINIGNOR?
FtnPageView	wordtech\footnote.c	?^FtnPageView(doc, cpFtn, pchp, ppap, cpRef)$?
GenStyleNameForStcp	wordtech\fetch2.c	?^NATIVE GenStyleNameForStcp(st, hsttbName, cstcStd,?
GetCellCps	wordtech\fetch.c	?^GetCellCps()$?
GetRowBorders	wordtech\fetchtb.c	?^GetRowBorders(rgbrc,ptap,itcFirst,itcLim,fStrict)$?
GetStdStyleSt	wordtech\fetch2.c	?^GetStdStyleSt(ist, st)$?
HpBaseForIbp	wordtech\fetch.c	?^CHAR HUGE *HpBaseForIbp(ibp)$?
HpchFromFc	wordtech\fetch.c	?^#define HpchFromFc(fn, fc) \\$?
HpchGetPn	wordtech\fetch.c	?^#define HpchGetPn(fn, pn) \\$?
HpsAlter	wordtech\fetch1.c	?^EXPORT int HpsAlter(hps, ialter)$?
IbpCacheFilePage	wordtech\fetch.c	?^#define IbpCacheFilePage(fn, pn) \\$?
IbpLru	wordtech\fetch.c	?^NATIVE IbpLru() /* WINIGNORE - MAC version */$?
InsertFtnSpace	wordtech\footnote.c	?^InsertFtnSpace(doc, cp, stRef, pchp)$?
ItcGetTcx	wordtech\fetchtb.c	?^NATIVE ItcGetTcx(ww, ptap, itc, ptcx) /* WINIGNORE?
ItcGetTcxCache	wordtech\fetchtb.c	?^NATIVE ItcGetTcxCache(ww, doc, cp, ptap, itc, ptcx?
JuniorChp	wordtech\fetch1.c	?^JuniorChp()$?
JuniorPap	wordtech\fetch1.c	?^JuniorPap()$?
LowerRgch	wordtech\fetch.c	?^HANDNATIVE LowerRgch(pch, cch)$?
LpInitFetch	wordtech\fetch.c	?^native long LpInitFetch(lpmh4) /* WINIGNORE - unus?
MapStc	wordtech\fetch.c	?^#define MapStc(pdod, stc, pchp, ppap) \\$?
MapStcStandard	wordtech\fetch1.c	?^EXPORT MapStcStandard(stc, pchp, ppap)$?
NormalizeSels	wordtech\fetch1.c	?^NormalizeSels(psels)$?
PfcbFn	wordtech\fetch.c	?^struct FCB *PfcbFn(fn)$?
PnFromFc	wordtech\fetch.c	?^HANDNATIVE PN PnFromFc(fc)$?
PnFromPlcbteFc	wordtech\fetch.c	?^#define PnFromPlcbteFc(hplcbte, fc) \\$?
PnWhoseFcGEFc	wordtech\fetch.c	?^NATIVE PN PnWhoseFcGEFc(fc) /* WINIGNORE - MAC ver?
PoFromFc	wordtech\fetch.c	?^NATIVE PO PoFromFc(fc) /* WINIGNORE - unused in WI?
PoWhoseFcGEFc	wordtech\fetch.c	?^NATIVE PO PoWhoseFcGEFc(fc) /* WINIGNORE - unused ?
PushInsSelCur	wordtech\fetch1.c	?^PushInsSelCur()$?
PushInsSels	wordtech\fetch1.c	?^PushInsSels(pselsPush)$?
RecordStshForDoc	wordtech\fetch1.c	?^RecordStshForDoc(doc, pstsh, phsttbChpe, phsttbPap?
SetDirty	wordtech\fetch.c	?^HANDNATIVE SetDirty(ibp)$?
SortRgb	wordtech\fetch2.c	?^SortRgb(rgb, ibMac, FGt)$?
SortSiftUpB	wordtech\fetch2.c	?^SortSiftUpB(rgb, ibI, ibN, FGt)$?
StStAppend	wordtech\fetch1.c	?^NATIVE StStAppend(st1, st2) /* WINIGNORE - MAC onl?
StToSz	wordtech\fetch1.c	?^StToSz(st, sz)$?
StandardChp	wordtech\fetch.c	?^HANDNATIVE StandardChp(pchp)$?
StandardPap	wordtech\fetch.c	?^HANDNATIVE StandardPap(ppap)$?
StandardSep	wordtech\fetch.c	?^HANDNATIVE StandardSep(psep)$?
TGetStatlineTable	wordtech\fetchtb.c	?^TGetStatlineTable(doc, pcpScan, cp, pyaPp, plnn, c?
UpdateHplcpadSingle	wordtech\fetch1.c	?^UpdateHplcpadSingle(doc, cpLim)$?
UpdatePad	wordtech\fetch1.c	?^UpdatePad(hplcpad, ipad, ppad)$?
WCompSt	wordtech\fetch1.c	?^NATIVE int WCompSt(st1, st2) /* WINIGNORE - MAC on?
WParseFontName	wordtech\fetch2.c	?^EXPORT WORD WParseFontName(tmm, sz, ppv, bArg, tmc?
WParseFontSize	wordtech\fetch2.c	?^EXPORT WORD WParseFontSize(tmm, sz, ppv, bArg, tmc?
XtFromXa	wordtech\format.c	?^#define XtFromXa(xa)		NMultDiv((xa), vfli.dxuInch,?
CkHplcHdd	wordtech\hdd.c	?^CkHplcHdd(doc)$?
CpBestHypd	wordtech\hyph.c	?^CP CpBestHypd(phypd)$?
CpMomFromHdr	wordtech\hdd.c	?^CP CpMomFromHdr(doc)$?
DocDispFromDocCpIhdt	wordtech\hdd.c	?^DocDispFromDocCpIhdt(doc, cp, ihdt)$?
DocDisplayHdr	wordtech\hdd.c	?^int DocDisplayHdr(doc, cp, ihdt)$?
FCaFromIhdt	wordtech\hdd.c	?^FCaFromIhdt(doc, cp, ihdtHdr, fSkip, pca, pihdd)$?
FFitHypdIch	wordtech\hyph.c	?^FFitHypdIch(ich)$?
FHeaderIhdt	wordtech\hdd.c	?^FHeaderIhdt(ihdt)$?
FHypdWidow	wordtech\hyph.c	?^FHypdWidow(phypd)$?
FHyphFind	wordtech\hyph.c	?^FHyphFind(dxaHotZ, fBatch, fCaps, pcpr)$?
FSaveHeader	wordtech\hdd.c	?^FSaveHeader(docHdrDisp, fKillEmpty)$?
HyphChangeSelection	wordtech\hyph.c	?^HyphChangeSelection(dxaHotZ, fCaps, pcpr)$?
HyphInsertCp	wordtech\hyph.c	?^HyphInsertCp(cp)$?
HyphenateWord	wordtech\hyph.c	?^HyphenateWord(phypd, fCaps)$?
IchLimEffectiveHypd	wordtech\hyph.c	?^int IchLimEffectiveHypd()$?
IhddFromDocCp	wordtech\hdd.c	?^IhddFromDocCp(pca, pihdd, mpihdtihdd)$?
IhddFromIhdtFtn	wordtech\hdd.c	?^IhddFromIhdtFtn(doc, ihdt)$?
IhdtFromIhdd	wordtech\hdd.c	?^IhdtFromIhdd(doc, ihdd, st)$?
IichBestHypd	wordtech\hyph.c	?^IichBestHypd()$?
NewTextHdr	wordtech\hdd.c	?^NewTextHdr(doc, cpFirst, docDisp, ihdt, wwHdr, fSe?
SetGrpfIhdtPca	wordtech\hdd.c	?^SetGrpfIhdtPca(grpfIhdt, pca)$?
AddRun	wordtech\inssubs.c	?^NATIVE AddRun(fn, fcLim, pchProp, cchProp, pfkpd, ?
AdjustEdlDcp	wordtech\insert.c	?^AdjustEdlDcp(doc, cp, dcpAdjust, dcpPending)$?
AdjustSingleCp	wordtech\insert.c	?^AdjustSingleCp(pcp, cpInsert, ichInsert)$?
ApplyDocSep	wordtech\inssubs.c	?^ApplyDocSep(doc, docSrc)$?
BFromVfcStm	wordtech\inssubs.c	?^BFromVfcStm()$?
BeginInsert	wordtech\insert.c	?^BeginInsert(ptlv)$?
BsvBackSpace	wordtech\insert.c	?^BsvBackSpace(ptlv)$?
C_AddRun	wordtech\inssubs.c	?^HANDNATIVE C_AddRun(fn, fcLim, pchProp, cchProp, p?
C_CbGenChpxFromChp	wordtech\inssubs.c	?^HANDNATIVE int C_CbGenChpxFromChp(pchpResult, pchp?
C_CbGenPapxFromPap	wordtech\inssubs.c	?^HANDNATIVE int C_CbGenPapxFromPap(ppapx, ppap, ppa?
C_CbGenPrl	wordtech\inssubs.c	?^HANDNATIVE int C_CbGenPrl(pprop, ppropBase, sprm, ?
C_CbGrpprlProp	wordtech\inssubs.c	?^HANDNATIVE int C_CbGrpprlProp(fNorm, pgrpprl, cbMa?
C_FAddRun	wordtech\inssubs.c	?^HANDNATIVE C_FAddRun(fn, fcLim, pchProp, cchProp, ?
C_FInsertRgch	wordtech\inssubs.c	?^HANDNATIVE C_FInsertRgch(doc, cp, rgch, cch, pchp,?
C_FNewChpIns	wordtech\inssubs.c	?^HANDNATIVE C_FNewChpIns(doc, cp, pchp, stc)$?
C_FcAppendRgchToFn	wordtech\inssubs.c	?^HANDNATIVE FC C_FcAppendRgchToFn(fn, pch, cch)$?
CaFromIhdd	wordtech\ihdd.c	?^CaFromIhdd(doc, ihdd, pca)$?
CaFromIhddSpec	wordtech\ihdd.c	?^CaFromIhddSpec(doc, ihdd, pca)$?
CbAppendTapPropsToPapx	wordtech\inssubs.c	?^EXPORT CbAppendTapPropsToPapx(rgbPapx, cbPapx, pta?
CbGenChpxFromChp	wordtech\inssubs.c	?^NATIVE int CbGenChpxFromChp(pchpResult, pchp, pchp?
CbGenPapxFromPap	wordtech\inssubs.c	?^int CbGenPapxFromPap(ppapx, ppap, ppapBase, fWord3?
CbGenPrl	wordtech\inssubs.c	?^NATIVE int CbGenPrl(pprop, ppropBase, sprm, rgb) /?
CbGrpprlFromChp	wordtech\inssubs.c	?^CbGrpprlFromChp(pgrpprl, pchp, pchpBase)$?
CbGrpprlFromPap	wordtech\inssubs.c	?^NATIVE int CbGrpprlFromPap(fNorm, pgrpprl, ppap, p?
CbGrpprlProp	wordtech\inssubs.c	?^NATIVE int CbGrpprlProp(fNorm, pgrpprl, cbMax, ppr?
CheckPagEnv	wordtech\ihdd.c	?^CheckPagEnv(doc, fSeeHidden, fShowResults)$?
CpBackspaceDocCpDcp	wordtech\insert.c	?^CP CpBackspaceDocCpDcp(doc, cpStart, dcp)$?
DirtyPageInsert	wordtech\insert.c	?^DirtyPageInsert()$?
DocMotherLayout	wordtech\ihdd.c	?^EXPORT DocMotherLayout(doc)$?
EndFliLayout	wordtech\ihdd.c	?^EndFliLayout(lm, flm)$?
EndInsert	wordtech\insert.c	?^EndInsert(fEnd,ptlv)$?
FAddRun	wordtech\inssubs.c	?^NATIVE FAddRun(fn, fcLim, pchProp, cchProp, pfkpd,?
FAddRunCkProc	wordtech\inssubs.c	?^NATIVE FAddRunCkProc(fn, fcLim, pchProp, cchProp, ?
FCleanUpHdr	wordtech\ihdd.c	?^int FCleanUpHdr(doc, fForce, fKillEmpty)$?
FEnvDirty	wordtech\inssubs.c	?^FEnvDirty(fn, fcEnv, cbEnv)$?
FGetValidPhe	wordtech\ihdd.c	?^NATIVE int FGetValidPhe(doc, cp, pphe)$?
FInTtp	wordtech\insert.c	?^FInTtp(doc, cp)$?
FInitWwLbsForRepag	wordtech\ihdd.c	?^FInitWwLbsForRepag(ww, doc, lm, plbsText, plbsFtn)?
FInsertRgch	wordtech\inssubs.c	?^FInsertRgch(doc, cp, rgch, cch, pchp, ppap)$?
FLimitFtnAtnRef	wordtech\insert.c	?^FLimitFtnAtnRef(pcpNew, cpLim, edcDrp)$?
FNewChpIns	wordtech\inssubs.c	?^FNewChpIns(doc, cp, pchp, stc)$?
FOKParaHeight	wordtech\ihdd.c	?^NATIVE int FOKParaHeight(prm, pphe)$?
FPagevw	wordtech\ihdd.c	?^FPagevw(docMother, pww)$?
FResetWwLayout	wordtech\ihdd.c	?^EXPORT FResetWwLayout(doc, flm, lm)$?
FSavePhe	wordtech\ihdd.c	?^EXPORT FSavePhe(pphe)$?
FWholeRowDirty	wordtech\insert.c	?^FWholeRowDirty(hpldr)$?
FcAppendHprgchToFn	wordtech\inssubs.c	?^NATIVE FC FcAppendHprgchToFn(fn, hpch, cch) /* WIN?
FcAppendRgchToFn	wordtech\inssubs.c	?^FC FcAppendRgchToFn(fn, pch, cch)$?
ForceSelOutOfHdr	wordtech\ihdd.c	?^ForceSelOutOfHdr(docDisp, doc)$?
InsertEopEtc	wordtech\insert.c	?^InsertEopEtc(ptlv)$?
InsertLoopCh	wordtech\insert.c	?^InsertLoopCh(ch, ucm)$?
InsertMultiLineRgch	wordtech\inssubs.c	?^InsertMultiLineRgch(doc, cp, rgch, cch, pchp, ppap?
InsertPostUpdate	wordtech\insert.c	?^InsertPostUpdate()$?
Inssubs_Last	wordtech\inssubs.c	?^Inssubs_Last(){}$?
InvalInsert	wordtech\insert.c	?^InvalInsert(ptlv)$?
InvalOtherWws	wordtech\insert.c	?^InvalOtherWws(fEnd)$?
LimitCpBkmk	wordtech\insert.c	?^LimitCpBkmk (pcpRet, cp)$?
LinkDocToWw	wordtech\ihdd.c	?^EXPORT LinkDocToWw(doc, wwTo, wwFrom)$?
PnAlloc	wordtech\inssubs.c	?^PN PnAlloc(fn, fAllocMac)$?
PnAlloc1	wordtech\inssubs.c	?^EXPORT PnAlloc1(fn, fAllocMac)$?
PnAlloc2	wordtech\inssubs.c	?^EXPORT PnAlloc2(fn, pn, fAllocMac, fWord3)$?
RgbFromVfcStm	wordtech\inssubs.c	?^RgbFromVfcStm(rgb, cb)$?
RgbToVfcStm	wordtech\inssubs.c	?^RgbToVfcStm(rgb, cb)$?
ScanFnForBytes	wordtech\inssubs.c	?^#define ScanFnForBytes(fn,hpch,cch,fWrite) \\$?
SetFnPos	wordtech\inssubs.c	?^SetFnPos(fn, fc)$?
SetStmPos	wordtech\inssubs.c	?^SetStmPos(fn, fc)$?
WFromVfcStm	wordtech\inssubs.c	?^WFromVfcStm()$?
WwHdrFromDocMom	wordtech\ihdd.c	?^WwHdrFromDocMom(docMom, pdocHdrDisp)$?
AbortLayout	wordtech\layout.c	?^AbortLayout()$?
AddHdrFtrPgn	wordtech\layout1.c	?^EXPORT void AddHdrFtrPgn(plbsText, cp, fTitlePage,?
AssignAbsXl	wordtech\layoutap.c	?^AssignAbsXl(plbs, plr)$?
C_CacheParaL	wordtech\layout2.c	?^HANDNATIVE C_CacheParaL(doc, cp, fOutline)$?
C_CacheSectL	wordtech\layout2.c	?^HANDNATIVE C_CacheSectL(doc, cp, fOutline)$?
C_ClFormatLines	wordtech\layout2.c	?^HANDNATIVE int C_ClFormatLines(plbs, cpLim, dylFil?
C_CopyHdtLrs	wordtech\layout2.c	?^HANDNATIVE C_CopyHdtLrs(ihdt, plbs, yl, plbsAbs)$?
C_CopyLbs	wordtech\layout2.c	?^HANDNATIVE C_CopyLbs(plbsFrom, plbsTo)$?
C_CopyLrs	wordtech\layout2.c	?^HANDNATIVE C_CopyLrs(hpllrFrom, plbsTo, ilrMac, yl?
C_FAbortLayout	wordtech\layout2.c	?^HANDNATIVE C_FAbortLayout(fOutline)$?
C_FAssignLr	wordtech\layout2.c	?^HANDNATIVE int C_FAssignLr(plbs, dylFill, fEmptyOK?
C_FGetFtnBreak	wordtech\layout2.c	?^HANDNATIVE int C_FGetFtnBreak(plbs, ifrl, pfrl, fp?
C_FWidowControl	wordtech\layout1.c	?^HANDNATIVE int C_FWidowControl(plbs, plbsNew, dylF?
C_IfrdGatherFtnRef	wordtech\layout2.c	?^HANDNATIVE int C_IfrdGatherFtnRef(plbs, plbsNew, i?
C_LbcFormatPara	wordtech\layout.c	?^HANDNATIVE int C_LbcFormatPara(plbs, dylFill, clLi?
C_PopLbs	wordtech\layout2.c	?^HANDNATIVE int C_PopLbs(plbsId, plbsTo)$?
C_PushLbs	wordtech\layout2.c	?^HANDNATIVE C_PushLbs(plbsFrom, plbsTo)$?
C_ReplaceInPllr	wordtech\layout2.c	?^HANDNATIVE C_ReplaceInPllr(hpllr, ilr, plr)$?
CacheParaL	wordtech\layout2.c	?^NATIVE CacheParaL(doc, cp, fOutline) /* WINIGNORE ?
CacheSectL	wordtech\layout2.c	?^NATIVE CacheSectL(doc, cp, fOutline) /* WINIGNORE ?
CheckAbsCollisions	wordtech\layoutap.c	?^CheckAbsCollisions(plbs)$?
ClFormatLines	wordtech\layout2.c	?^NATIVE int ClFormatLines(plbs, cpLim, dylFill, dyl?
ConstrainToAbs	wordtech\layoutap.c	?^int ConstrainToAbs(plbs, dylFill, prcl, prclPend, ?
CopyAbsLrs	wordtech\layoutap.c	?^CopyAbsLrs(hpllrFrom, hpllrTo, fCopyHdr, fCopyAll)?
CopyHdtLrs	wordtech\layout2.c	?^NATIVE CopyHdtLrs(ihdt, plbs, yl, plbsAbs) /* WINI?
CopyLbs	wordtech\layout2.c	?^NATIVE CopyLbs(plbsFrom, plbsTo) /* WINIGNORE - "C?
CopyLrs	wordtech\layout2.c	?^NATIVE CopyLrs(hpllrFrom, plbsTo, ilrMac, yl, fCop?
DxlFromTable	wordtech\layoutap.c	?^DxlFromTable(ww, doc, cp)$?
DylDeadSpace	wordtech\layoutap.c	?^int DylDeadSpace(plbs)$?
DylLrsForDoc	wordtech\layoutap.c	?^int DylLrsForDoc(plbs)$?
FAbortLayout	wordtech\layout2.c	?^NATIVE FAbortLayout(fOutline) /* WINIGNORE - Mac v?
FAbsInPllr	wordtech\layout1.c	?^int FAbsInPllr(hpllr)$?
FAddHdrFtr	wordtech\layout1.c	?^FAddHdrFtr(plbsText, cp, cHdrFtrLayoutAttempts, fT?
FAssignLr	wordtech\layout2.c	?^EXPORT int FAssignLr(plbs, dylFill, fEmptyOK) /* W?
FEmptyPage	wordtech\layout1.c	?^int FEmptyPage(bkc, ppgn, fFacingPages, fRight)$?
FGetFtnBreak	wordtech\layout2.c	?^NATIVE int FGetFtnBreak(plbs, ifrl, pfrl, fpc) /* ?
FIhddGt	wordtech\layout1.c	?^FIhddGt(ihdt0, ihdt1)$?
FNilHdt	wordtech\layout1.c	?^FNilHdt(ihdt)$?
FSectDrc	wordtech\layoutap.c	?^FSectDrc(pdrc1, pdrc2)$?
FWidowControl	wordtech\layout1.c	?^NATIVE int FWidowControl(plbs, plbsNew, dylFill, f?
FillInHdt	wordtech\layout1.c	?^void FillInHdt(plbs, xl, dxl, cp, ihdt, ihdd)$?
FillLinesUntil	wordtech\layout2.c	?^HANDNATIVE FillLinesUntil(cpLim, dyllFill, clLim, ?
IfrdGatherFtnRef	wordtech\layout2.c	?^NATIVE int IfrdGatherFtnRef(plbs, plbsNew, ifrd, f?
LbcAdvanceOneLine	wordtech\layout1.c	?^int LbcAdvanceOneLine(plbs)$?
LbcFormatBlock	wordtech\layout.c	?^int LbcFormatBlock(plbs, cpLim, dylFill, fEmptyOK,?
LbcFormatChain	wordtech\layoutap.c	?^int LbcFormatChain(plbs, cpLim, dylFill, clLim, fL?
LbcFormatColumn	wordtech\layout.c	?^int LbcFormatColumn(plbsText, plbsFtn, cpLim, dylF?
LbcFormatPage	wordtech\layout.c	?^int LbcFormatPage(plbsText, plbsFtn)$?
LbcFormatPara	wordtech\layout.c	?^NATIVE int LbcFormatPara(plbs, dylFill, clLim) /* ?
LbcPositionAbs	wordtech\layoutap.c	?^int LbcPositionAbs(plbs, cpLim, dylFill, fNeedHeig?
LbcSideBySide	wordtech\layout1.c	?^EXPORT int LbcSideBySide(plbs, cpLim, dylFill, fEm?
MutateRcl	wordtech\layoutap.c	?^MutateRcl(prcl, ywTop, xwLeft, dxw, dyw, dxe, dye)?
NewLrForSxs	wordtech\layout1.c	?^NewLrForSxs(plbs, ylTop)$?
NewSectLayout	wordtech\layout1.c	?^void NewSectLayout(plbs, fDoHdrs)$?
PopLbs	wordtech\layout2.c	?^NATIVE int PopLbs(plbsId, plbsTo) /* WINIGNORE - "?
PushLbs	wordtech\layout2.c	?^NATIVE PushLbs(plbsFrom, plbsTo) /* WINIGNORE - "C?
ReplaceInPllr	wordtech\layout2.c	?^NATIVE ReplaceInPllr(hpllr, ilr, plr) /* WINIGNORE?
SetAbsLr	wordtech\layoutap.c	?^NATIVE SetAbsLr(plbs, plr) /* WINIGNORE - PCWORD v?
SetHdts	wordtech\layout1.c	?^EXPORT void SetHdts(plbs, cp) /* WINIGNORE - MAC o?
ShowLbsProc	wordtech\layoutap.c	?^EXPORT ShowLbsProc(plbs, irtn)$?
Sort	wordtech\layout1.c	?^Sort(rgw, iwMac, FGt)$?
SortSiftUp	wordtech\layout1.c	?^SortSiftUp(rgw, iwI, iwN, FGt)$?
UnstackLbs	wordtech\layout2.c	?^NATIVE UnstackLbs(plbs) /* WINIGNORE - near assemb?
ClearCap	wordtech\outline.c	?^EXPORT ClearCap()$?
CmdCollapse	wordtech\outline.c	?^CMD CmdCollapse(pcmb)$?
CmdConvertToBody	wordtech\outline.c	?^CMD CmdConvertToBody(pcmb)$?
CmdDemote	wordtech\outline.c	?^CMD CmdDemote(pcmb)$?
CmdExpand	wordtech\outline.c	?^CMD CmdExpand(pcmb)$?
CmdExpandAll	wordtech\outline.c	?^CMD CmdExpandAll(pcmb)$?
CmdMoveDown	wordtech\outline.c	?^CMD CmdMoveDown(pcmb)$?
CmdMoveUp	wordtech\outline.c	?^CMD CmdMoveUp(pcmb)$?
CmdMoveUpDn	wordtech\outline.c	?^CmdMoveUpDn(fUp)$?
CmdMoveUpDn1	wordtech\outline.c	?^CmdMoveUpDn1(pcaFrom, cpDest, ucm)$?
CmdOutlineAction	wordtech\outline.c	?^CmdOutlineAction(pcmb)$?
CmdOutlineLeftRight	wordtech\outline.c	?^CmdOutlineLeftRight(pcaOp, sprm, val, ucm)$?
CmdOutlnUcm	wordtech\outline.c	?^CmdOutlnUcm(ucm)$?
CmdOutlnUcm1	wordtech\outline.c	?^CmdOutlnUcm1(ucm, pcaOp, sty, val)$?
CmdPromote	wordtech\outline.c	?^CMD CmdPromote(pcmb)$?
CmdShowFormat	wordtech\outline.c	?^CMD CmdShowFormat()$?
CmdShowToLvl1	wordtech\outline.c	?^CMD CmdShowToLvl1(pcmb)$?
CmdShowToLvl2	wordtech\outline.c	?^CMD CmdShowToLvl2(pcmb)$?
CmdShowToLvl3	wordtech\outline.c	?^CMD CmdShowToLvl3(pcmb)$?
CmdShowToLvl4	wordtech\outline.c	?^CMD CmdShowToLvl4(pcmb)$?
CmdShowToLvl5	wordtech\outline.c	?^CMD CmdShowToLvl5(pcmb)$?
CmdShowToLvl6	wordtech\outline.c	?^CMD CmdShowToLvl6(pcmb)$?
CmdShowToLvl7	wordtech\outline.c	?^CMD CmdShowToLvl7(pcmb)$?
CmdShowToLvl8	wordtech\outline.c	?^CMD CmdShowToLvl8(pcmb)$?
CmdShowToLvl9	wordtech\outline.c	?^CMD CmdShowToLvl9(pcmb)$?
CmdToggleEllip	wordtech\outline.c	?^CMD CmdToggleEllip(pcmb)$?
CpBackVisibleOutline	wordtech\outline.c	?^CP CpBackVisibleOutline(doc, cp)$?
CpLimSubText	wordtech\outline.c	?^CP CpLimSubText(pca, fVisi, fBody)$?
EnsureTableStc	wordtech\outline.c	?^EnsureTableStc(doc, hplcpad, ipad)$?
ExpandOutlineCa	wordtech\outline.c	?^ExpandOutlineCa(pca, fLeftRight)$?
FCaInTable	wordtech\outline.c	?^FCaInTable(pca)$?
InvalOutlineWws	wordtech\outline.c	?^InvalOutlineWws(doc)$?
LvlFromDocCp	wordtech\outline.c	?^LvlFromDocCp(doc, cp)$?
LvlFromIpad	wordtech\outline.c	?^LvlFromIpad(doc, ipad, fInsert)$?
AddDcpToCps	wordtech\plc.c	?^HANDNATIVE AddDcpToCps(lprgcp, icpFirst, icpLim, d?
AddPrlSorted	wordtech\prcsubs.c	?^EXPORT AddPrlSorted(psebl, pprl, cchPrl)$?
AddTabs	wordtech\prl.c	?^AddTabs(rgdxaOld, rgtbdOld, rgdxaCloseOld, pidxaOl?
AdjustHplc	wordtech\plc.c	?^HANDNATIVE AdjustHplc(hplc, cp, dcpNew, icpCertain?
AdjustHplcCps	wordtech\plc.c	?^native AdjustHplcCps(hplc, cp, dcp, ipcdMin) /* WI?
AdjustHplcCpsToLim	wordtech\plc.c	?^HANDNATIVE AdjustHplcCpsToLim(hplc, icpLim)$?
AdjustHplcedlCps	wordtech\plc.c	?^NATIVE AdjustHplcedlCps(hplcedl, cp, dcp) /* WINIG?
AdjustPdrDyl	wordtech\pagevw.c	?^void AdjustPdrDyl(hpldr, pxlRight, idr, pidrMac)$?
AdvanceLbsFromPgd	wordtech\printsub.c	?^AdvanceLbsFromPgd(plbsText, plbsFtn, ipgd)$?
ApplyGrpprlCa	wordtech\prcsubs.c	?^ApplyGrpprlCa(grpprl, cb, pca)$?
ApplyGrpprlSelCur	wordtech\prcsubs.c	?^ApplyGrpprlSelCur(grpprl, cb, fSetUndo)$?
ApplyGrpprlToStshPrope	wordtech\prcsubs.c	?^ApplyGrpprlToStshPrope(pgrpprl, cchGrpprl, fChp, f?
ApplyNinchChpGrpprlCa	wordtech\prcsubs.c	?^ApplyNinchChpGrpprlCa(grpprl, cb, pca)$?
ApplySprm	wordtech\prl.c	?^NATIVE ApplySprm(hpprl, sprm, val, prgbProps)$?
BltInPlc	wordtech\plc.c	?^HANDNATIVE BltInPlc(bpm, hplc, i, dicp, difoo, c)$?
C_AdjustHplcedlCps	wordtech\plc.c	?^HANDNATIVE C_AdjustHplcedlCps(hplcedl, cp, dcp)$?
C_ValFromPropSprm	wordtech\prl.c	?^HANDNATIVE int C_ValFromPropSprm(prgbProps, sprm)$?
CacheParaPRC	wordtech\prcsubs.c	?^CacheParaPRC(doc,cp)$?
CacheParaSel	wordtech\prcsubs.c	?^CacheParaSel(psel)$?
CchPrl	wordtech\prl.c	?^CchPrl(pprl)$?
CchPrlFromSprmVal	wordtech\prcsubs.c	?^int CchPrlFromSprmVal(prl, sprm, val)$?
CmdApplySprmPStc	wordtech\prcsubs.c	?^CmdApplySprmPStc(pprl)$?
CmdPageView	wordtech\pagevw.c	?^CmdPageView(pcmb /* fOn if invoked from macro stat?
CmdPageViewOff	wordtech\pagevw.c	?^CmdPageViewOff(ww)$?
CmdPageViewOn	wordtech\pagevw.c	?^CmdPageViewOn(ww, doc)$?
CmdPgvNewPage	wordtech\pagevw.c	?^CmdPgvNewPage(fNext)$?
CmdPgvNextPage	wordtech\pagevw.c	?^CmdPgvNextPage(pcmb)$?
CmdPgvPrevPage	wordtech\pagevw.c	?^CmdPgvPrevPage(pcmb)$?
CompletelyAdjustHplcCps	wordtech\plc.c	?^HANDNATIVE CompletelyAdjustHplcCps(hplc)$?
ComposeScalingFactors	wordtech\prcsubs.c	?^ComposeScalingFactors(pprlLeft, pprlRight, pprlNew?
ComposeStcPermutations	wordtech\prcsubs.c	?^ComposeStcPermutations(pprlLeft, pprlRight, pprlNe?
ComposeTabs	wordtech\prcsubs.c	?^ComposeTabs(pprlLeft, pprlRight, pprlNew, pcb)$?
CopyMultPlc	wordtech\plc.c	?^HANDNATIVE CopyMultPlc(cFoo, hplcSrc, ifooSrc, hpl?
CpFirstPage	wordtech\pagevw.c	?^CP CpFirstPage(doc, cp, tDirection)$?
CpMacPlc	wordtech\plc.c	?^NATIVE CP CpMacPlc(hplc)$?
CpPlc	wordtech\plc.c	?^HANDNATIVE CP CpPlc(hplc, i)$?
DcpAdjust	wordtech\plc.c	?^HANDNATIVE CP DcpAdjust(pplc, icp)$?
DeleteTabs	wordtech\prl.c	?^DeleteTabs(rgdxaOld, rgtbdOld, rgdxaCloseOld, pidx?
DisplayLrTable	wordtech\printsub.c	?^DisplayLrTable(ww, plr, dytAbove)$?
DisplayLrs	wordtech\printsub.c	?^DisplayLrs(plbsText, plbsFtn, fCanAbort)$?
DisplayTcLines	wordtech\printsub.c	?^DisplayTcLines(ww, xl, yl)$?
DocCpWithinPage	wordtech\printsub.c	?^int DocCpWithinPage(pcp)$?
DumpHplcpgd	wordtech\printsub.c	?^DumpHplcpgd(hplcpgd,sz)$?
EmitSprmCMajCa	wordtech\prcsubs.c	?^EmitSprmCMajCa(pca, pchp)$?
EmitSprmCMajority	wordtech\prcsubs.c	?^EmitSprmCMajority(pchp)$?
EndFliLayout	wordtech\printsub.c	?^EndFliLayout(lm, fVisi)$?
EndLayout	wordtech\printsub.c	?^EndLayout(plbsText, plbsFtn)$?
EnsureCpPgd	wordtech\printsub.c	?^EnsureCpPgd(plbs, ipgd)$?
ExpandCaCache	wordtech\prcsubs.c	?^ExpandCaCache(pca, pcaInval, pcaCache, sgc,  Cache?
ExpandCaSprm	wordtech\prcsubs.c	?^ExpandCaSprm(pca, pcaInval, psprm)$?
ExpandCaTap	wordtech\prcsubs.c	?^ExpandCaTap(pca, pcaInval)$?
FCloseXa	wordtech\prl.c	?^FCloseXa(xa1, xa2)$?
FCreateChSpec	wordtech\printsub.c	?^FCreateChSpec(doc, ch)$?
FDestroyParaHeight	wordtech\prcsubs.c	?^FDestroyParaHeight(ppap, ppapBase)$?
FFacingPages	wordtech\printsub.c	?^EXPORT FFacingPages(doc)$?
FInitLayout	wordtech\printsub.c	?^FInitLayout(ww, doc, plbsText, plbsFtn)$?
FLrGt	wordtech\printsub.c	?^FLrGt(ilr0, ilr1)$?
FMatchAbs	wordtech\printsub.c	?^EXPORT int FMatchAbs(doc, ppap1, ppap2)$?
FNeLbsPgd	wordtech\printsub.c	?^FNeLbsPgd(plbs, ppgd, fFtn)$?
FPldrFromPllr	wordtech\pagevw.c	?^int FPldrFromPllr(doc, hpldr, ww, plbsText)$?
FPrepareDocFieldsForPrint	wordtech\printsub.c	?^FPrepareDocFieldsForPrint (doc, pfp)$?
FPrintDone	wordtech\printsub.c	?^FPrintDone(plbs, scn, pgn)$?
FRulerUp	wordtech\pagevw.c	?^#define FRulerUp(ww)    (PmwdWw(ww)->wwRuler == ww?
FUpdateHplcpgd	wordtech\printsub.c	?^FUpdateHplcpgd(ww, doc, plbsText, plbsFtn, prpl, p?
GetPlc	wordtech\plc.c	?^HANDNATIVE GetPlc(hplc, i, pchFoo)$?
HavePllr	wordtech\printsub.c	?^HavePllr(doc, plbs, ipgd)$?
IInPlc	wordtech\plc.c	?^HANDNATIVE int IInPlc(hplc, cp)$?
IInPlc2	wordtech\plc.c	?^HANDNATIVE int IInPlc2(hplc, cp, iFirst)$?
IInPlc2Mult	wordtech\plc.c	?^NATIVE int IInPlc2Mult(hplc, cp, iFirst) /* WINIGN?
IInPlcCheck	wordtech\plc.c	?^HANDNATIVE int IInPlcCheck(hplc, cp)$?
IInPlcMult	wordtech\plc.c	?^NATIVE int IInPlcMult(hplc, cp) /* WINIGNORE - unu?
IInPlcQuick	wordtech\plc.c	?^NATIVE int IInPlcQuick(hplc, cp) /* WINIGNORE - un?
IInPlcRef	wordtech\plc.c	?^HANDNATIVE int IInPlcRef(hplc, cpFirst)$?
IMacPlc	wordtech\plc.c	?^HANDNATIVE int IMacPlc(hplc)$?
IcpInRgcp	wordtech\plc.c	?^HANDNATIVE int IcpInRgcp(lprgcp, icpLim, cp)$?
IcpInRgcpAdjusted	wordtech\plc.c	?^HANDNATIVE IcpInRgcpAdjusted(lprgcp, pplc, cp)$?
InitFliForLayout	wordtech\printsub.c	?^InitFliForLayout(lm, pfVisi)$?
InitPlcedl	wordtech\plc.c	?^EXPORT InitPlcedl(hplcedl, dlStart, cdl)$?
InvalForPgd	wordtech\printsub.c	?^InvalForPgd(doc, ipgd)$?
InvalSoftlyPgvwPara	wordtech\prcsubs.c	?^InvalSoftlyPgvwPara(doc, pprl, cch)$?
IpgdPldrFromDocCp	wordtech\pagevw.c	?^IpgdPldrFromDocCp(ww, doc, cp)$?
IpgdPldrFromIpgd	wordtech\pagevw.c	?^IpgdPldrFromIpgd(ww, ipgd)$?
IpgdPldrFromWwDocCpIpgd	wordtech\pagevw.c	?^IpgdPldrFromWwDocCpIpgd(ww, doc, cp, ipgd)$?
IpgdRepagToCpIpgd	wordtech\pagevw.c	?^int IpgdRepagToCpIpgd(ww, doc, cp, ipgd, plbsText,?
LinkPrcToPrm	wordtech\prcsubs.c	?^LinkPrcToPrm(pprm, hprc)$?
LpInitPlc	wordtech\plc.c	?^native long LpInitPlc(lpmh4) /* WINIGNORE - unused?
LprgcpForPlc	wordtech\plc.c	?^HANDNATIVE CP far *LprgcpForPlc(pplc)$?
MapStcToTempDoc	wordtech\printsub.c	?^MapStcToTempDoc(doc, stc)$?
MergeGrpprls	wordtech\prcsubs.c	?^MergeGrpprls(pgrpprlLeft, pcbLeft, pgrpprlRight, c?
MultFrc	wordtech\prl.c	?^MultFrc(pfrcEarlier, pfrcLater, pfrcResult)$?
PInPl	wordtech\plc.c	?^HANDNATIVE char  *PInPl(hpl, i)$?
PageSectFromSt	wordtech\printsub.c	?^PageSectFromSt(st, ppgn, pscn)$?
ParsePageSect	wordtech\printsub.c	?^ParsePageSect(msg, pst, ppval, tmc)$?
PgrpprlFromPrm	wordtech\prcsubs.c	?^PgrpprlFromPrm(prm, pcb, grpprl)$?
PrinterChange	wordtech\printsub.c	?^PrinterChange()$?
PrmAppend	wordtech\prcsubs.c	?^int PrmAppend(prmPrev, pgrpprlNew, cbNew)$?
PrmFromPrc	wordtech\prcsubs.c	?^PrmFromPrc(pprcNew, prm)$?
PutCpPlc	wordtech\plc.c	?^HANDNATIVE int PutCpPlc(hplc, i, cp)$?
PutIMacPlc	wordtech\plc.c	?^NATIVE PutIMacPlc(hplc, iMac)$?
PutPlc	wordtech\plc.c	?^HANDNATIVE PutPlc(hplc, i, pchFoo)$?
PutPlcLastDebugProc	wordtech\plc.c	?^NATIVE PutPlcLastDebugProc(hplc, i, pchFoo) /* WIN?
PutPlcLastProc	wordtech\plc.c	?^HANDNATIVE PutPlcLastProc()$?
QInPlc	wordtech\plc.c	?^HANDNATIVE char far *QInPlc(hplc, i)$?
RawLrCps	wordtech\printsub.c	?^RawLrCps(plbs, plr, ww)$?
SetPgdInvalid	wordtech\printsub.c	?^NATIVE SetPgdInvalid(ipgd, plbsText, plbsFtn)$?
SetPgdValid	wordtech\printsub.c	?^NATIVE SetPgdValid(ipgd, plbsText, plbsFtn, fForma?
SetPropFromSprmVal	wordtech\prcsubs.c	?^SetPropFromSprmVal(prgbProps, sprm, val)$?
SignExtendByte	wordtech\prcsubs.c	?^SignExtendByte(b)$?
TComparePldrs	wordtech\printsub.c	?^TComparePldrs(hpldrOld, hpldrNew)$?
TrackPgVwMouse	wordtech\pagevw.c	?^TrackPgVwMouse( hwnd, pt, bcm )$?
ValFromPropSprm	wordtech\prl.c	?^NATIVE int ValFromPropSprm(prgbProps, sprm) /* WIN?
ValFromSprm	wordtech\prcsubs.c	?^ValFromSprm(sprm)$?
WChecksumForPrc	wordtech\prcsubs.c	?^int WChecksumForPrc(pprc)$?
WwFromLbsDoc	wordtech\printsub.c	?^int WwFromLbsDoc(plbs, doc)$?
cof	wordtech\prcsubs.c	?^#define cof(field) offset(CHP, field)$?
pof	wordtech\prcsubs.c	?^#define pof(field) offset(PAP, field)$?
sof	wordtech\prcsubs.c	?^#define sof(field) offset(SEP, field)$?
tof	wordtech\prcsubs.c	?^#define tof(field) offset(TAP, field)$?
AppendHpchToFbb	wordtech\savefast.c	?^AppendHpchToFbb(hpch, cfc)$?
ApplyGrpprlDocSubdocs	wordtech\stysubs.c	?^ApplyGrpprlDocSubdocs(doc, rgb, cb)$?
ApplyGrpprlWholeDoc	wordtech\stysubs.c	?^ApplyGrpprlWholeDoc(doc, rgb, cb)$?
AssignFcDest	wordtech\savefast.c	?^AssignFcDest(cfc, pfcDestTextFirst, pfcDestLim, pf?
BackOneNotFlatPara	wordtech\scroll.c	?^BackOneNotFlatPara(doc, cpLim)$?
BeginFbb	wordtech\savefast.c	?^BeginFbb(fnDest, fUseExtBuff)$?
BrclFromBrc	wordtech\savefast.c	?^int BrclFromBrc(pbrc)$?
CacheTable	wordtech\selecttb.c	?^CacheTable(doc, cp)$?
CacheTcForItc	wordtech\selecttb.c	?^CacheTcForItc(ww, doc, cp, itc)$?
CbSttbf	wordtech\savefast.c	?^uns CbSttbf(psttb)$?
CbWriteSttbFontToFile	wordtech\savefast.c	?^CbWriteSttbFontToFile(doc, fn, pfc)$?
CdlEnrichSccAbove	wordtech\scroll.c	?^CdlEnrichSccAbove(ww, cpFirst)$?
ChangeSel	wordtech\select.c	?^ChangeSel(psel, cp, sty, fVisibleOnly, fMouse)$?
CheckScrapStsh	wordtech\stysubs.c	?^CheckScrapStsh(doc)$?
CkTableSel	wordtech\selecttb.c	?^CkTableSel()$?
ClearInsertLine	wordtech\select.c	?^ClearInsertLine(psel) /* moved to disp1.c in WIN *?
CloseUpStsh	wordtech\stysubs.c	?^CloseUpStsh(doc)$?
CloseUpSttb	wordtech\sttb.c	?^EXPORT CloseUpSttb(hsttb)$?
CmdEndSsc	wordtech\selectsp.c	?^CmdEndSsc(fDoIt, pcmb)$?
CmdMoveCopy	wordtech\selectsp.c	?^CmdMoveCopy(fMove, pcaFrom, pselTo)$?
ColumnSelBegin	wordtech\selecttb.c	?^ColumnSelBegin(psel, cpNew, itc, pcaTapAnchor, itc?
CopyLastFkp	wordtech\savefast.c	?^CopyLastFkp(hplcbte, pfkp, fn, ppn)$?
CopyLooksDyadic	wordtech\selectsp.c	?^CopyLooksDyadic(fCab, pselFrom)$?
CopyStyleWithinStsh	wordtech\stysubs.c	?^CopyStyleWithinStsh(doc, stcFrom, stcTo)$?
CpCheckEndRight	wordtech\select.c	?^CP CpCheckEndRight(cp, cpAnchor, pflss, psel, psty?
CpFirstForItc	wordtech\selecttb.c	?^CP CpFirstForItc(doc, cp, itc)$?
CpFirstFull	wordtech\scroll.c	?^CP CpFirstFull(pwwd)$?
CpFirstSty	wordtech\select.c	?^CP CpFirstSty(ww, doc, cp, sty, fEnd)$?
CpFromDlXp	wordtech\select.c	?^CP CpFromDlXp(ww, hpldr, idr, dl, xp, pflt, pflss)?
CpFromXpVfli	wordtech\select.c	?^CP CpFromXpVfli(xp, pflt, fTabTrail, fAdjustItalic?
CpLastSkipOver	wordtech\select.c	?^CP CpLastSkipOver(doc, cp1, cp2)$?
CpLastVisiOutline	wordtech\select.c	?^CP CpLastVisiOutline(ww, doc, cp, pcpLastInvisi)$?
CpLim2CharBlock	wordtech\select.c	?^CP CpLim2CharBlock(ww, doc, cp)$?
CpLimCharBlock	wordtech\select.c	?^CP CpLimCharBlock(ww, doc, cp)$?
CpLimSty	wordtech\select.c	?^CP CpLimSty(ww, doc, cp, sty, fEnd)$?
CpScaleThumb	wordtech\scroll.c	?^CP CpScaleThumb(ww, dq)$?
CpVisiBeforeCp	wordtech\select.c	?^CP CpVisiBeforeCp(ww, doc, cp)$?
CpVisiForStyPara	wordtech\select.c	?^#define CpVisiForStyPara(ww, doc, cp)	(cp)$?
DeleteIFromSttb	wordtech\sttb.c	?^DeleteIFromSttb(hsttb, i)$?
DoContentHit	wordtech\select.c	?^DoContentHit(pt, fShift, fOption, fCommand)$?
DocActive	wordtech\select.c	?^DocActive()$?
DocCpRefFromWw	wordtech\scroll.c	?^DocCpRefFromWw(ww, pcp, pcpMom)$?
DypScanAbove	wordtech\scroll.c	?^int DypScanAbove(ww, dyp, pcdl)$?
EidMouseAction	wordtech\select.c	?^EidMouseAction()$?
EmptySttb	wordtech\sttb.c	?^EmptySttb(hsttb)$?
EndFbb	wordtech\savefast.c	?^EndFbb()$?
EndSsc	wordtech\selectsp.c	?^EndSsc(fDoIt)$?
EnsureSelInWw	wordtech\select.c	?^EnsureSelInWw(fExtend, psel)$?
EraseStcRetargetMappings	wordtech\stysubs.c	?^EraseStcRetargetMappings(mpstcSrcstcDest, rgstcRet?
FAdjustPicFc	wordtech\savefast.c	?^FAdjustPicFc(doc, cpRun, fnDest, cpPicFirst)$?
FAnyDlNotInXw	wordtech\select.c	?^FAnyDlNotInXw(ww, fLeft)$?
FAppendFnFetchPcdToFbb	wordtech\savefast.c	?^FAppendFnFetchPcdToFbb()$?
FAppendToStyleName	wordtech\stysubs.c	?^NATIVE FAppendToStyleName(stActual, stName) /* WIN?
FBeginSsc	wordtech\selectsp.c	?^FBeginSsc()$?
FCaIsGraphics	wordtech\select.c	?^FCaIsGraphics(pca, ww, pcpImport)$?
FChangeSelToStyCol	wordtech\selecttb.c	?^FChangeSelToStyCol(psel, pcpFirst, xw, hpldr, pidr?
FChangeStInSttb	wordtech\sttb.c	?^EXPORT FChangeStInSttb(hsttb, ibst, pst)$?
FCheckTooManyBtes	wordtech\savefast.c	?^FCheckTooManyBtes(hplcbte, pfkpd)$?
FChkNamesMatchOneStyle	wordtech\stysubs.c	?^NATIVE FChkNamesMatchOneStyle(stNew, pstsh, pstcMa?
FCopyStInSttb	wordtech\stysubs.c	?^FCopyStInSttb(hsttb, stcpOld, stcpNew)$?
FCopyStyleToDestStsh	wordtech\stysubs.c	?^FCopyStyleToDestStsh(docSrc, pstshSrc, hsttbChpeSr?
FCopyStyleWithinStsh	wordtech\stysubs.c	?^FCopyStyleWithinStsh(doc, stcFrom, stcTo)$?
FCopySubname	wordtech\stysubs.c	?^NATIVE FCopySubname(stSrc, stName, pcchSrc, pichSr?
FCreateStshNormalStc	wordtech\stysubs.c	?^FCreateStshNormalStc(pstsh, phsttbChpe, phsttbPape?
FDoContentHitColumn	wordtech\selecttb.c	?^FDoContentHitColumn(psel, cp, idr, pcaInTable, pdl?
FEndVisible	wordtech\select.c	?^BOOL FEndVisible(ww)$?
FEnsureSttbCb	wordtech\sttb.c	?^FEnsureSttbCb(hsttb, cb)$?
FExpandSttbRgbst	wordtech\sttb.c	?^FExpandSttbRgbst(hsttb, ibstMaxNew)$?
FFileWriteError	wordtech\savefast.c	?^NATIVE FFileWriteError()$?
FGenChpxPapxNewBase	wordtech\stysubs.c	?^FGenChpxPapxNewBase(doc, stcp)$?
FGenPapeFromOldPape	wordtech\stysubs.c	?^FGenPapeFromOldPape(stcp, stcpOld, cstcStd, hsttbP?
FGtBst	wordtech\sttb.c	?^FGtBst(hpbst1, hpbst2)$?
FGtL	wordtech\savefast.c	?^FGtL(l1, l2)$?
FGtStyleNamStc	wordtech\stysubs.c	?^FGtStyleNamStc(stc1, stc2)$?
FHookTableKeymap	wordtech\select.c	?^BOOL FHookTableKeymap()$?
FInsStInSttb	wordtech\sttb.c	?^FInsStInSttb(hsttb, ibstNew, pst)$?
FInsStInSttb1	wordtech\sttb.c	?^int FInsStInSttb1(hsttb, ibstNew, pst, pchExtra)$?
FMatchDefinedAndStdStyles	wordtech\stysubs.c	?^NATIVE FMatchDefinedAndStdStyles(hsttb, cstcStd, s?
FMatchSubnamesInSt	wordtech\stysubs.c	?^NATIVE FMatchSubnamesInSt(st, stName, fPartial, pf?
FMatchSubnamesInStExact	wordtech\stysubs.c	?^NATIVE FMatchSubnamesInStExact(st, stName) /* WINI?
FMoveCopyFromTo	wordtech\selectsp.c	?^FMoveCopyFromTo(fMove, fRM, pcaFrom, pcaTo, fOutli?
FParasUpToCpInTable	wordtech\selecttb.c	?^FParasUpToCpInTable(pcaInTable, cp)$?
FPrepareDocForSave	wordtech\savefast.c	?^FPrepareDocForSave (pdsr, fCompleteSave)$?
FQuickSave	wordtech\savefast.c	?^FQuickSave(fnDest, pdsr, fCompleteSave, pmsr)$?
FQuicksaveChps	wordtech\savefast.c	?^FQuicksaveChps(pdsr)$?
FQuicksavePaps	wordtech\savefast.c	?^FQuicksavePaps(pdsr)$?
FQuicksaveStsh	wordtech\savefast.c	?^FQuicksaveStsh(fFirstAttempt)$?
FQuicksaveText	wordtech\savefast.c	?^FQuicksaveText()$?
FRecalcAllDependentChpePape	wordtech\stysubs.c	?^FRecalcAllDependentChpePape(pstsh, hsttbChpe, hstt?
FRetargetStcBaseNext	wordtech\stysubs.c	?^FRetargetStcBaseNext(doc, stcDel, stcMapTo, phples?
FSaveTbls	wordtech\savefast.c	?^FSaveTbls()$?
FScrollPageDyeHome	wordtech\scroll.c	?^FScrollPageDyeHome(ww, dye, fHome, ncp, fNoNewPage?
FSearchStshSttbRgstc	wordtech\stysubs.c	?^FSearchStshSttbRgstc(hsttb, cstcStd, st, rgstc, pi?
FSearchSttb	wordtech\sttb.c	?^FSearchSttb(hsttb, st, pibst, pfnWCompSt)$?
FSelAnchoredInTable	wordtech\select.c	?^FSelAnchoredInTable(psel, pcaCell, pcaTapAnchor, p?
FSelectDlPt	wordtech\select.c	?^FSelectDlPt(psel, hpldr, idr, dl, pt, sty, fExtend?
FSscClick	wordtech\select.c	?^#define	FSscClick()	(fFalse)$?
FStcpStyleBaseChanged	wordtech\stysubs.c	?^FStcpStyleBaseChanged(pstsh, stcpCheck, stcpChange?
FStorePropeForStcp	wordtech\stysubs.c	?^FStorePropeForStcp(pprope, stcp, hsttb, fChp)$?
FStretchSttb	wordtech\sttb.c	?^FStretchSttb(hsttb, cst, cb)$?
FStretchSttbCb	wordtech\sttb.c	?^EXPORT FStretchSttbCb(hsttb, cb)$?
FValidMomSub	wordtech\selectsp.c	?^FValidMomSub(pcaFrom, pcaTo, fMove)$?
FValidStyleName	wordtech\stysubs.c	?^FValidStyleName(stName)$?
FValidSub	wordtech\selectsp.c	?^FValidSub(pdodBase, pca, edc, eid)$?
FWhiteSpaceCh	wordtech\select.c	?^NATIVE int FWhiteSpaceCh(ch)$?
FcDestFromCpSrc	wordtech\savefast.c	?^FcDestFromCpSrc(cpPieceFirst, doc, cfc, pfcDestTex?
FcDestIprcFromCfgrPrc	wordtech\savefast.c	?^FcDestIprcFromCfgrPrc(pfcDest, piprc, cfgrPrc)$?
FirstCaForSels	wordtech\stysubs.c	?^FirstCaForSels(psels, pca)$?
FlushFbb	wordtech\savefast.c	?^FlushFbb()$?
FreeHsttb	wordtech\sttb.c	?^FreeHsttb(hsttb)$?
FreePhsttb	wordtech\sttb.c	?^FreePhsttb(phsttb)$?
GenApplyStcPermuteToDoc	wordtech\stysubs.c	?^GenApplyStcPermuteToDoc(doc, stcFrom, stcTo)$?
GenFilePropxFromProp	wordtech\stysubs.c	?^GenFilePropxFromProp(rgbResult, pprop, ppropBase, ?
GetCaCharBlock	wordtech\select.c	?^GetCaCharBlock(ww, doc, cp, pca, pcpVisi)$?
GetMajorityChp	wordtech\stysubs.c	?^GetMajorityChp(pca, pchp)$?
GetMajoritySelsChp	wordtech\stysubs.c	?^GetMajoritySelsChp(psels, pchp)$?
GetMultiValueMaj	wordtech\stysubs.c	?^int GetMultiValueMaj(pfoo, pvoteFoo)$?
GetPchpDocCpFIns	wordtech\select.c	?^EXPORT GetPchpDocCpFIns (pchp, doc, cp, fIns, ww)$?
GetSelCurChp	wordtech\select.c	?^EXPORT GetSelCurChp (fGetInsPtProps)$?
GetStcBaseNextForStcp	wordtech\stysubs.c	?^GetStcBaseNextForStcp(pstsh, stcp, pstcBase, pstcN?
HpbstFirstSttb	wordtech\sttb.c	?^int HUGE *HpbstFirstSttb(hsttb)$?
HpchExtraFromSttb	wordtech\sttb.c	?^CHAR HUGE *HpchExtraFromSttb(hsttb, i)$?
Hpfoo	wordtech\sttb.c	?^#define Hpfoo(i)		((char HUGE *)rgfoo + (cbFoo * (?
HsttbAssocEnsure	wordtech\sttb.c	?^HsttbAssocEnsure (doc)$?
HsttbInit	wordtech\sttb.c	?^struct STTB **HsttbInit(cwEstimate, fExternal)$?
HsttbInit1	wordtech\sttb.c	?^struct STTB **HsttbInit1(cwEstimate, ibstMax, cbEx?
IbstAddStToSttb	wordtech\sttb.c	?^EXPORT IbstAddStToSttb(hsttb, pst)$?
IbstFindSt	wordtech\sttb.c	?^EXPORT IbstFindSt(hsttb, st)$?
IbstFromStyleName	wordtech\stysubs.c	?^IbstFromStyleName(doc, stName)$?
IclptPtInRect	wordtech\selecttb.c	?^IclptPtInRect(rgclpt1, rgclpt2)$?
InitFkpdFromFkp	wordtech\savefast.c	?^InitFkpdFromFkp(pfkp, pfkpd, pn)$?
InvalAllDependentPadPgd	wordtech\stysubs.c	?^InvalAllDependentPadPgd(pstsh, hsttbChpe, hsttbPap?
InvalAllPheEntries	wordtech\stysubs.c	?^InvalAllPheEntries(hplcphe)$?
InvalPadPgdForStc	wordtech\stysubs.c	?^InvalPadPgdForStc(doc, stc)$?
InvalStyleEntry	wordtech\stysubs.c	?^InvalStyleEntry(pstsh, hsttbChpe, hsttbPape, stcp)?
LDist2RcPt	wordtech\select.c	?^long LDist2RcPt(prc, pt)$?
LcbExtHplc	wordtech\savefast.c	?^long LcbExtHplc(hplc)$?
MakeExtendSel	wordtech\select.c	?^MakeExtendSel(psel, cpFirst, cpLim, grpf)$?
MakeSelCurVisi	wordtech\select.c	?^MakeSelCurVisi(fForceBlockToIp)$?
MakeSelNonTable	wordtech\selecttb.c	?^MakeSelNonTable(psel, cpNew)$?
MakeStcpEntryNull	wordtech\stysubs.c	?^MakeStcpEntryNull(stcp, pstsh, hsttbChpe, hsttbPap?
MakeStshNonShrink	wordtech\stysubs.c	?^MakeStshNonShrink(doc)$?
MoveEdls	wordtech\scroll.c	?^MoveEdls(pwwdFrom, pwwdTo, dlFrom, dlTo, cdl)$?
MultiValueVote	wordtech\stysubs.c	?^MultiValueVote(rgfoo, rgvoteFoo, foo, vote)$?
MwdHorzScroll	wordtech\scroll.c	?^void MwdHorzScroll(ww, code, dqThumb)$?
MwdVertScroll	wordtech\scroll.c	?^void MwdVertScroll(ww, code, dqThumb)$?
OutlineSelCheck	wordtech\select.c	?^OutlineSelCheck(psel)$?
PstFromSttb	wordtech\sttb.c	?^NATIVE char *PstFromSttb(hsttb, i) /* WINIGNORE - ?
QuicksaveCommands	wordtech\savefast.c	?^QuicksaveCommands()$?
QuicksaveMacros	wordtech\savefast.c	?^QuicksaveMacros()$?
QuicksavePlc	wordtech\savefast.c	?^QuicksavePlc(hplc, pfc, pcb, pfcDestLim, cpCorrect?
QuicksaveSttb	wordtech\savefast.c	?^QuicksaveSttb(hsttb, pfc, pcb, pfcDestLim)$?
RefreshPage	wordtech\scroll.c	?^RefreshPage(ww)$?
ReportQuickSavePercent	wordtech\savefast.c	?^#define ReportQuickSavePercent(cp1,cp2,cp3)		\\$?
ResetDocStsh	wordtech\stysubs.c	?^ResetDocStsh(doc, fMinimal)$?
RestoreStcFromBackup	wordtech\stysubs.c	?^RestoreStcFromBackup()$?
RestoreStcpAndDependentsDefn	wordtech\stysubs.c	?^RestoreStcpAndDependentsDefn(doc, stcpRestore, pch?
RestoreStcpDefn	wordtech\stysubs.c	?^RestoreStcpDefn(doc, stcp, pchp, ppap)$?
RetrieveHplcsed	wordtech\savefast.c	?^RetrieveHplcsed(fn, doc, pnFib)$?
RetrieveNextNonDestCp	wordtech\savefast.c	?^RetrieveNextNonDestCp(pcpMinPiece, pdoc, pcfc, pwi?
RetrievePropeForStcp	wordtech\stysubs.c	?^RetrievePropeForStcp(ppropeResult, stcp, hsttb, fC?
ScrollDown	wordtech\scroll.c	?^ScrollDown(ww, dypLow, dypHigh)$?
ScrollDown2	wordtech\scroll.c	?^ScrollDown2(ww, idr, dypLow, dypHigh, fUseScc)$?
ScrollPageDye	wordtech\scroll.c	?^ScrollPageDye(ww, dye)$?
ScrollUp	wordtech\scroll.c	?^ScrollUp(ww, dypLow, dypHigh)$?
ScrollUpEnd	wordtech\scroll.c	?^ScrollUpEnd(ww, dyp)$?
ScrollWwDyw	wordtech\scroll.c	?^ScrollWwDyw(ww, dyw, ywTop)$?
SeekFbbToFc	wordtech\savefast.c	?^SeekFbbToFc(fc)$?
Select	wordtech\select.c	?^Select(psel, cpFirst, cpLim)$?
Select1	wordtech\select.c	?^Select1(psel, cpFirst, cpLim, grpf)$?
SelectColumn	wordtech\selecttb.c	?^SelectColumn(psel, cpFirst, cpLim, itcFirst, itcLi?
SelectColumnTo	wordtech\selecttb.c	?^SelectColumnTo(psel, cpNew, itc, pcaTapAnchor, itc?
SelectIns	wordtech\select.c	?^SelectIns(psel, cpFirst)$?
SelectRow	wordtech\selecttb.c	?^SelectRow(psel, cpFirst, cpLim)$?
SetMacsScc	wordtech\scroll.c	?^SetMacsScc(pscc)$?
SetPageDisp	wordtech\scroll.c	?^SetPageDisp(ww, ipgd, ye, fSetNorm, fNorm)$?
SetPromptVssc	wordtech\selectsp.c	?^SetPromptVssc()$?
SetPselSels	wordtech\select.c	?^SetPselSels(psel, psels)$?
SetScrollHoriz	wordtech\scroll.c	?^SetScrollHoriz(ww, dxpScroll)$?
SetSelCellBits	wordtech\select.c	?^EXPORT SetSelCellBits(psel)$?
SetSelWw	wordtech\select.c	?^SetSelWw(psel, ww)$?
SetSelsIns	wordtech\select.c	?^SetSelsIns(psels, doc, cp)$?
SetStcBaseNextForStcp	wordtech\stysubs.c	?^SetStcBaseNextForStcp(pstsh, stcp, stcBase, stcNex?
SetUndoAfterMove	wordtech\selectsp.c	?^SetUndoAfterMove(pca, ww)$?
SetWwCpFirst	wordtech\scroll.c	?^SetWwCpFirst(ww, cpFirst)$?
ShrinkSelToTableSty	wordtech\selecttb.c	?^ShrinkSelToTableSty(psel, itcAnchor, idr, pcaTapAn?
SortRg	wordtech\sttb.c	?^SortRg(rgfoo, ifooMac, cbFoo, pfnFGt)$?
SortSiftUpRg	wordtech\sttb.c	?^SortSiftUpRg(rgfoo, ifooI, ifooN, pfnFGt, cbFoo, r?
SortSttb	wordtech\sttb.c	?^SortSttb(hsttb)$?
StToSzInPlace	wordtech\sttb.c	?^StToSzInPlace( pch )$?
StcpCreateNewStyle	wordtech\stysubs.c	?^StcpCreateNewStyle(doc, fUseReserve)$?
Sttb_Last	wordtech\sttb.c	?^Sttb_Last(){}$?
SynchCheck	wordtech\scroll.c	?^SynchCheck(ww, fCkVisibility)$?
SynchRef	wordtech\scroll.c	?^SynchRef(ww, fCkVisibility)$?
ThumbPage	wordtech\scroll.c	?^ThumbPage(ww, dqThumb, dqThumbOld)$?
ThumbToCp	wordtech\scroll.c	?^ThumbToCp(ww, cp, fEnd, fNoOpt, ncp)$?
ToggleSel	wordtech\select.c	?^ToggleSel(psel, cpFirst, cpLim)$?
ToggleSel1	wordtech\select.c	?^ToggleSel1(psel, hpldr/*hwwd*/, cpFirst, cpLim)$?
TranslateStUpper	wordtech\stysubs.c	?^NATIVE TranslateStUpper(st) /* WINIGNORE - MAC onl?
TurnOffSel	wordtech\select.c	?^TurnOffSel(psel)$?
TurnOnSel	wordtech\select.c	?^TurnOnSel(psel)$?
TurnOnSelCur	wordtech\select.c	?^TurnOnSelCur()$?
UnhookTableKeymap	wordtech\select.c	?^UnhookTableKeymap()$?
UpdateFib	wordtech\savefast.c	?^UpdateFib(pdsr, pmsr)$?
UpdateFib30	wordtech\savefast.c	?^UpdateFib30(ccpText, ccpFtn, ccpHdd)$?
WCompHpst	wordtech\sttb.c	?^NATIVE int WCompHpst(hpst1, hpst2) /* WINIGNORE - ?
WbFromCh	wordtech\select.c	?^NATIVE int WbFromCh(ch)$?
WriteChps	wordtech\savefast.c	?^NATIVE WriteChps(doc, fnDest, cpFirst, ccpRun, fcD?
WriteFib	wordtech\savefast.c	?^WriteFib(fn, pfib, pn)$?
WritePaps	wordtech\savefast.c	?^NATIVE WritePaps(doc, fnDest, cpFirst, ccpRun, fcD?
WritePlToFn	wordtech\savefast.c	?^WritePlToFn(hpl, fn, pfc,  pcb)$?
WriteSttbToFile	wordtech\savefast.c	?^WriteSttbToFile(hsttb, fn, pfc)$?
ZeroFileRange	wordtech\savefast.c	?^ZeroFileRange(fn, fcFirst, fcLim)$?
if	wordtech\select.c	?^else  if (fCpInAnchorCell)$?
ApplySetBrcPca	wordtech\tablecmd.c	?^ApplySetBrcPca(itcFirst, itcLim, brck, brc, pca)$?
ApplySprmTDxaCol	wordtech\tablecmd.c	?^ApplySprmTDxaCol(itcFirst, itcLim, dxaCol, dxaColu?
CInsertEmptyTable	wordtech\tableins.c	?^CInsertEmptyTable(doc, cpFirst, cRows, cColumns, p?
CInsertNewRows	wordtech\tableins.c	?^CInsertNewRows(doc, cpFirst, cRows, cColumns, ptap?
CbGenTablePapxFromPap	wordtech\tablesub.c	?^CbGenTablePapxFromPap(doc, ppap, ppapx)$?
CleanTableChp	wordtech\tablesub.c	?^CleanTableChp(doc, pchp)$?
CleanTablePap	wordtech\tablesub.c	?^CleanTablePap(ppap, doc, fClearBorders, clrIndents?
ClearBottomBrc	wordtech\tablecmd.c	?^ClearBottomBrc(itcFirst, itcLim, brc, pca)$?
CmdCopyTable	wordtech\tablecmd.c	?^CmdCopyTable(psel, docDest)$?
CmdCutTable	wordtech\tablecmd.c	?^CmdCutTable(psel, docDest, fSetUndo)$?
CmdDelTableCells	wordtech\tablecmd.c	?^CmdDelTableCells(fShiftVert)$?
CmdDelTableColumns	wordtech\tablecmd.c	?^CmdDelTableColumns(fExpand)$?
CmdDelTableRows	wordtech\tablecmd.c	?^CmdDelTableRows()$?
CmdInsTableCells	wordtech\tablecmd.c	?^CmdInsTableCells(fShiftVert)$?
CmdInsTableColumns	wordtech\tablecmd.c	?^CmdInsTableColumns(fExpand)$?
CmdInsTableRows	wordtech\tablecmd.c	?^CmdInsTableRows()$?
CmdMergeCells	wordtech\tablecmd.c	?^CmdMergeCells(psel)$?
CmdNextCell	wordtech\tablesub.c	?^CMD CmdNextCell(pcmb)$?
CmdPasteRowsColumns	wordtech\tablesub.c	?^CmdPasteRowsColumns(docSrc, fColumns, fConverted, ?
CmdPasteTableToCell	wordtech\tablesub.c	?^CmdPasteTableToCell()$?
CmdPasteTextToCell	wordtech\tablesub.c	?^CmdPasteTextToCell()$?
CmdPasteToTable	wordtech\tablesub.c	?^CmdPasteToTable()$?
CmdPrevCell	wordtech\tablesub.c	?^CMD CmdPrevCell(pcmb)$?
CmdSplitCells	wordtech\tablecmd.c	?^CmdSplitCells(psel)$?
CmdTableToTablePaste	wordtech\tablesub.c	?^CmdTableToTablePaste(pcaSrc, itcFirstSrc, pcaDest,?
CountRowsPca	wordtech\tablesub.c	?^CountRowsPca(pca)$?
CpTableFirst	wordtech\tablesub.c	?^CpTableFirst(doc,cp)$?
CpTableLim	wordtech\tablesub.c	?^CP CpTableLim(doc, cp)$?
DcpInsertNewRow	wordtech\tableins.c	?^DcpInsertNewRow(doc, cpFirst, fUseNext, pcaSrc)$?
DxaMaxGapFromCa	wordtech\tablesub.c	?^DxaMaxGapFromCa(pca)$?
DxaMinCellFromCa	wordtech\tablesub.c	?^DxaMinCellFromCa(pca)$?
DxaMinWidthFromTap	wordtech\tablesub.c	?^DxaMinWidthFromTap(ptap)$?
ExtendPcaParas	wordtech\tableins.c	?^ExtendPcaParas(pca)$?
ExtendPselsRows	wordtech\tablesub.c	?^ExtendPselsRows(psels)$?
ExtendSelCurColumns	wordtech\tablesub.c	?^ExtendSelCurColumns()$?
FApplyRgbrcRow	wordtech\tablecmd.c	?^FApplyRgbrcRow(rgbrc, itcFirst, itcLim, caRow, fLa?
FApplyRgbrcTap	wordtech\tablecmd.c	?^FApplyRgbrcTap(rgbrc, fEveryCell, pcaApply)$?
FCheckPcaEndDoc	wordtech\tableins.c	?^FCheckPcaEndDoc(pca)$?
FCheckTablePasteWidth	wordtech\tablesub.c	?^FCheckTablePasteWidth(pca, itcFirst, dtc)$?
FConvertPcaToTable	wordtech\tablesub.c	?^FConvertPcaToTable(pca, cCols)$?
FEopBeforePca	wordtech\tableins.c	?^BOOL FEopBeforePca(pca)$?
FFormatTablePca	wordtech\tableins.c	?^FFormatTablePca(pca, pcaUndo, tblfmt, cRows, cColu?
FGetTapState	wordtech\tablecmd.c	?^BOOL FGetTapState(pca, fAll)$?
FInsTableCCells	wordtech\tableins.c	?^FInsTableCCells(doc, cpFirst, cCells, pchp, ppap)$?
FInsertCellMark	wordtech\tableins.c	?^FInsertCellMark(pca, pchp, ppapx, cchPapx, stcBase?
FInsertNCellMarks	wordtech\tableins.c	?^FInsertNCellMarks(doc, cpFirst, cMarks, pchp, ppap?
FInsertRowMark	wordtech\tableins.c	?^FInsertRowMark(pca, pchp, ppap)$?
FInsertTableColumns	wordtech\tablecmd.c	?^FInsertTableColumns(doc, cpFirst, pcpLim, itcFirst?
FMergeOk	wordtech\tablecmd.c	?^FMergeOk(psel)$?
FNextCell	wordtech\tablesub.c	?^FNextCell()$?
FOkExpandTable	wordtech\tablecmd.c	?^FOkExpandTable(pca, fWholeTable, itcFirst, itcLim,?
FOneCharEop	wordtech\tableins.c	?^FOneCharEop(doc, cp)$?
FPcaWholeTable	wordtech\tablesub.c	?^FPcaWholeTable(pca)$?
FPrevCell	wordtech\tablesub.c	?^FPrevCell()$?
FSelWithinTable	wordtech\tablesub.c	?^FSelWithinTable(psel)$?
FSelectNextPrevCell	wordtech\tablesub.c	?^BOOL FSelectNextPrevCell(dtc)$?
FSplitOk	wordtech\tablecmd.c	?^FSplitOk(psel)$?
FTableInPca	wordtech\tablesub.c	?^FTableInPca(pca)$?
FTableToTextSelCur	wordtech\tableins.c	?^FTableToTextSelCur(tblfmt)$?
FWholeRowsPsel	wordtech\tablesub.c	?^FWholeRowsPsel(psel)$?
FixUpFirstColumn	wordtech\tablecmd.c	?^FixUpFirstColumn(pca)$?
GetCellBorders	wordtech\tablecmd.c	?^GetCellBorders(rgbrc, psel)$?
InvalTableCp	wordtech\tablesub.c	?^InvalTableCp(doc, cpFirst, dcp)$?
ItcFromDocCp	wordtech\tablesub.c	?^ItcFromDocCp(doc, cp)$?
ItcMacPca	wordtech\tablesub.c	?^ItcMacPca(pca)$?
ItcMinItcItcMacPca	wordtech\tablesub.c	?^ItcMinItcItcMacPca(itcMin, pca)$?
ItcNonMerged	wordtech\tablesub.c	?^ItcNonMerged(itc, ptap)$?
ItcsFromPsel	wordtech\tablesub.c	?^ItcsFromPsel(pitcFirst, pitcLim, psel)$?
ItcsFromSelCur	wordtech\tablesub.c	?^ItcsFromSelCur(pitcFirst, pitcLim)$?
PcaCell	wordtech\tablesub.c	?^struct CA *PcaCell(pca, doc, cp)$?
PcaColumnItc	wordtech\tablesub.c	?^struct CA *PcaColumnItc(pca, pcaRow, itc)$?
PcaExpandInvalTable	wordtech\tablesub.c	?^struct CA *PcaExpandInvalTable(pca, pcaSrc)$?
PcaExpandWholeTable	wordtech\tablesub.c	?^struct CA *PcaExpandWholeTable(pca, pcaSrc)$?
PcaTable	wordtech\tablesub.c	?^struct CA *PcaTable(pca, doc, cp)$?
RgWidthFromCenter	wordtech\tablecmd.c	?^RgWidthFromCenter(pdxaWidth, pdxaCenter, ptc, itcM?
SelectNextPrevCell	wordtech\tablesub.c	?^SelectNextPrevCell(dtc)$?
SetWidthOfColumns	wordtech\tablecmd.c	?^SetWidthOfColumns(doc, cp, itcFirst, itcLim, dxaCo?
TblFormatScanSel	wordtech\tableins.c	?^TblFormatScanSel(psel, prgCorw)$?
TcFromTap	wordtech\tablecmd.c	?^TcFromTap(ptc,ptap,itcFirst,itcLim)$?
TckCkTextOkForTable	wordtech\tablesub.c	?^TckCkTextOkForTable(pca)$?
AdjustCaReplace	wordtech\undo.c	?^AdjustCaReplace(pcaAdjust, pcaDelete, pcaInsert, f?
C_MiscPlcLoops	wordtech\util.c	?^HANDNATIVE C_MiscPlcLoops(hplc, iFirst, iLim, pRes?
C_PtOrigin	wordtech\util.c	?^HANDNATIVE struct PT C_PtOrigin(hpldr, idr)$?
CchNonZeroPrefix	wordtech\util.c	?^HANDNATIVE int CchNonZeroPrefix(rgb, cbMac)$?
CmdUndo	wordtech\undo.c	?^CMD CmdUndo(pcmb)$?
CpMac1Doc	wordtech\util.c	?^HANDNATIVE CP CpMac1Doc(doc)$?
CpMac2Doc	wordtech\util.c	?^HANDNATIVE CP CpMac2Doc(doc)$?
CpMacDoc	wordtech\util.c	?^HANDNATIVE CP CpMacDoc(doc)$?
CpMacDocEdit	wordtech\util.c	?^HANDNATIVE CP CpMacDocEdit(doc)$?
CpMax	wordtech\util.c	?^HANDNATIVE CP CpMax(cp1, cp2)$?
CpMin	wordtech\util.c	?^HANDNATIVE CP CpMin(cp1, cp2)$?
DcpCa	wordtech\util.c	?^HANDNATIVE CP DcpCa(pca)$?
DocBaseWw	wordtech\util.c	?^NATIVE int DocBaseWw(ww) /* WINIGNORE - pcode in W?
DocDotMother	wordtech\util.c	?^HANDNATIVE int DocDotMother (doc)$?
DocMother	wordtech\util.c	?^HANDNATIVE int DocMother(doc)$?
DrcToRc	wordtech\util.c	?^HANDNATIVE DrcToRc(pdrc, prc)$?
DrclToRcw	wordtech\util.c	?^HANDNATIVE DrclToRcw(hpldr/*or hwwd*/, pdrcl, prcw?
DrcpToRcl	wordtech\util.c	?^HANDNATIVE DrcpToRcl(hpldr, idr, pdrcp, prcl)$?
DrcpToRcw	wordtech\util.c	?^HANDNATIVE DrcpToRcw(hpldr/*or hwwd*/, idr, pdrcp,?
DxOfRc	wordtech\util.c	?^DxOfRc(prc)$?
DxaFromDxp	wordtech\util.c	?^HANDNATIVE DxaFromDxp(pwwd, dxp)$?
DxpFromDxa	wordtech\util.c	?^HANDNATIVE DxpFromDxa(pwwd, dxa)$?
DxsSetDxsInch	wordtech\util.c	?^NATIVE int DxsSetDxsInch(doc)$?
DyOfRc	wordtech\util.c	?^DyOfRc(prc)$?
FDocInWw	wordtech\undo.c	?^FDocInWw(doc, ww)$?
FEmptyRc	wordtech\util.c	?^HANDNATIVE FEmptyRc(prc)$?
FHasFields	wordtech\util.c	?^BOOL FHasFields (doc)$?
FInCa	wordtech\util.c	?^HANDNATIVE int FInCa(doc, cp, pca)$?
FIsectIval	wordtech\util.c	?^HANDNATIVE int FIsectIval(pca, cpFirst, cpLim)$?
FKcmInter	wordtech\util.c	?^NATIVE int FKcmInter() /* WINIGNORE - unused in WI?
FNeChp	wordtech\util.c	?^HANDNATIVE int FNeChp(pchp1, pchp2) /* WINIGNORE -?
FNeHprgch	wordtech\util.c	?^NATIVE int FNeHprgch(hprgb1, hprgb2, cb) /* WINIGN?
FNeRgch	wordtech\util.c	?^HANDNATIVE int FNeRgch(rgb1, rgb2, cb)$?
FNeRgw	wordtech\util.c	?^HANDNATIVE int FNeRgw(rgw1, rgw2, cw)$?
FNeSt	wordtech\util.c	?^HANDNATIVE int FNeSt(st1, st2)$?
FOverlapCa	wordtech\util.c	?^FOverlapCa(pca1, pca2)$?
FSectRc	wordtech\util.c	?^NATIVE FSectRc(prc1, prc2) /* WINIGNORE - unused i?
FStcpEntryIsNull	wordtech\util.c	?^FStcpEntryIsNull(hsttb, stcp)$?
FreePdrf	wordtech\util.c	?^#define FreePdrf(pdrf) \\$?
GetStFromSttb	wordtech\util.c	?^NATIVE GetStFromSttb(hsttb, i, st)$?
HpInPl	wordtech\util.c	?^NATIVE int HUGE *HpInPl(hplFoo, iFoo)$?
HpstFromSttb	wordtech\util.c	?^NATIVE CHAR HUGE *HpstFromSttb(hsttb, i)$?
HszCreate	wordtech\util.c	?^char (**HszCreate(sz))[]$?
HwwdWw	wordtech\util.c	?^HANDNATIVE struct WWD **HwwdWw(ww)$?
IMacPl	wordtech\util.c	?^int IMacPl( hpl )$?
IpadMac	wordtech\util.c	?^NATIVE IpadMac(hplcpad) /* WINIGNORE - macro if WI?
LpInitUtil	wordtech\util.c	?^native long LpInitUtil(lpmh4) /* WINIGNORE - unuse?
MoveRc	wordtech\util.c	?^MoveRc(prc, xp, yp)$?
PcaPoint	wordtech\util.c	?^HANDNATIVE struct CA *PcaPoint(pca, doc, cp)$?
PcaSet	wordtech\util.c	?^HANDNATIVE struct CA *PcaSet(pca, doc, cpFirst, cp?
PcaSetDcp	wordtech\util.c	?^HANDNATIVE struct CA *PcaSetDcp(pca, doc, cpFirst,?
PcaSetNil	wordtech\util.c	?^HANDNATIVE struct CA *PcaSetNil(pca)$?
PcaSetWholeDoc	wordtech\util.c	?^HANDNATIVE struct CA *PcaSetWholeDoc(pca, doc)$?
PdodMother	wordtech\util.c	?^HANDNATIVE struct DOD *PdodMother(doc)$?
PdrFetch	wordtech\util.c	?^#define PdrFetch(hpldr, idr, pdrf) \\$?
PdrFetchAndFree	wordtech\util.c	?^#define PdrFetchAndFree(hpldr, idr, pdrf) \\$?
PdrFreeAndFetch	wordtech\util.c	?^#define PdrFreeAndFetch(hpldr, idr, pdrf) \\$?
PdrWw	wordtech\util.c	?^struct DR *PdrWw(ww, idr)$?
PmwdMw	wordtech\util.c	?^HANDNATIVE struct MWD *PmwdMw(mw)$?
PmwdWw	wordtech\util.c	?^HANDNATIVE struct MWD *PmwdWw(ww)$?
PtOrigin	wordtech\util.c	?^NATIVE struct PT PtOrigin(hpldr, idr) /* WINIGNORE?
PwwdWw	wordtech\util.c	?^HANDNATIVE struct WWD *PwwdWw(ww)$?
RcToDrc	wordtech\util.c	?^HANDNATIVE RcToDrc(prc, pdrc)$?
RceToRcw	wordtech\util.c	?^HANDNATIVE RceToRcw(pwwd, prce, prcw)$?
RclToRcw	wordtech\util.c	?^HANDNATIVE RclToRcw(hpldr, prcl, prcw)$?
RcpToRcw	wordtech\util.c	?^HANDNATIVE RcpToRcw(hpldr/* or hwwd*/, idr, prcp, ?
RcwToRcl	wordtech\util.c	?^HANDNATIVE RcwToRcl(hpldr, prcw, prcl)$?
RcwToRcp	wordtech\util.c	?^HANDNATIVE RcwToRcp(hpldr/* or hwwd*/, idr, prcw, ?
SectRc	wordtech\util.c	?^HANDNATIVE SectRc(prc1, prc2, prcDest)$?
UnionRc	wordtech\util.c	?^NATIVE UnionRc(prc1, prc2, prcDest) /* WINIGNORE -?
WwFromHwwd	wordtech\util.c	?^NATIVE int WwFromHwwd(hwwd) /* WINIGNORE - in-line?
XaFromXw	wordtech\util.c	?^NATIVE XaFromXw(hwwd, idr, xw) /* WINIGNORE - unus?
XeFromXl	wordtech\util.c	?^NATIVE XeFromXl(hwwd, xl) /* WINIGNORE - unused in?
XeFromXw	wordtech\util.c	?^NATIVE XeFromXw(hwwd, xw) /* WINIGNORE - unused in?
XlFromXe	wordtech\util.c	?^NATIVE XlFromXe(hwwd, xe) /* WINIGNORE - unused in?
XlFromXw	wordtech\util.c	?^NATIVE XlFromXw(hpldr, xw) /* WINIGNORE - unused i?
XpFromXw	wordtech\util.c	?^HANDNATIVE XpFromXw(hpldr/*hwwd*/, idr, xw)$?
XwFromXa	wordtech\util.c	?^NATIVE XwFromXa(hwwd, idr, xa) /* WINIGNORE - unus?
XwFromXe	wordtech\util.c	?^NATIVE XwFromXe(hwwd, xe) /* WINIGNORE - coded in-?
XwFromXl	wordtech\util.c	?^HANDNATIVE XwFromXl(hpldr, xl)$?
XwFromXp	wordtech\util.c	?^HANDNATIVE XwFromXp(hpldr/*hwwd*/, idr, xp)$?
YlFromYw	wordtech\util.c	?^NATIVE YlFromYw(hpldr, yw) /* WINIGNORE - unused i?
YpFromYw	wordtech\util.c	?^HANDNATIVE YpFromYw(hpldr/*hwwd*/, idr, yw)$?
YwFromYl	wordtech\util.c	?^HANDNATIVE YwFromYl(hpldr, yl)$?
YwFromYp	wordtech\util.c	?^HANDNATIVE YwFromYp(hpldr/*hwwd*/, idr, yp)$?
abs	wordtech\util.c	?^HANDNATIVE int abs(x)$?
max	wordtech\util.c	?^HANDNATIVE int max(x, y)$?
min	wordtech\util.c	?^HANDNATIVE int min(x, y)$?
umax	wordtech\util.c	?^HANDNATIVE uns umax(u1, u2)$?
umin	wordtech\util.c	?^HANDNATIVE uns umin(u1, u2)$?
Break1	wordtech\word.h	?^#define Break1()$?
Break2	wordtech\word.h	?^#define Break2()	Break2Proc()$?
Break3	wordtech\word.h	?^#define Break3()$?
BreakW	wordtech\word.h	?^#define BreakW(w)	BreakWProc(w)$?
CColM1Sep	wordtech\layout.h	?^#define CColM1Sep(sep)          (sep.ccolM1)$?
CColSep	wordtech\layout.h	?^#define CColSep(sep)            (sep.ccolM1 + 1)$?
CHAR	wordtech\file.h	?^typedef CHAR (far *LPRGBPEXT) [cbSector];$?
CacheSectL	wordtech\layout.h	?^#define CacheSectL(doc, cp, fOutline) CacheSectBod?
CopyCsSt	wordtech\word.h	?^#define CopyCsSt(qstFrom, pstTo)  bltbx(qstFrom, (?
CopyCsSz	wordtech\word.h	?^#define CopyCsSz(qszFrom, pszTo)  bltbx(qszFrom, (?
CpFirstRef	wordtech\layout.h	?^#define CpFirstRef(doc, cp, pcp, edc) CpFirstFtn(d?
CpMacDocEditL	wordtech\layout.h	?^#define CpMacDocEditL(doc, cp)  CpMacDocEdit(doc)$?
CpMacDocEditPlbs	wordtech\layout.h	?^#define CpMacDocEditPlbs(plbs)  CpMacDocEdit(plbs-?
CpMacDocPlbs	wordtech\layout.h	?^#define CpMacDocPlbs(plbs)      CpMacDoc(plbs->doc?
CpRefFromCpSub	wordtech\layout.h	?^#define CpRefFromCpSub(doc, cp, edc) CpRefFromCpFt?
CwFromCch	wordtech\word.h	?^#define CwFromCch(cch)	(((unsigned)((cch) + sizeof?
DocFtn	wordtech\layout.h	?^#define DocFtn(doc)             (PdodDoc(doc)->doc?
DocMother	wordtech\layout.h	?^#define DocMother(doc)          (doc)$?
DxFromBrc	wordtech\border.h	?^#define DxFromBrc(brc, fFrameLines) DxyFromBrc(brc?
DxOfLineFromBrc	wordtech\border.h	?^#define DxOfLineFromBrc(brc, fFrameLines) \\$?
DxaAllColumnsSep	wordtech\layout.h	?^#define DxaAllColumnsSep(sep)	(sep.cColumns * (sep?
DxyFromBrc	wordtech\border.h	?^#define DxyFromBrc(brc, fFrameLines, fWidth)	\\$?
DxyOfLineFromBrc	wordtech\border.h	?^#define DxyOfLineFromBrc(brc, fFrameLines, fWidth)?
DyFromBrc	wordtech\border.h	?^#define DyFromBrc(brc, fFrameLines) DxyFromBrc(brc?
DyOfLineFromBrc	wordtech\border.h	?^#define DyOfLineFromBrc(brc, fFrameLines) \\$?
DypBaseFli	wordtech\layout.h	?^#define DypBaseFli(fli)         (fli.dypBase)$?
DzFromBrc	wordtech\border.h	?^#define DzFromBrc(brc, fFrameLines) \\$?
DzOfLineFromBrc	wordtech\border.h	?^#define DzOfLineFromBrc(brc, fFrameLines) \\$?
EndGuarantee	wordtech\word.h	?^#define EndGuarantee()		(vfAllocGuaranteed--)$?
ErrorEid	wordtech\error.h	?^#define ErrorEid(eid,szF)        ErrorEidProc(eid,?
ErrorEidRgw	wordtech\error.h	?^#define ErrorEidRgw(eid,rgw,szF) ErrorEidRgwProc(e?
ErrorEidSz	wordtech\error.h	?^#define ErrorEidSz(eid,sz,szF)   ErrorEidSzProc(ei?
ErrorEidW	wordtech\error.h	?^#define ErrorEidW(eid,w,szF)     ErrorEidWProc(eid?
FAbortLayout	wordtech\layout.h	?^#define FAbortLayout(fOutline)	FAbortRequest()$?
FAbsPapM	wordtech\layout.h	?^#define FAbsPapM(doc, ppap)	FAbsPap(doc, ppap)$?
FDrawPageDrsWw	wordtech\word.h	?^#define FDrawPageDrsWw(ww)   FDrawPageDrsPref$?
FDrawTableDrsWw	wordtech\word.h	?^#define FDrawTableDrsWw(ww)  FDrawTableDrsPref$?
FEmerg1	wordtech\layout.h	?^#define FEmerg1(merr)           (merr.hrgwEmerg1 =?
FEndnoteSep	wordtech\layout.h	?^#define FEndnoteSep(sep)        (sep.fEndnote)$?
FFacingPagesPdod	wordtech\layout.h	?^#define FFacingPagesPdod(pdod)	(pdod->dop.fFacingP?
FFromIGrpf	wordtech\field.h	?^#define FFromIGrpf(i,grpf)      (((1<<i) & grpf) ??
FFtnDoc	wordtech\layout.h	?^#define FFtnDoc(doc)            (PdodDoc(doc)->fFt?
FFtnsPdod	wordtech\layout.h	?^#define FFtnsPdod(pdod)         (pdod->hplcfrd != ?
FInTablePap	wordtech\layout.h	?^#define FInTablePap(pap)        (pap.fInTable)$?
FInTableVPapFetch	wordtech\layout.h	?^#define FInTableVPapFetch(doc, cp) (fFalse)$?
FKeepPap	wordtech\layout.h	?^#define FKeepPap(pap)           (pap.fKeep)$?
FLnnPap	wordtech\layout.h	?^#define FLnnPap(pap)            (!pap.fNoLnn)$?
FLnnSep	wordtech\layout.h	?^#define FLnnSep(sep)            (sep.nLnnMod)$?
FNilHdt	wordtech\layout.h	?^#define FNilHdt(ihdt)           (vrghdt[ihdt].hpll?
FPageBreakBeforePap	wordtech\layout.h	?^#define FPageBreakBeforePap(pap)  (pap.fPageBreakB?
FPgnRestartSep	wordtech\layout.h	?^#define FPgnRestartSep(sep)     (sep.fPgnRestart)$?
FSetRgwDiff	wordtech\word.h	?^#define FSetRgwDiff(pwBase, pwNew, pwDiff, cw) \\$?
FSxsLrk	wordtech\layout.h	?^#define FSxsLrk(lrk)		(lrk == lrkSxs)$?
FTitlePageSep	wordtech\layout.h	?^#define FTitlePageSep(sep)      (sep.fTitlePage)$?
FWidowPdod	wordtech\layout.h	?^#define FWidowPdod(pdod)        (fFalse)$?
FormatLineDxaL	wordtech\layout.h	?^#define FormatLineDxaL(ww, doc, cp, dxa) FormatLin?
FreeHp	wordtech\word.h	?^#define FreeHp(hp)	FreeQ(hp)$?
FreeHq	wordtech\word.h	?^#define FreeHq(hq)	FreeQq(hq)$?
FreePhpl	wordtech\layout.h	?^#define FreePhpl(phpl)          FreePh(phpl)$?
Grpfpi	wordtech\file.h	?^#define Grpfpi(fpi1,fpi2,fpi3,fpi4)    (((fpi1)&0x?
HmudUserPdod	wordtech\doc.h	?^#define HmudUserPdod(pdod)      ((MUD **) (pdod)->?
HpAlloc	wordtech\word.h	?^#define HpAlloc(l)	QAlloc(l)$?
HpBaseForIbp	wordtech\word.h	?^#define HpBaseForIbp(ibp) ((char far *)&vbptbExt.h?
HpbpsHpIbp	wordtech\file.h	?^#define HpbpsHpIbp(hpmpibpbps, ibp)  \\$?
HpllrInit	wordtech\layout.h	?^#define HpllrInit(cb, ilrMac)	HplInit(cb, ilrMac)$?
HprcFromPprmComplex	wordtech\prm.h	?^#define HprcFromPprmComplex(pprm) ((struct PRC **)?
HqAllocLcb	wordtech\word.h	?^#define HqAllocLcb(l)	QqAlloc(l)$?
HwwdWw	wordtech\disp.h	?^#define HwwdWw(ww)	((struct WWD **)N_HwwdWw(ww))$?
IMacPllr	wordtech\layout.h	?^#define IMacPllr(plbs)          (*(plbs)->hpllr)->?
IfMacElse	wordtech\layout.h	?^#define IfMacElse(a, b)        	(a)$?
IfPCWordElse	wordtech\layout.h	?^#define IfPCWordElse(a, b)      (b)$?
IfWinElse	wordtech\layout.h	?^#define IfWinElse(a, b)         (b)$?
IibpHash	wordtech\file.h	?^#define IibpHash(fn, pn, iibpHashMax) (((fn) * 33 ?
IifdFromFlt	wordtech\field.h	?^#define IifdFromFlt(flt) (flt - (fltInfo + 1))$?
InvalCellCache	wordtech\field.h	?^#define InvalCellCache() (vcaCell.doc = docNil)$?
InvalFli	wordtech\format.h	?^#define InvalFli()      vfli.ww = wwNil$?
InvalLlc	wordtech\word.h	?^#define InvalLlc()$?
InvalVisiCache	wordtech\field.h	?^#define InvalVisiCache() vdocFetchVisi = docNil; v?
IpadMac	wordtech\word.h	?^#define IpadMac(hplcpad) (IMacPlc(hplcpad)-2)$?
IpgdCurrentWw	wordtech\disp.h	?^#define IpgdCurrentWw(ww)	(PwwdWw(ww)->ipgd)$?
LpFromHp	wordtech\word.h	?^#define LpFromHp(hp)	((int far *)(hp))$?
LpFromHq	wordtech\word.h	?^#define LpFromHq(hq)	(*(int far * far *)(hq))$?
LpLockHp	wordtech\word.h	?^#define LpLockHp(hp)	((int far *) (hp))$?
LrpInPl	wordtech\layout.h	?^#define LrpInPl(hpllr, ilr)	((struct LR *)PInPl(hp?
LvlFromUcm	wordtech\outline.h	?^#define LvlFromUcm(ucm)		(ucm - ucmOtl1)$?
Mac	wordtech\layout.h	?^#define Mac(a)$?
MovePwToPch	wordtech\word.h	?^#define MovePwToPch(pw, pch)	*(int *)pch = *(pw)$?
PdodDoc	wordtech\doc.h	?^#define PdodDoc(doc)    ((struct DOD *)(__FNATIVE_?
PdodMother	wordtech\doc.h	?^#define PdodMother(doc) ((struct DOD *)N_PdodMothe?
PdopDoc	wordtech\doc.h	?^#define	PdopDoc(doc) (&(PdodDoc(doc)->dop))$?
PdrGalley	wordtech\disp.h	?^#define PdrGalley(pwwd)         (&(pwwd)->rgdr[0])?
PfcbFn	wordtech\file.h	?^#define PfcbFn(fn)	((struct FCB *)N_PfcbFn(fn))$?
PmwdMw	wordtech\disp.h	?^#define PmwdMw(mw)	((struct MWD *)N_PmwdMw(mw))$?
PmwdWw	wordtech\disp.h	?^#define PmwdWw(ww)	((struct MWD *)N_PmwdWw(ww))$?
PsccWw	wordtech\word.h	?^#define PsccWw(ww)	((struct SCC *)PwwdWw(ww))$?
PutPlcLast	wordtech\doc.h	?^#	define PutPlcLast(h, i, pch)  PutPlcLastDebugPro?
PwwdWw	wordtech\disp.h	?^#define PwwdWw(ww)	((struct WWD *)N_PwwdWw(ww))$?
ReadHprgchFromFn	wordtech\word.h	?^#define ReadHprgchFromFn(fn, hpch, cch) ScanFnForB?
ReadRgchFromFn	wordtech\word.h	?^#define ReadRgchFromFn(fn, pch, cch) ScanFnForByte?
RecordStshForDocNoExcp	wordtech\props.h	?^#define RecordStshForDocNoExcp(doc, pstsh) bltb(&P?
SectRc	wordtech\word.h	?^#define SectRc(prc1,prc2,prcDest) FSectRc(prc1,prc?
Select	wordtech\word.h	?^#define Select(psel, cpFirst, cpLim)	(Select1(psel?
SelectIns	wordtech\word.h	?^#define SelectIns(psel, cpFirst)    (Select1(psel,?
SetBytes	wordtech\word.h	?^#define SetBytes(pb, w, cb) bltbcx(w, (char far *)?
SetHairline	wordtech\word.h	?^#define SetHairline()$?
SetIMacPllr	wordtech\layout.h	?^#define SetIMacPllr(plbs, i)    ((*(plbs)->hpllr)-?
SetLayoutAbort	wordtech\layout.h	?^#define SetLayoutAbort()        SetJmp(&venvLayout?
SetSelCurSels	wordtech\word.h	?^#define SetSelCurSels(psels)   (SetPselSels(&selCu?
SetVdocStsh	wordtech\props.h	?^#define SetVdocStsh(doc) (vdocStsh = DocMother(doc?
SetWords	wordtech\word.h	?^#define SetWords(pw, w, cw) bltcx(w, (int far *)(p?
St	wordtech\word.h	?^#define St(s)		StringMap(s, 1, 1)$?
StFrame	wordtech\word.h	?^#define StFrame(s)	StringMap(s, 1, 1)  /* init st,?
StFrameKey	wordtech\word.h	?^#define StFrameKey(s, key)	StringMap(s, 1, 1, key)?
StGlobal	wordtech\word.h	?^#define StGlobal(s)	StringMap(s, 1, 0)  /* init st?
StGlobalKey	wordtech\word.h	?^#define StGlobalKey(s, key)	StringMap(s, 1, 0, key?
StKey	wordtech\word.h	?^#define StKey(s, key)	StringMap(s, 1, 1, key)$?
StNear	wordtech\word.h	?^#define StNear(s)	((char *)(s))	/* copies global c?
StShared	wordtech\word.h	?^#define StShared(s)	StringMap(s, 1, 2)  /* init st?
StSharedKey	wordtech\word.h	?^#define StSharedKey(s, key)	StringMap(s, 1, 2, key?
StartGuaranteedHeap	wordtech\word.h	?^#define StartGuaranteedHeap()	(vfAllocGuaranteed++?
StartProfile	wordtech\layout.h	?^#define StartProfile()	$?
StcFromStcp	wordtech\props.h	?^#define StcFromStcp(stcp, cstcStd) (((stcp) - (cst?
StcpFromStc	wordtech\props.h	?^#define StcpFromStc(stc, cstcStd) (((stc) + (cstcS?
SzFrame	wordtech\word.h	?^#define SzFrame(s)	StringMap(s, 0, 1)  /* init sz,?
SzFrameKey	wordtech\word.h	?^#define SzFrameKey(s, key)	StringMap(s, 0, 1, key)?
SzGlobalKey	wordtech\word.h	?^#define SzGlobalKey(s, key)	StringMap(s, 0, 0, key?
SzKey	wordtech\word.h	?^#define SzKey(s, key)	StringMap(s, 0, 1, key)$?
SzNear	wordtech\word.h	?^#define SzNear(s)	((char *)(s))	/* copies global c?
SzShared	wordtech\word.h	?^#define SzShared(s)	StringMap(s, 0, 2)  /* init st?
SzSharedKey	wordtech\word.h	?^#define SzSharedKey(s, key)	StringMap(s, 0, 2, key?
Tbd	wordtech\props.h	?^#define Tbd(jc, tlc) ((jc << 5) + (tlc << 2))$?
TurnOffPtrCheck	wordtech\word.h	?^#define TurnOffPtrCheck()	(fCheckPtr = fFalse)$?
TurnOnPtrCheck	wordtech\word.h	?^#define TurnOnPtrCheck()	(fCheckPtr = fTrue)$?
UnlockHp	wordtech\word.h	?^#define UnlockHp(hp)$?
UnlockHq	wordtech\word.h	?^#define UnlockHq(hq)	UnlockQq(hq)$?
Win	wordtech\word.h	?^#	define	Win(foo)	foo$?
WinMac	wordtech\layout.h	?^#define WinMac(win, mac)        (mac)$?
WriteHprgchToFn	wordtech\word.h	?^#define WriteHprgchToFn(fn, hpch, cch) ScanFnForBy?
WriteRgchToFn	wordtech\word.h	?^#define WriteRgchToFn(fn, pch, cch)	ScanFnForBytes?
XaFromXl	wordtech\layout.h	?^#define XaFromXl(xl)            (NMultDiv(xl, dxaI?
XlFromXa	wordtech\layout.h	?^#define XlFromXa(xa)            (NMultDiv(xa, vfli?
YaFromYl	wordtech\layout.h	?^#define YaFromYl(yl)           (NMultDiv(yl, czaIn?
YlFromYa	wordtech\layout.h	?^#define YlFromYa(ya)            ((ya) / dyaPoint)$?
bltLrp	wordtech\layout.h	?^#define bltLrp(lrp1, lrp2, cb)	blt(lrp1, lrp2, cb ?
cbof	wordtech\word.h	?^#define cbof(foo)  sizeof(foo)$?
cwof	wordtech\word.h	?^#define cwof(foo)  CwFromCch(cbof(foo))$?
offset	wordtech\word.h	?^#define offset(s, field)      ((uns)&(((struct s *?
trie_ch	wordtech\hyph.h	?^#define trie_ch(hptrie)  (hptrie->ch)$?
trie_op	wordtech\hyph.h	?^#define trie_op(hptrie)  (hptrie->op)$?
trie_yes	wordtech\hyph.h	?^#define trie_yes(hptrie) ((hptrie->yes << 8) + (hp?
